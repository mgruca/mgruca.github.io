<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.0.1" created="2015-01-26 22:46" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Here Be Dragons!</title>
	<link>http://rits.pl</link>
	<description>Reliable IT Solutions</description>
	<pubDate>Mon, 26 Jan 2015 22:46:18 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://rits.pl</wp:base_site_url>
	<wp:base_blog_url>http://rits.pl</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>Eladamari</wp:author_login><wp:author_email>michal.gruca+wp@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Michał Gruca]]></wp:author_display_name><wp:author_first_name><![CDATA[Michał]]></wp:author_first_name><wp:author_last_name><![CDATA[Gruca]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>english</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[English]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>polish</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Polish]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>33degree</wp:tag_slug><wp:tag_name><![CDATA[33degree]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>architecture</wp:tag_slug><wp:tag_name><![CDATA[architecture]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>book-review</wp:tag_slug><wp:tag_name><![CDATA[book review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>conference</wp:tag_slug><wp:tag_name><![CDATA[conference]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>craftsmanship</wp:tag_slug><wp:tag_name><![CDATA[craftsmanship]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>date</wp:tag_slug><wp:tag_name><![CDATA[Date]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>design</wp:tag_slug><wp:tag_name><![CDATA[design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>geb</wp:tag_slug><wp:tag_name><![CDATA[geb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>hackathon</wp:tag_slug><wp:tag_name><![CDATA[hackathon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>jug</wp:tag_slug><wp:tag_name><![CDATA[jug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>learning</wp:tag_slug><wp:tag_name><![CDATA[learning]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>mongodb</wp:tag_slug><wp:tag_name><![CDATA[MongoDB]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>mutability</wp:tag_slug><wp:tag_name><![CDATA[Mutability]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>news</wp:tag_slug><wp:tag_name><![CDATA[news]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>soft-skills</wp:tag_slug><wp:tag_name><![CDATA[soft skills]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>tapestry5</wp:tag_slug><wp:tag_name><![CDATA[Tapestry5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>tdd</wp:tag_slug><wp:tag_name><![CDATA[tdd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>techniques</wp:tag_slug><wp:tag_name><![CDATA[techniques]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>tricity</wp:tag_slug><wp:tag_name><![CDATA[tricity]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>unit-tests</wp:tag_slug><wp:tag_name><![CDATA[unit tests]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>windows-firewall</wp:tag_slug><wp:tag_name><![CDATA[Windows firewall]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=4.0.1</generator>

	<item>
				<title>${helloWorld}</title>
		<link>http://rits.pl/2010/10/01/hello-world-2/</link>
		<pubDate>Fri, 01 Oct 2010 22:10:36 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[Witam wszystkich

Nazywam się Michał Gruca i od 3 lat programuję zawodowo. Do pracy wykorzystuje język Java, gdyż to zetknięcie z tą technologią przekonało mnie by obrać taką a nie inną ścieżkę rozwoju. Java zauroczyła mnie od pierwszego spotkania, a ten blog to jedynie kolejny krok w moim rozwoju. Postaram się podzielić zebranym dotąd doświadczeniem, i liczę na komentarze z konstruktywną krytyką, wspierającą mnie w podążaniu naprzód.

W kilku kolejnych tematach będę pewnie monotematycznie o Tapestry 5 pisać, ale mam zamiar w przyszłości urozmaicić tematykę.

Zakładając bloga miałem poważną zagwozdkę w jakim języku pisać, zdecydowałem się na Polski. Póki nie oswoję się z ideą blogowania to pewnie tak pozostanie, później pomyślimy. Proszę również o odrobinę wyrozumiałości. Dotąd pisałem jedynie mało poważnego <a href="http://eladamari.blox.pl/html" target="_blank">bloga w trakcie stażu</a>. Jego głównym celem było pozwolić mi trzymać się zasady <a href="http://pl.wikipedia.org/wiki/DRY" target="_blank">DRY</a> (choć wtedy o istnieniu tej zasady jeszcze nie wiedziałem) i nie odpisywać każdemu z osobna co u mnie. Pierwszą przygodę z blogowaniem zakończyłem jak ostatnia ciamajda: zmieniłem hasło na koncie na tak bezpieczne, że sam go nie znam :E

No to tyle tytułem wstępu. Koniec nudnej gadki. Avanti! W głąb VMu ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2010-10-01 22:10:36</wp:post_date>
		<wp:post_date_gmt>2010-10-01 22:10:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1286401916]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>About Me</title>
		<link>http://rits.pl/about/</link>
		<pubDate>Fri, 01 Oct 2010 22:10:36 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://rits.pl/wp-content/uploads/2010/10/0407_JDD_bb_m.jpg"><img class="alignright size-medium wp-image-457" alt="Me :)" src="http://rits.pl/wp-content/uploads/2010/10/0407_JDD_bb_m-199x300.jpg" width="199" height="300" /></a>

Seasoned Java developer, Team Leader and Solution Architect. In human language I’m: writing and reviewing code, saving world with a vim via ssh around Saturday midnights, deciding about technology used in the project and ﬁlling a communication gap between client and developers.
After 7 year long adventure with Java, still passionate about the platform, even after having romance with
Excel and Outlook. Pragmatist at heart and propagator of Agile approach to building software.
Tricity JUG leader, conference speaker and blogger, that aims to share his knowledge on
ways how to build software.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2010-10-01 22:10:36</wp:post_date>
		<wp:post_date_gmt>2010-10-01 22:10:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sharing_disabled</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[About Michał Gruca]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Michal Gruca, Java, Developer, Architect, Team Leader, Speaker]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Couple of words about who I am, what I'm doing and why I'm doing that]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Przygotowania do pracy z Tapestry 5</title>
		<link>http://rits.pl/2010/10/06/przygotowania-do-pracy-z-tapestry-5-2/</link>
		<pubDate>Wed, 06 Oct 2010 21:52:38 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[No to jak zapowiedziałem, zaczynamy monotematyczność Tapestrową. Pierwszy wpis będzie, jak mam nadzieję, najmniej interesujący z całej serii. Zaczniemy od zapoznania się z moim warsztatem. Jeśli macie problem z tymi narzędziami to śmiało piszcie, kilku kombinacji używałem podczas poszukiwań tej najbardziej mi pasującej.
<ol>
	<li>Eclipse jako IDE. Posiada mnóstwo wtyczek + jestem przyzwyczajony do niego. Pracuje się mi z nim najwygodniej, choć w pracy przekabacają mnie na <em>Ideowca</em>.</li>
	<li>maven + wtyczka m2 do eclipsa</li>
	<li>run-jetty-run -dla tych co nie przepadają za mavenem. Wtyczka pozwala na uruchomienie Jettiego bezpośrednio w workspacie eclipsa. Posiada jeszcze jedną zaletę: bez kombinowania odpala aplikację. Przydatne według mnie w projektach testowych, gdy wystarczy nam budowanie aplikacji poprzez IDE</li>
</ol>
I to wszystko. Tapestry jest proste, nie wymaga wybitnego wsparcia. Polecam jednak skorzystać z <a href="http://wiki.apache.org/tapestry/Tapestry5JSPEditorEclipse" target="_blank">tego hacka</a> oraz dodać <a href="http://wiki.apache.org/tapestry/Tapestry5HowToEclipseCodeTemplates" target="_blank">kilka templatów</a>. Pozwoli to łatwiej edytować strony. Istnieje również wtyczka Loom do eclipsa, ale nie wiem czy projekt jeszcze żyje. Z innych IDE wiem, że Idea oferuje jakieś wsparcie dla T5, ale nigdy w pracy nie miałem czasu przetestować co dokładnie wspiera.

Od następnego wpisu zaczynamy pracę z tapestry. Postaram się teorią za bardzo nie nudzić.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2010-10-06 23:52:38</wp:post_date>
		<wp:post_date_gmt>2010-10-06 21:52:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>przygotowania-do-pracy-z-tapestry-5-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1286401958]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808008]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>95.40.32.109</wp:comment_author_IP>
			<wp:comment_date>2010-10-12 10:53:02</wp:comment_date>
			<wp:comment_date_gmt>2010-10-12 08:53:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[IDEA posiada wsparcie dla Tapestry 5 - możliwe, ale nie w wersji Community Edition, bo takowa nie posiada modułu pracy z Javą EE, co jest ogromnym ograniczeniem. Sam przez to w najnowszym projekcie musiałem przenieść się ponownie na Eclipse (ale w wersji Galileo).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1287091427]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383461]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2010-10-17 12:36:17</wp:comment_date>
			<wp:comment_date_gmt>2010-10-17 10:36:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[W pracy próbują ze mnie profesjonalnego Ideowca zrobić więc mi to umknęło. Po prawdzie to do T5 nic nie ma właściwego wsparcia i wszystko ma wystarczające. Jeśli mamy edytor javy to jest już dobrze, a jak bonusowo będzie podpowiadanie tagów HTML i składni css to chyba nic więcej nie trzeba. No może żeby goals mavenowe dało się uruchamiać albo jettiego/tomcata w projeckie co by z livereload czerpać pełnymi garściami.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1287311778]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383462]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Zaczynamy pierwszy projekt w Tapestry 5</title>
		<link>http://rits.pl/2010/10/09/zaczynamy-pierwszy-projekt-w-tapestry-5/</link>
		<pubDate>Sat, 09 Oct 2010 11:24:47 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Tak jak obiecałem w poprzednim wpisie: czas zacząć pracę. Projekt stworzymy z wykorzystaniem mavena. W Eclipsie z wtyczką m2 New -&gt; Maven -&gt; Maven Project, na ekranie wyboru archetypu wybieramy która wersja nas interesuje. Obecnie wybieramy pomiędzy Tapestry 5.1.0.5 a 5.2.1-snapshot. Pierwszy to stabilna wersja, drugi jest jeszcze rozwijany, ale w wpisach będę się odwoływać do zawartych w 5.2 nowościach. Zmiany nie są poważne, ale podążają przyjętą w Tapestry ścieżką stabilnego rozwoju, co związane jest z burzliwą historią frameworku, ale o tym innym razem.  <a href="http://tapestry.apache.org/tapestry5.2-dev/quickstart/" target="_blank">Jeszcze referencja </a>do tutoriala pokazującego jak rozpocząć projekt korzystając z konsoli Mavena.  W obu przypadkach otrzymujemy projekt podobny z tym przedstawionym na zrzucie ekranowym. Sam obrazek jest odnośnikiem do dokumentacji opisującej strukturę projektów.<a href="http://tapestry.apache.org/tapestry5.1/guide/project-layout.html"><img class="alignleft" title="Układ projektu Tapestry" src="http://tapestry.apache.org/tapestry5.1/images/projectlayout.png" alt="tapestry-project-layout" width="347" height="579" /></a></p>
<p>O ile w wielu szkieletach aplikacyjnych układ pakietów nie ma najmniejszego znaczenia, o tyle w Tapestry jest to podstawa konfiguracji. Już wyjaśniam, T5 kieruje się zasadą <em>convention over configuration</em>, której jednym z przejawów jest układ katalogów.  Podobne podejście znać mogą użytkownicy np grailsów. Pomijając strukturę mavenową, istotne jest umiejscowienie kilku pakietów. Tapestry skanuje nasz projekt od głównego korzenia  (<em>package root</em> - w tym przypadku <em>com.example.myapp</em>) w poszukiwaniu pakietów o nazwach:</p>
<ul>
<li>services</li>
<li>pages</li>
<li>components</li>
<li>mixins</li>
</ul>
<p>Dodatkowe moduły (np integracja z hibernatem) mogą dodać kolejne domyślne lokalizacje, ale tylko wymienione trzeba znać, a spokojnie można pominąć nawet mixins.</p>
<p>Mając już strukturę podobną do tej widocznej obok, możemy uruchomić to co powstało poprzez wtyczkę run-jetty-run / wtyczkę/konsolę mavena / spakowanie całości do pliku war i uruchomienie w kontenerze aplikacyjnym (jetty czy tomcat wystarczy).</p>
<p>W przypadku run-jetty-run niezbędne jest podanie dodatkowo jako vm argumentu <em> -Dorg.mortbay.jetty.webapp.parentLoaderPriority=true</em> Znalazłem dziś działającego następce run-jetty-run. Można go znaleźć na <a href="http://code.google.com/p/itguides/" target="_blank">google code</a> Działa tak samo, ale pozwala nam korzystać z nowszej wersji Jetty i własnej konfiguracji serwera.</p>
<p>Uruchamiając mavenem jako goal podajemy <em>jetty:run</em></p>
<p>Informacje jak skonfigurować inne IDE możemy znaleźć na <a href="http://wiki.apache.org/tapestry/Tapestry5HowTos" target="_blank">Tapestry Wiki</a> w sekcji <em>Preparing your development environment</em></p>
<p>A następnym razem zaczniemy kodować i pozmieniamy trochę strony.</p>
<p>&nbsp;</p>
<p>BTW mam skłonności do offtopicowania, upominajcie mnie proszę jak zacznę za bardzo od tematu odbiegać :)</p>
<p><a href="http://tapestry.apache.org/tapestry5.2-dev/quickstart/" target="_blank"><br />
</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2010-10-09 13:24:47</wp:post_date>
		<wp:post_date_gmt>2010-10-09 11:24:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zaczynamy-pierwszy-projekt-w-tapestry-5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1286623487]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1135607271]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>img_1702_cr.jpg</title>
		<link>http://rits.pl/?attachment_id=219</link>
		<pubDate>Sun, 05 Jun 2011 17:58:50 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2011/06/img_1702_cr.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://rits.pl/wp-content/uploads/2011/06/img_1702_cr.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2011-06-05 19:58:50</wp:post_date>
		<wp:post_date_gmt>2011-06-05 17:58:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img_1702_cr-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2011/06/img_1702_cr.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/img_1702_cr.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"3353";s:6:"height";s:4:"2362";s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:23:"2011/06/img_1702_cr.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"img_1702_cr-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"img_1702_cr-300x211.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"211";}s:5:"large";a:3:{s:4:"file";s:24:"img_1702_cr-1024x721.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"721";}s:14:"post-thumbnail";a:3:{s:4:"file";s:24:"img_1702_cr-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:24:"img_1702_cr-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:23:"img_1702_cr-425x300.jpg";s:5:"width";s:3:"425";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"5.6";s:6:"credit";s:0:"";s:6:"camera";s:13:"Canon EOS 60D";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1267740772";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"69";s:3:"iso";s:3:"160";s:13:"shutter_speed";s:7:"0.00625";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Some thoughts on Tapestry 5</title>
		<link>http://rits.pl/?p=264</link>
		<pubDate>Wed, 30 Nov 2011 17:22:49 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[So after nearly 2 months of working with T5 it's time to share some experience.

For those of you who don't know me so well, let me explain that for last 2-3 years I was promoting heavily T5 whenever I had occasion. I gave some speeches at Tricity JUG, wrote couple posts on this blog and tried to create as much buzz as I could. My guess is that most people think about me as a fanboy, and probably they are right. In my opinion I've got a lot of points why I prefer to work with T5 rather than with other frameworks. On the same time I've never had problem to work with e.g. Spring or struts, and I must admit that in those 3 years Spring started to catch up with T5.

Right, so back to the main topic. I've finally got <a title="What I’m doing in UK" href="http://mgruca.wordpress.com/2011/11/20/what-im-doing-in-uk/">occasion</a> to look at large project code base written in T5 and here are some thoughts I want to share.

<strong>Local state of pages</strong>

Let's start from thing that I thought that is one of greatest strenghts of Tapestry. I radically changed my mind now and think that it may be greatest curse for your application.

By default all fields in pages and their values are bounded to user session. There is no threat of sharing state  between users if we'll start using fields in a page objects. And we don't even have to clean up after ourselves. How is that possible?

What Tapestry do in background is packing all variables  into Map and put them into session. When user comes back to page, values are being repopulated from map. Howard described that several times on his <a title="Howard Lewis Ship post about handling state in T5 pages" href="http://tapestryjava.blogspot.com/2010/07/everyone-out-of-pool-tapestry-goes.html" target="_blank">blog</a>.

<strong><strong>Debbugger issues</strong> </strong>

<strong>Cleanliness</strong>

<strong>Pure java</strong>

<strong>Testability</strong>

<strong>Overall experience</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2011-11-30 19:22:49</wp:post_date>
		<wp:post_date_gmt>2011-11-30 17:22:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Testing, the way of the software developer</title>
		<link>http://rits.pl/?p=323</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=323</guid>
		<description></description>
		<content:encoded><![CDATA[Nope, sadly it's not another blog post about how good it is to go follow TDD way and enter 100% coverage church. Internet is full of them, just go and find yourself one. In this post, I'm intending to rant how hard it is to do TDD. Sorry, that's how I feel it. But first a short]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2012-03-06 23:21:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Just one public class per package</title>
		<link>http://rits.pl/?p=377</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=377</guid>
		<description></description>
		<content:encoded><![CDATA[Some time ago, on Warsaw Java User Group, I read a note from presentation about idea of Jakub Nabrdalik. From what  I understood, Jakub proposed to create just one public class in each package. I like the idea, and as I still love Tapestry 5 (even more after working with it for half a year and getting back to Spring now), I combined the two. But we'll get back to that later.

The main reason why I like that technique, is that from architecture perspective it's just leveraging idea of encapsulation.

My idea regards topic discussed one of the thing with my own way and the result reminded me about <a title="Igor Drobiazko - Tapestry IOC vs OSGI" href="http://blog.tapestry5.de/index.php/2010/01/19/tapestry-ioc-modularization-of-web-applications-without-osgi/">old article by Igor Drobiazko</a>, which always inspired me and took whole thing to another level.
In my opinion That's simplest way to build highly modular and plugable applications.
From architectural point of view, it's the easiest way to leverage encapsulation to a higher level. It's easier to hide package scope classes and other implementation details. It's easy to control which modules can use out utilities/frameworks. It's easier to test without leaking implementation to all collaborators.
The one public class becomes facade fit whole module. We encapsulate details of business process in set of package classes. And in case that some functionality is system wide needed we can easily refector by increasing visibility and building new module.
what worth noticing is that such module after adding an interface may be just one of implementations our a plugin.
During discussion someone asked how to build such modules (reduced visibility affects possible ways in which we can build the class), and I had an idea which lead me to this while post.
In going to show building those modules using Tapestry IOC. That may be possible to do in other way but with usage of second mechanism we'll get highly plugable architecture.

One thing with mentioning it's that Tapestry scans class path at the start in search for sub modules. This way we don't have to do anything and we get OSGI like mechanism for free.
Using that in our favor we may build instantly systems for different clients. No more branching per client needed, no more if/switches or hacking couple of min before release. Clean and simple build with various pom/gradle files for a client or a global configuration panel. We could extend it even more and use Tapestry ability to build highly dynamic pages and build navigation menus and show functionalities based on provided components and services.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>377</wp:post_id>
		<wp:post_date>2012-05-29 16:26:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>draftfeedback_requests</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:21:"lgurniewicz@gmail.com";a:3:{s:3:"key";s:13:"4fc528a7e95b5";s:4:"time";s:10:"1338321063";s:7:"user_id";s:8:"15995486";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Blog</title>
		<link>http://rits.pl/</link>
		<pubDate>Sat, 08 Sep 2012 19:26:48 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?page_id=386</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date>2012-09-08 19:26:48</wp:post_date>
		<wp:post_date_gmt>2012-09-08 19:26:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[blog.php]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>cropped-stock-photo-20796978-internet-security-cloud-padlock-concept.jpg</title>
		<link>http://rits.pl/?attachment_id=391</link>
		<pubDate>Sat, 22 Dec 2012 17:58:22 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2012/12/cropped-stock-photo-20796978-internet-security-cloud-padlock-concept.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://rits.pl/wp-content/uploads/2012/12/cropped-stock-photo-20796978-internet-security-cloud-padlock-concept.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2012-12-22 19:58:22</wp:post_date>
		<wp:post_date_gmt>2012-12-22 17:58:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-stock-photo-20796978-internet-security-cloud-padlock-concept-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2012/12/cropped-stock-photo-20796978-internet-security-cloud-padlock-concept.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:348;s:6:"height";i:312;s:4:"file";s:80:"2012/12/cropped-stock-photo-20796978-internet-security-cloud-padlock-concept.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:80:"cropped-stock-photo-20796978-internet-security-cloud-padlock-concept-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:80:"cropped-stock-photo-20796978-internet-security-cloud-padlock-concept-300x268.jpg";s:5:"width";i:300;s:6:"height";i:268;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/12/cropped-stock-photo-20796978-internet-security-cloud-padlock-concept.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[responsive]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>IMG_1702</title>
		<link>http://rits.pl/about/img_1702/</link>
		<pubDate>Mon, 31 Dec 2012 15:55:14 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2010/10/IMG_1702.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[me :D]]></excerpt:encoded>
		<wp:post_id>433</wp:post_id>
		<wp:post_date>2012-12-31 17:55:14</wp:post_date>
		<wp:post_date_gmt>2012-12-31 15:55:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img_1702</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>6</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2010/10/IMG_1702.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/IMG_1702.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:720;s:6:"height";i:719;s:4:"file";s:20:"2010/10/IMG_1702.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"IMG_1702-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"IMG_1702-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Flashback from 33degree 2013 - Hackathon</title>
		<link>http://rits.pl/?p=440</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=440</guid>
		<description></description>
		<content:encoded><![CDATA[Bit late, but  I could not help much about it. 33degree was great, as usual not much to add. 3 days of Rock Star Speakers with topnotch talks and no one can argue about that :) There were already enough post written about it, so I'm simply going to skip that part ;) The only thing that I'm going to say about quality of conference is that I'm going to vote with my wallet and register for next year edition.

But to the point. Main reason why I write this post is to share experience from Open Data Hackathon.

When? Who? Where?

Tuesday evening, day before the conference started, <a title="Kuba Marchwicki Twitter stream" href="https://twitter.com/kubem" target="_blank">Kuba Marchwicki</a> with <a href="http://epf.org.pl/" target="_blank">Fundacja ePaństwo</a> (eGoverment Foundation) and thanks to the 33degree organizers (Thanks Grzegorz), gave as access to room Agat (+ a stash of beer ^^).

We started on Tuesday and were working till the last day of conference. After last keynote we've been given time on a main stage to present results of our work.

But what you've guys been doing?

Fundacja ePaństwo gave us a walk through the API, available data, explained what they do and why we should care. After that introduction we had a huge brainstorm to decided what we'll be doing in the course of the next 3 days, and decided that from all ideas, the best one is to provide neat web application that will allow digitalization declarations of assets (pl. Oświadczenia majątkowe) of Polish representatives. For international readers: in Poland members of parliament, government, and noteworthy people related to public domain (I just don't know who exactly :P) have to fill a form, where they state what assets (cash, houses, cars, etc) they got.

Who? // internaltional team

Why? //why we did that, why they do that

How it went?

//Touk was fun]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date>2013-06-02 13:25:15</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="33degree"><![CDATA[33degree]]></category>
		<category domain="post_tag" nicename="conference"><![CDATA[conference]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="hackathon"><![CDATA[hackathon]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Me :)</title>
		<link>http://rits.pl/about/0407_jdd_bb_m/</link>
		<pubDate>Tue, 28 Jan 2014 23:10:27 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2010/10/0407_JDD_bb_m.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2014-01-29 01:10:27</wp:post_date>
		<wp:post_date_gmt>2014-01-28 23:10:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0407_jdd_bb_m</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>6</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2010/10/0407_JDD_bb_m.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/0407_JDD_bb_m.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:798;s:6:"height";i:1200;s:4:"file";s:25:"2010/10/0407_JDD_bb_m.jpg";s:5:"sizes";a:9:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-199x300.jpg";s:5:"width";i:199;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:26:"0407_JDD_bb_m-680x1024.jpg";s:5:"width";i:680;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-100";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-100x150.jpg";s:5:"width";i:100;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-150";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-150x225.jpg";s:5:"width";i:150;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-200";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-200x300.jpg";s:5:"width";i:200;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-300";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-300x451.jpg";s:5:"width";i:300;s:6:"height";i:451;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-450";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-450x676.jpg";s:5:"width";i:450;s:6:"height";i:676;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-600";a:4:{s:4:"file";s:25:"0407_JDD_bb_m-600x902.jpg";s:5:"width";i:600;s:6:"height";i:902;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";d:2.20000000000000017763568394002504646778106689453125;s:6:"credit";s:13:"BASIA BUDNIAK";s:6:"camera";s:10:"NIKON D700";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1381849007;s:9:"copyright";s:13:"Basia Budniak";s:12:"focal_length";s:2:"50";s:3:"iso";s:4:"1000";s:13:"shutter_speed";s:4:"0.01";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Developers, Foremans and communication</title>
		<link>http://rits.pl/?p=477</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[As I'm in a middle of a big shift in my life I had no time to comment on that topic before. Better for me. I had a chance to see a end to a storm that once again Uncle Bob started. This post is sponsored by <strong>Uncle Bob</strong> number <strong>3</strong> and letter C as <strong>Communication</strong> and <strong>Context</strong>

Recently Uncle Bob posted 3 articles on why IT projects should have Foremans "<a title="Where is The Foreman - Uncle Bob on 8th Light Blog " href="http://blog.8thlight.com/uncle-bob/2014/02/21/WhereIsTheForeman.html">Where is the Foreman</a>?" [1], "<a title="Oh Foreman where art thou ? - Uncle Bob on 8th Light blog" href="http://blog.8thlight.com/uncle-bob/2014/02/23/OhForemanWhereArtThou.html">Oh Foreman, Where art Thou?</a>"[2], "<a title="A spectrum of trust - Uncle Bob on 8th Light blog" href="http://blog.8thlight.com/uncle-bob/2014/02/27/TheTrustSpectrum.html">A spectrum of trust</a>"[3]. It's a good read, so you may dive into it right now, although I'll try to sum it up as I'm not trying to debate on Foreman idea. I'll focus only on communication aspect.
<h3>Quick summary of Martin post</h3>
Uncle Bob proposed that every commit should be checked by one person with commit rights and only that one person should commit all changes to main repo. Role of that person is to ensure, that code is tested, comments are updated, standards are kept, refactoring has happened. That made couple people quite angry. Why? Anyone heard about Bob the Merger role? So Another post had to be written, with sad story about developer wife that had cancer what resulted in lowered quality of code and coverage which lead to firing poor developer. Sad as hell, but it haven't melted hearts of people disagreeing with Uncle Bob. So he wrote third post in which he explained what the real issue is.

Third post is about trust. In OpenSource projects you don't trust everyone. Trust has to be gained. And that is good. No discussion. When new people join your team, you should control what they are doing. Uncle Bob simply proposed one way of doing that, the best in his opinion. I don't expect part 4 of series, as I guess everyone are on the same page now. We may start
<h3>To the point</h3>
So why it had to take 3 blog posts and billion of responses (just check <a title="Responses to Uncle Bob Post" href="https://www.google.pl/search?q=foreman+uncle+bob">google</a>) to make simple statement that should be quite obvious? If you think it's a one timer, then let me remind about Uncle Bob statement, that he always has 100% coverage in code and anything else is not professional. It took me some time to find disclaimer that DB, UI and bean properties are excluded. Because Uncle Bob assumed that we all are on the same page, and what he wrote should be clear for everyone he had to re-do his work several times.

"Well, and how it affects me?" you may ask. It's dead simple, my observation is that many people in IT has serious issues with communication and that is source of many issues. Have you ever done something more than once, just because someone understood it in different way than you did? For example have you ever clarified your blog post with next two because no one agreed with you?

<strong>I'm not bashing on Uncle Bob</strong>, don't get me wrong! He's a icon for may of us, so he makes a great example to show how important context is. He's also good at communicating so I hope we can learn from this something not so obvious.

If you explain something, and you see that people just don't get it, before you start repeating same thing again, just louder, please back off for a second. Take a deep breath and think what both parties can see in other way. If you can't try to explain context of the issue (eg. 100% coverage of business logic, which does not include DB and UI or Foreman just for newcomers). In most cases, such simple act, should help all parties to find the common ground. If you want to see that in live version please go through all 3 Martin blog posts. He has been adding more and more context each time, and replaced one example with other till everything was clear.

He could shout at people that they are stupid and simply don't understand his greatness, instead he patiently come from very different angle each time to explain what issue is he solving. By setting context in which his case is valid, he convinced people (me for sure). If you shout and swear (not that any reasonable developer would be shouting or swearing ...) then people will stop talking with you, and as much it may sound tempting to you, trust me that it's not a good long time strategy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date>2014-03-04 14:23:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[How context in communication matters ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Brief overview of how setting context in communication matters on example of Uncle Bob posts about Foremans in software development process ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Communication, Soft skills, Uncle Bob, Rober C. Martin, Context]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Dragons Ahead</title>
		<link>http://rits.pl/?attachment_id=486</link>
		<pubDate>Sun, 11 May 2014 10:06:37 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2014/05/dragonsAhead.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2014-05-11 12:06:37</wp:post_date>
		<wp:post_date_gmt>2014-05-11 10:06:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dragonsahead</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2014/05/dragonsAhead.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/dragonsAhead.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:613;s:6:"height";i:900;s:4:"file";s:25:"2014/05/dragonsAhead.jpeg";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"dragonsAhead-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:25:"dragonsAhead-204x300.jpeg";s:5:"width";i:204;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-100";a:4:{s:4:"file";s:25:"dragonsAhead-100x146.jpeg";s:5:"width";i:100;s:6:"height";i:146;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-150";a:4:{s:4:"file";s:25:"dragonsAhead-150x220.jpeg";s:5:"width";i:150;s:6:"height";i:220;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-200";a:4:{s:4:"file";s:25:"dragonsAhead-200x293.jpeg";s:5:"width";i:200;s:6:"height";i:293;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-300";a:4:{s:4:"file";s:25:"dragonsAhead-300x440.jpeg";s:5:"width";i:300;s:6:"height";i:440;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-450";a:4:{s:4:"file";s:25:"dragonsAhead-450x660.jpeg";s:5:"width";i:450;s:6:"height";i:660;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-600";a:4:{s:4:"file";s:25:"dragonsAhead-600x880.jpeg";s:5:"width";i:600;s:6:"height";i:880;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>cropped-dragonsAhead.jpeg</title>
		<link>http://rits.pl/?attachment_id=487</link>
		<pubDate>Sun, 11 May 2014 10:07:09 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2014/05/cropped-dragonsAhead.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[http://rits.pl/wp-content/uploads/2014/05/cropped-dragonsAhead.jpeg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date>2014-05-11 12:07:09</wp:post_date>
		<wp:post_date_gmt>2014-05-11 10:07:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-dragonsahead-jpeg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2014/05/cropped-dragonsAhead.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cropped-dragonsAhead.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:613;s:6:"height";i:598;s:4:"file";s:33:"2014/05/cropped-dragonsAhead.jpeg";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-300x292.jpeg";s:5:"width";i:300;s:6:"height";i:292;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-100";a:4:{s:4:"file";s:32:"cropped-dragonsAhead-100x97.jpeg";s:5:"width";i:100;s:6:"height";i:97;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-150";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-150x146.jpeg";s:5:"width";i:150;s:6:"height";i:146;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-200";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-200x195.jpeg";s:5:"width";i:200;s:6:"height";i:195;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-300";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-300x292.jpeg";s:5:"width";i:300;s:6:"height";i:292;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-450";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-450x438.jpeg";s:5:"width";i:450;s:6:"height";i:438;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-600";a:4:{s:4:"file";s:33:"cropped-dragonsAhead-600x585.jpeg";s:5:"width";i:600;s:6:"height";i:585;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_custom_header_last_used_responsive</wp:meta_key>
			<wp:meta_value><![CDATA[1399802829]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[responsive]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Tailored software</title>
		<link>http://rits.pl/2014/05/11/book-review-michal-bartyzel-tailored-software/audiobooks-oprogramowanie-szyte-na-miare-jak-rozmawiac-z-klientem-ktory-nie-wie-czego-chce-ebook-pdf/</link>
		<pubDate>Sun, 11 May 2014 16:33:45 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2014/05/bartyzel_klient.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2014-05-11 18:33:45</wp:post_date>
		<wp:post_date_gmt>2014-05-11 16:33:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>audiobooks-oprogramowanie-szyte-na-miare-jak-rozmawiac-z-klientem-ktory-nie-wie-czego-chce-ebook-pdf</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>488</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2014/05/bartyzel_klient.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/bartyzel_klient.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:500;s:4:"file";s:27:"2014/05/bartyzel_klient.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"bartyzel_klient-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"bartyzel_klient-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-100";a:4:{s:4:"file";s:27:"bartyzel_klient-100x100.jpg";s:5:"width";i:100;s:6:"height";i:100;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-150";a:4:{s:4:"file";s:27:"bartyzel_klient-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-200";a:4:{s:4:"file";s:27:"bartyzel_klient-200x200.jpg";s:5:"width";i:200;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-300";a:4:{s:4:"file";s:27:"bartyzel_klient-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:14:"responsive-450";a:4:{s:4:"file";s:27:"bartyzel_klient-450x450.jpg";s:5:"width";i:450;s:6:"height";i:450;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:267:"Punktem wyjścia dla każdego systemu są wymagania klientów i użytkowników. Wiele już napisano o zarządzaniu wymaganiami, klasyfikowaniu wymagań, diagramach i niezliczonej ilości narzędzi informatycznych. Jednak aby wymaganiami zarządzać, trzeba je najpier";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:108:"Audiobooks Oprogramowanie szyte na miarę. Jak rozmawiać z klientem, który nie wie, czego chce. eBook. Pdf";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>PKW a otwarty system informatyczny</title>
		<link>http://rits.pl/?p=496</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=496</guid>
		<description></description>
		<content:encoded><![CDATA[W nawiązaniu do <a title="TouK prpopzycja dla PKW" href="http://touk.pl/blog/en/2014/11/19/system-informatyczny-dla-pkw/">propozycji firmy Touk</a>, która jest gotowa stworzyć system informatyczny całkowicie za darmo dla Państwowej Komisji Wyborczej.

[caption id="attachment_497" align="alignright" width="300"]<a href="http://rits.pl/wp-content/uploads/2014/11/Screenshot-from-2014-11-20-174950.png"><img class="size-medium wp-image-497" src="http://rits.pl/wp-content/uploads/2014/11/Screenshot-from-2014-11-20-174950-300x221.png" alt="Oferta Polidea" width="300" height="221" /></a> Oferta Polidea[/caption]

Do deklaracji na Twitterze dołączyła Polidea, oferując mobile app oraz ja proponując by zajęło się tym community. Podtrzymuję moją ofertę i propozycję]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>496</wp:post_id>
		<wp:post_date>2014-11-20 19:00:40</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Oferta Polidea</title>
		<link>http://rits.pl/?attachment_id=497</link>
		<pubDate>Thu, 20 Nov 2014 16:51:04 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2014/11/Screenshot-from-2014-11-20-174950.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Oferta Polidea]]></excerpt:encoded>
		<wp:post_id>497</wp:post_id>
		<wp:post_date>2014-11-20 18:51:04</wp:post_date>
		<wp:post_date_gmt>2014-11-20 16:51:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-from-2014-11-20-174950</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>496</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2014/11/Screenshot-from-2014-11-20-174950.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/11/Screenshot-from-2014-11-20-174950.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:771;s:6:"height";i:570;s:4:"file";s:45:"2014/11/Screenshot-from-2014-11-20-174950.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-300x221.png";s:5:"width";i:300;s:6:"height";i:221;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-100";a:4:{s:4:"file";s:44:"Screenshot-from-2014-11-20-174950-100x73.png";s:5:"width";i:100;s:6:"height";i:73;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-150";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-150x110.png";s:5:"width";i:150;s:6:"height";i:110;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-200";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-200x147.png";s:5:"width";i:200;s:6:"height";i:147;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-300";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-300x221.png";s:5:"width";i:300;s:6:"height";i:221;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-450";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-450x332.png";s:5:"width";i:450;s:6:"height";i:332;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-600";a:4:{s:4:"file";s:45:"Screenshot-from-2014-11-20-174950-600x443.png";s:5:"width";i:600;s:6:"height";i:443;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Oferta Polidea]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>My Twitter profile</title>
		<link>http://rits.pl/2014/12/12/horror-of-impl-classes/2014-12-12_18-22-55_tweetdeck-mozilla-firefox/</link>
		<pubDate>Fri, 12 Dec 2014 17:24:22 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/wp-content/uploads/2014/12/2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>501</wp:post_id>
		<wp:post_date>2014-12-12 19:24:22</wp:post_date>
		<wp:post_date_gmt>2014-12-12 17:24:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2014-12-12_18-22-55_tweetdeck-mozilla-firefox</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>500</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://rits.pl/wp-content/uploads/2014/12/2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:519;s:6:"height";i:262;s:4:"file";s:57:"2014/12/2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox.png";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:57:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:57:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-300x151.png";s:5:"width";i:300;s:6:"height";i:151;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-100";a:4:{s:4:"file";s:56:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-100x50.png";s:5:"width";i:100;s:6:"height";i:50;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-150";a:4:{s:4:"file";s:56:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-150x75.png";s:5:"width";i:150;s:6:"height";i:75;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-200";a:4:{s:4:"file";s:57:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-200x100.png";s:5:"width";i:200;s:6:"height";i:100;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-300";a:4:{s:4:"file";s:57:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-300x151.png";s:5:"width";i:300;s:6:"height";i:151;s:9:"mime-type";s:9:"image/png";}s:14:"responsive-450";a:4:{s:4:"file";s:57:"2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-450x227.png";s:5:"width";i:450;s:6:"height";i:227;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Edycja stron w Tapestry</title>
		<link>http://rits.pl/2010/10/09/edycja-stron-w-tapestry/</link>
		<pubDate>Sat, 09 Oct 2010 17:00:38 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<p>No to skoro mamy już pierwszy działający projekt  to czas coś zakodzić.</p>
<p>Zacznijmy od uruchomienia projektu i przejścia na stronę główną, jeśli wszystko działa to wracamy do edytora i otwieramy pliki Index.java i Index.tml Pierwszy pod lupę pójdzie plik .tml. Samo rozszerzenie pochodzi od Tapestry Markup Language, ale spokojnie, nie musimy poznawać kolejnego <a href="http://en.wikipedia.org/wiki/Domain_specific_language" target="_blank">DSLa</a>. Szablony (ang. Templates) Tapestry są dokumentami xhtml z drobnymi dodatkami. W przeciwieństwie np do jsp czy jsf nie musimy poznać nowego zestawu tagów by wykonać najprostszą tabelkę. Pozwala to podejrzeć większość stron T5 w zwykłym edytorze HTMLa czy podejrzeć w przeglądarce bez potrzeby kompilowania :) Znacząco ułatwia to pracę z osobami, które nie znają Tapestry czy javy w ogóle, a muszą edytować nasze szablony (np. osoby odpowiedzialne za grafikę). No, ale wracając do kodu, obecnie mamy</p>
<pre><code>
&lt;html t:type="layout" title="projektBlogowy Index"
      t:sidebarTitle="Current Time"
      xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd"
      xmlns:p="tapestry:parameter"&gt;
        &lt;!-- Most of the page content, including &lt;head&gt;, &lt;body&gt;, etc. tags, comes from Layout.tml --&gt;

    &lt;p&gt;${message:greeting}&lt;/p&gt;

    &lt;p:sidebar&gt;

        &lt;p&gt;
            Just to prove this is live:
        &lt;/p&gt;

        &lt;p&gt;The current time is: ${currentTime}.&lt;/p&gt;

        &lt;p&gt;
            [&lt;t:pagelink page="Index"&gt;refresh&lt;/t:pagelink&gt;]
        &lt;/p&gt;
    &lt;/p:sidebar&gt;

&lt;/html&gt;
</code></pre>
<p>Na stronie po za kilkoma tagami htmlowymi widzimy <em>${currentTime}. </em>Jest to tak zwana ekspansja (ang. expansion). Domyślnie jest to odwołanie do własności (ang. property) strony, z wykorzystanie notacji java beans (czyli 2 metody: get/is i set) . Ale stop, strona ma własności? W Tapestry ma. Każdy template jest ściśle związany z plikiem java o tej samej nazwie znajdującym się w tym samym pakiecie. Tapestry jest silnie zorientowane na stronę a stroną jest w tym przypadku plik .java. To od jego lokalizacji zależy adres URL jaki wyświetli się w przeglądarce. Wszystkie strony muszą znajdować się w pakiecie pages bądź w jego podpakiecie. Jak już pewnie się domyśliliście wszystkie properties są dostępne z poziomu szablonu. Zmodyfikujmy więc metodę getCurrentTime by otrzymać następujący kod</p>
<pre><code>
	public String getCurrentTime() {
		return "Hello at "+new SimpleDateFormat().format(new Date());
	}
</code></pre>
<p>i po zmianie w przeglądarce przeładowujemy stronę. I voila! Na stronie mamy nową wartość. Jak ktoś nie podążał uważnie za wpisem to zmienia wartość zwracaną na np HelloWorld i przeładowuje stronę bez ponownego deployowania aplikacji czy reloadu. Jedną z przyjemniejszych cech T5 jest tzw. Live Class Reloading. Wszystkie zmiany dokonane w szablonie, na stronie czy w implementacji serwisu są odwzorowane od razu na stronie. Przyspiesza to pracę nad projektem i zwiększa produktywność. Można oczywiście kupić <a href="http://www.zeroturnaround.com/jrebel/" target="_blank">JRebela</a>, ale lepiej chyba mieć te 200$ skoro różnicy nie widać ;)</p>
<p>Wracając jednak do stron. Nie wszystkie wartości do jakich chcemy mieć dostęp mogą być zapisane w postaci property, np. <em>hashCode()</em>. Co wtedy? Najzwyczajniej na świecie wywołujemy metodę <em>${hashCode()}</em>. Proste, prawda?<br />
To chyba tyle na dziś. Wymyśliłem sobie, że będę starał się tworzyć krótkie wpisy.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2010-10-09 19:00:38</wp:post_date>
		<wp:post_date_gmt>2010-10-09 17:00:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>edycja-stron-w-tapestry</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1286643641]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Tapestry 5.2 beta:)</title>
		<link>http://rits.pl/2010/10/14/tapestry-5-2-beta/</link>
		<pubDate>Thu, 14 Oct 2010 21:46:25 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[No więc wczoraj czasu nie było, ale Tapestry oficjalnie stało się betą. Liczyłem, że ekipa powiadomi o tym również na głównej stronie ale postanowili tego nie robić. To co ma być jedną z lepszych zmian w najbliższym wydaniu, to to, że pojawi się z nim również nowa strona główna. Szkice + to nad czym pracują można już podejrzeć, poniżej link do newsa w któym oficjalnie T5.2 stało się betą

<a href="http://people.apache.org/~uli/tapestry-site/2010/10/11/tapestry-version-521-beta.html">http://people.apache.org/~uli/tapestry-site/2010/10/11/tapestry-version-521-beta.html </a>

A z info ode mnie:   chciałem domenę podpiąć, ale dopiero jak już wykonałęm milion kroków (włącznie z zamówieniem karty z mbanku) to WP mnie poinformowało, że Polskiej domeny to oni mnie nie podepną :mad: Pewnie mogłem o tym przeczytać, ale i tak jestem zły. Może w weekend poczytam więcej i przekonam ich, że warto ;)

3majcie kciuki. Jutro postaram się o sensowniejszy wpis, a kolejny w weekend.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2010-10-14 23:46:25</wp:post_date>
		<wp:post_date_gmt>2010-10-14 21:46:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tapestry-5-2-beta</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1287092786]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808107]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.76.211.97</wp:comment_author_IP>
			<wp:comment_date>2010-10-15 09:12:51</wp:comment_date>
			<wp:comment_date_gmt>2010-10-15 07:12:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No to skoro WP się na Ciebie wypina - wypnij się na nich :) A co do wpisów - czekam niecierpliwie :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1287126772]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383535]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2010-10-17 12:38:10</wp:comment_date>
			<wp:comment_date_gmt>2010-10-17 10:38:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[jako alternatywę mam bloggera bądź własny serwer + dowolny system. Blogger mnie do gustu za bardzo nie przypadł jak tam kiedyś byłem, a własny serwer to koszt, którego jeszcze nie chcę ponosić. Jak się sprężę to możliwe jednak, że niedługo coś postawię. (w sumie taki był ostateczny cel)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1287311891]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383537]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.190.108.6</wp:comment_author_IP>
			<wp:comment_date>2010-10-17 19:33:13</wp:comment_date>
			<wp:comment_date_gmt>2010-10-17 17:33:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Blogger jest o tyle dobry, że masz darmowy support zapewniany przez profesjonalistów. Jak coś się dzieiej, a dzieje bardzo rzadko, to natychmiast ktoś się tym zajmuje, nawet nie musisz tego zawiadamiać. Z tego co słyszałem, to bardzo łatwo można przenieść posty z Wordpress'a na Blogger'a i odwrotnie :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1287336793]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383538]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Radzenie sobie z błędami w Tapestry5</title>
		<link>http://rits.pl/2010/10/17/radzenie-sobie-z-bledami-w-tapestry5/</link>
		<pubDate>Sun, 17 Oct 2010 09:03:51 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Dziś przyjrzymy się stronom błędu jakie generuje nam Tapestry, i wcale nie będzie to negatywny temat. Tapestry 5 stara się poprawić produktywność developera również w tym aspekcie i dostarczając jak najwięcej informacji. Jeśli się spodziewacie, że za chwilę wkleję wam stack trace na 6 ekranów to grubo się zawiedziecie. No, ale po kolei. Zacznijmy od kodu. Na początek dodajmy w klasie strony 3 gettery i w templacie strony dodajemy wywołanie wszystkich 3
<pre><code>
	public String getHello(){
		return "Hello";
	}
	public String getHi(){
		return "Hi";
	}
	public String getWorld(){
		return "World";
	}

	${getHi()}&lt;br/&gt;
	${HelLo}&lt;br/&gt;
	${word}&lt;br/&gt;
</code></pre>
Naszym oczom ukaże się kolorowa, pozytywnie nastawiająca, strona (choć mnie te kolory drażnią ;))

<img class="alignnone" title="Tapestry 5 error page" src="http://farm5.static.flickr.com/4154/5084750406_2c66ef2681_b.jpg" alt="" width="1024" height="666" />

Na stronie znajdują się informacje uszeregowane według wartości jaką przedstawiają dla developera. Wpierw dowiadujemy się co się nie udało (i nie trzeba było tego z stacku wyczytać). Następnie Tapestry zaczyna uściślać informację i podawać rozwiązania możliwe. W przypadku gdy dostajemy <em>unknown value exception, </em>framework domyśla się, że mogliśmy popełnić literówkę, bądź nas IDE nie wspiera i nie podpowiada co możemy w templacie wstawić. W takim przypadku Tapestry listuje wszystkie dostępne properties do jakich możemy się odwołać na stronie. Przy kilku innych błędach również dostaniemy przydatne wskazówki. Ponadto na stronie znajduje się stack trace, w którym można usunąć fragmenty bez znaczenia dla użytkownika. Za nim dostaniemy szereg informacji o środowisku, w którym przyszło naszej aplikacji działać.

Jako, że głupio zostawić tak stronę z błędem, to zmieniamy word na world, wciskamy F5 w przeglądarce (tylko żadnego redeploya mi tam nie robić! Produktywność zwiększamy!) i naszym oczom ukazuje się to czego oczekiwaliśmy.  Przy okazji zwracam uwagę , że Tapestry jest case insensitive. Możemy pisać słitaśnym casem (jak na forum internetowym), a Tapestry uzna, że jesteśmy upośledzeniu i w ramach wyrównywania szans zignoruje nasze wiElbLaDY.

Ogółem cała strona to jedna z małych rzeczy, a cieszy.

Z ciekawostek: strona nie pokazuje się gdy ustawimy aplikację w producation mode. Przed T5.2 elementy były chyba w innych miejscach]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2010-10-17 11:03:51</wp:post_date>
		<wp:post_date_gmt>2010-10-17 09:03:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>radzenie-sobie-z-bledami-w-tapestry5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1287306234]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808116]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.190.108.6</wp:comment_author_IP>
			<wp:comment_date>2010-10-17 19:38:34</wp:comment_date>
			<wp:comment_date_gmt>2010-10-17 17:38:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jedna rada odnośnie obrazków - na mojej 15" i rozdzielczości 1280x800 są one nieczytelne. Dobrym zwyczajem jest wstawiać duże obrazki w formie miniaturki i hiperłącza do większej wersji jeśli istnieje obawa, że mogą one być niewyraźne dla czytelnika :)
Post ciekawy, aczkolwiek po prezentacji na JUG'u czekam na jakieś smaczki :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1287337116]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383542]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Przykładowa aplikacja Tapestry5</title>
		<link>http://rits.pl/2010/10/22/przykladowa-aplikacja-tapestry5/</link>
		<pubDate>Fri, 22 Oct 2010 21:33:31 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[Przeglądać staram się regularnie strony związane z T5 i jakiś czas temu na <a href="http://spreadthesource.com/" target="_blank">blogu</a> projektu <a href="http://wookicentral.com/" target="_blank">woookicentral.com</a>, znalazłem informację, że ekipa zaczyna montować przykładową aplikację w Tapestry. Założenia były wzięte z Seama i ich Hotel Booking. Projekt powstaje na <a href="http://github.com/ccordenier/tapestry5-hotel-booking" target="_blank">githubie</a>, skąd można go pobrać i eksperymentować do woli. Dostępne są 2 branche. Pierwszy, upubliczniona i posiadająca własne <a href="http://tapestry.zones.apache.org:8180/tapestry5-hotel-booking/signin" target="_blank">demo</a> wersja, zbudowana jest z podstawowych komponentów dostępnych w Tapestry + biblioteki tapx, twórcy Tapestry: Howarda Lewisa Shipa.

Drugi branch, jeszcze w budowie, powstaje z wykorzystaniem innych dostępnych rozszerzeń, jeśli dobrze się doczytałem to głównie  korzystają z projektu <a href="http://tynamo.org/" target="_blank">Tynamo</a>. Powinno to dodać duży model security i uprościć np. konwersacje.

Projekt należy sprawdzić. Jako drugą ciekawą referencję (którą osobiście przeglądałem i z czystym sercem polecam) jest Wooki. O wooki więcej można poczytać na ich stronie, przejrzeć komponenty i moduły które wytworzyli. No i za kilka tygodni ten blog mam nadzieję, że będzie też dobrą referencją dla Polaków (i wszystkich translatujących) ;)

A w weekend prawdziwa notka, tj taka z kodem i mówiąca coś więcej o T5 :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2010-10-22 23:33:31</wp:post_date>
		<wp:post_date_gmt>2010-10-22 21:33:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>przykladowa-aplikacja-tapestry5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1287783212]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Nawigacja pomiędzy stronami w Tapestry5</title>
		<link>http://rits.pl/2010/10/24/nawigacja-pomiedzy-stronami-w-tapestry5/</link>
		<pubDate>Sun, 24 Oct 2010 11:20:29 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=59</guid>
		<description></description>
		<content:encoded><![CDATA[Kolejny temat, który zapewne nie brzmi ekscytująco, ale należy go przerobić i być może wynieść coś z T5 do codziennej pracy.

Zacznijmy od ogólnego opisu powiązań pomiędzy klasą a templatem. Wiemy już, że strona składa się z 2 nierozłącznych elementów: .java i .tml. Plik java musi znajdować się w pakiecie pages, bądź w jednym z jego podpakiecie. Plik tml to inna historia, ale przyjąć należy, że ma znajdować się w tym samym pakiecie, wtedy najłatwiej je znaleźć (jeśli korzystamy z mavena to nie wrzucamy tmli do src/java, chyba że modyfikujemy delikatnie pom.xml by maven wiedział, że ma nie tylko kompilować źródła, ale też kopiować tmle). Dzięki temu szybko możemy odnaleźć interesującą nas stronę, jest to przejrzysty sposób oznaczenia przez jaki '<em>kontroler</em>' (w uszach bo tapestry jest Page Oriented i nie wiem czy można uprościć to aż tak, i strony nazwać kontrolerami). W projekcie, nad którym obecnie pracuję, a który odziedziczyłem po kolegach, pierwszą czynnością przed każdą zmianą, jest wycieczka do servlet-MVC.xml i sprawdzenie na jakiej jestem stronie i jaki kontroler ją obsługuje. Z poprzednich projektów w springu/faceach/strutsie mam podobne doświadczenia więc to nie jest jakiś odosobniony przypadek. W T5 tego nie uświadczymy, na szczęście.

No, ale teraz wypadało by się jakoś zacząć poruszać po aplikacji i przechodzić pomiędzy stronami, bo jedna strona to będzie trochę za mało dla większości projektów ;)

Zaczynamy od otwarcia <em>Index.tml</em> gdzie wpisujemy na początek <code>&lt;a href="http://localhost/aboUt"&gt;anchor&lt;/a&gt;</code> Zakładając, że serwer nasłuchuje na porcie 80, ten link przeniesie nas do strony about. Alternatywnie podajemy <code>&lt;a href="/about"&gt;anchor&lt;/a&gt;</code> co uczyni link tyć sprytniejszym. Jak zgaduję, to nie robi wrażenia. No więc na stronie dodać możemy też <code>&lt;t:pagelink page="About"&gt;page link&lt;/t:pagelink&gt;</code>. Page link to jeden z podstawowych komponentów tapestry (o samych komponentach i czym są będzie za kilka wpisów). Wszystko co znajduje się w przestrzeni nazw tapestry (w headerze strony definiujemy przestrzeń nazw jako xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd") jest obrabiane przez Tapestry i na tych elementach działa T5 magic ;)

Wracając do Pagelinka. Nie zagłębiając się w jego <a href="http://tapestry.apache.org/tapestry5.2-dev/tapestry-core/ref/org/apache/tapestry5/corelib/components/PageLink.html" target="_blank">dokumentację</a> za bardzo, uznajmy, że posiada on jedynie atrybut page. Podajemy w nim nazwę stronę do której chcemy przejść a tapestry zajmie się całą resztą. Można tworzyć linki dynamicznie w takie sposób <code>&lt;t:pagelink page="${nextPage}"&gt;page link&lt;/t:pagelink&gt;</code> i w klasie javowej dostarczyć metodę <em>getNextPage</em>. Pozwoli nam to do woli manipulować celem odnośnika, ale tak wiem, dalej nie jest to nic wybitnego, w końcu tyle można zrobić choćby scripletami czy JSTLami, tyle że w brzydszy sposób.

Przejdźmy więc do kolejnego  przypadku, gdy chcemy wykonać jakąś czynność przed przejściem na kolejną stronę (np zapisać coś do DB). Wtedy idealnym rozwiązaniem okazuje się <a href="http://tapestry.apache.org/tapestry5.2-dev/tapestry-core/ref/org/apache/tapestry5/corelib/components/ActionLink.html" target="_self">ActionLink</a> bądź <a href="http://tapestry.apache.org/tapestry5.2-dev/tapestry-core/ref/org/apache/tapestry5/corelib/components/EventLink.html" target="_blank">EventLink</a>. Ten drugi działa podobnie jak pierwszy i póki nie zagłębimy się mocno w  tapestry to będzie nam zbędny, teraz zwracam tylko uwagę, że takie <em>cóś</em> istnieje. Zajmiemy się za to ActionLinkiem. W kodzie dodajemy kilka następujących linijek.
<pre><code>
About.tml
&lt;t:actionLink t:id="calculateTax"&gt;Do something&lt;/t:actionLink&gt;

About.java
	Object onActionFromCalculateTax() {
		// complex calculations
		return Index.class;
	}
</code></pre>
Jest to najprostszy możliwy przykład. To co się stanie na stronie, to po kliknięciu w link zostanie wygenerowany <em>Event</em> o nazwie Action z komponentu o nazwie takiej samej jak id tego komponentu. Actionlink zawsze generuje event typu action, czym się różni od EventLinka każdy się już chyba domyśla. Po wygenerowaniu eventu, coś musi go przechwycić i to coś wypada oznaczyć. Posłużyłęm się tu jednym z dwóch znanych mi sposobów: konwencją nazw. Wspominałem już, że tapestry 5 to convention over configuration, a to kolejny przykład. Nazwy w tapestry mogą mieć wielkie znaczenie, przeanalizujmy ogólną składnię. on{NazwaEventu}From{NazwaKomponentuBranaZJegoId} Wszystkie części nazwy metody są obowiązkowe, nawiasy dodałem by łatwiej było zauważyć poszczególne części. Dla mnie jest to wyjątkowo czytelne: na określoną akcję od  komponentu wykonaj ciało metod. W naszym przypadku jest to na akcje od <em>calculateTax</em>, przeprowadź złożone obliczenia i przejdź na kolejną stronę, gdzie <em>calculateTax</em> jest brane z atrybutu t:id.

Zwracane wartości też mają znaczenie. Tu posługuję się silnym dowiązaniem, poprzez klasę. Jest to jedna z preferowanych przeze mnie metod nawigowania, druga to zwracanie obiektu na którym chcę pracować, taki sposób uznaję za najlepszy gdy chcę przekazać do kolejnej strony wartości (to w następnej części nawigowania). Inne możliwości to zwrócenie Stringa zawierającego nazwę strony do której chcemy przejść, obiektu URL, specjalnej klasy Tapestry link bądź  StreamResponse gdy chcemy na przykład wysłać plik do użytkownika. Metody zwracające nic (void czy null), same siebie (this bądź .class samej siebie) oraz chyba bollowskie false, oznaczają, że zostajemy na tej samej stronie i jeśli żądanie nie było Ajaxowe to przeładowujemy stronę.

Dlaczego preferuję pierwsze dwa sposoby? Miałem w swojej, stosunkowo krótkiej, karierze przypadek gdy klient poprosił o drobną zmianę w aplikacji. Wszystkie linki zawierające słowo user miały zwać się client. Refaktoryzacja tego i upewnienie się w sporym środowisku, że żadna strona nie nazywa się jak nie powinna, było piekłem. Pewnie dałoby się jakoś sprytniej to filtrować, ale postanowione zostało, że wszystko trzeba renamować. Gdybym miał w projekcie Tapestry i zwracane obiekty .class bądź konkretne instancje, to cała procedura skończyła by się na alt+f6 (bo pracuję w Intellij) bądź alt+shift+r (gdy w domu stukam na eclipsie) zmianie nazwy/pakietu, a framework nie widziałby żadnej różnicy. Wprawdzie można zmieniać po regexp bądź wyszukując danego stringa, ale przy popularnych frazach, gdy występuje dane słowo z 10* na każdej stronie, staje się to upierdliwe. Należy również uważać, by nie popsuć aplikacji. No i ostatnia sprawa: wspominana przejrzystość kodu. Jest on transparentny i czytelny na pierwszy rzut oka. Jeśli zwracam instancję danej strony to wiem gdzie muszę jej szukać i gdzie powinienem się dalej udać. Nie przeglądam bzdurnego XMLa w poszukiwaniu mapowań, nie sprawdzam navigation rules, etc, etc. Wszystko jest zebrane w jednym miejscu, tak bym ja nie musiał tracić czasu i nerwów na bzdury, typu co oznacza, że strona zwraca stringa "success"...

Do nawigacji na pewno jeszcze powrócę, wtedy też sprawdzimy Tapestrowe URLe, ale to za minimum 1 wpis.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2010-10-24 13:20:29</wp:post_date>
		<wp:post_date_gmt>2010-10-24 11:20:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nawigacja-pomiedzy-stronami-w-tapestry5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1287919230]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Nawigacja w T5 part II &laquo; Reliable IT Solutions]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mgruca.wordpress.com/2010/11/23/nawigacja-w-t5-part-ii/</wp:comment_author_url>
			<wp:comment_author_IP>76.74.248.202</wp:comment_author_IP>
			<wp:comment_date>2010-11-30 23:47:42</wp:comment_date>
			<wp:comment_date_gmt>2010-11-30 21:47:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] już przemieszczać się pomiędzy stronami oraz zatrzymywać ich stan. Czas więc pomyśleć o przekazywaniu wartości pomiędzy różnymi [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1291153664]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1291153665.3949";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Zarządzanie stanem w Tapestry5</title>
		<link>http://rits.pl/2010/10/30/zarzadzanie-stanem-w-tapestry5/</link>
		<pubDate>Sat, 30 Oct 2010 16:31:20 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[Zacznę od małej uwagi: staram się by wpisy układały się w jeden spójny tutorial. Jednym z moich podstawowych założeń jest nie robienie zbyt dużych kroków i stopniowe dorzucanie kolejnych koncepcji. Może teraz to będzie działało na niekorzyść wpisów, ale liczę, że gdy będzie ich odpowiednio więcej, to ta metoda będzie pomagać kolejnym osobom je czytającym. Piszę o tym dlatego, że część z tego co dziś zrobię może się wydawać mocno idiotyczna :P

Skoro poznaliśmy już jak się nawiguje i wywołuje akcje, to czas pomyśleć o czymś co będzie cokolwiek robiło. Zacznijmy może od czegoś prostego, jako że nie jestem najlepszym programistą, to bardziej skomplikowane rzeczy mogą mnie przerosnąć. Zaimplementujemy grę w zgadywankę. Scenariusz jest prosty: losujemy liczbę z przedziału 1-10, po czym użytkownik musi zgadnąć jaką liczbę wylosowaliśmy. Nawet ja sobie z tym powinienem dać radę ;)

Zacznijmy od stworzenia nowej strony. W pakiecie pages dodajemy klasę GuessGame, będzie ona dostępna pod tą nazwą w URLu czyli np <em>localhost:8080/guessGame</em>. Definiujemy w niej następujące wartości

[sourcecode language="java"]
private int numberToGuess;
 private int item;
 private String resultMessage;

 public int getNumberToGuess() {
 return numberToGuess;
 }

 public String getResultMessage() {
 return resultMessage;
 }

 public void setItem(int item) {
 this.item = item;
 }

 public int getItem() {
 return item;
 }
[/sourcecode]

oraz uzupełniamy template mniej więcej następująco

<pre><code>
		Number to guess: ${numberToGuess}&lt;br/&gt;
		Result: ${resultMessage}&lt;br/&gt;
		Choose a number:&lt;br/&gt;
		&lt;t:loop source="1..10" value="item"&gt;
      		&lt;t:actionlink t:id="guess" context="item" style="padding-right: 2px;"&gt;${item}&lt;/t:actionlink&gt;
    	&lt;/t:loop&gt;
</code></pre>
Mając już cel możemy przystąpić do gry. No ale jak grać? Poznaliśmy ostatnio komponent ActionLink i z niego korzystamy. Dodałem też komponent loop, który służy do iterowania po kolekcjach, bądź potrafi policzyć od 1 do 10. Tym się jednak dziś nie zajmujemy, jest on tu tylko dlatego, że okazałem się zbyt leniwy by napisać 10 osobnych action linków ;) Zmienna item jest potrzebna tylko dla loopa, o działaniu którego innym razem.

Stronę możemy już podejrzeć i poklikać, choć dostaniemy teraz błędy :/ i numberToGuess wynosi zawsze 0. Hmm, zainicjalizujmy więc tę wartość i dodajmy obsługę actionLinków.

[sourcecode language="java"]
void onActionFromGuess(int guess){
	if(numberToGuess = guess){
		resultMessage = &quot;Success&quot;;
	}
	else {
		resultMessage = &quot;Try Again&quot;;
	}
}

void setupRender(){
	if(numberToGuess==0){
		numberToGuess = new Random().nextInt(10) + 1;
	}
	if(resultMessage==null&amp;amp;&amp;amp;resultMessage.isEmpty()){
		resultMessage = &quot;Try U'r luck! ^^&quot;;
	}
}
[/sourcecode]

Kolejny raz widzimy konwencję nazw Tapestry. Tym razem jest ona związana z cyklem życia strony... zaraz, zaraz. Cykl życia strony? Ano tak, przed wersją 5.2, wszystkie strony w Tapestry żyły sobie w pool-u, do którego po użyciu zostawały zwrócone. Same wartości były przypisywane w momencie aktywacji strony, każdy kto pracował z stateless EJB powinien wiedzieć jak to działa. Reszcie spieszę wyjaśnić, iż wprowadzone to zostało, by ograniczyć ilość pamięci potrzebną dla aplikacji. Dzięki ponownemu wykorzystaniu obiektów stron, framework nie musi tworzyć dla każdego klienta nowej instancji strony. To tak w dużym uproszczeniu, ale musi teraz wystarczyć. W związku z owym cyklem aktywacji i deaktywacji (strona posiada cykl życia i cykl aktywacji i deaktywacji. Użyłem na początku akapitu niewłaściwej, ale bardziej przykuwającej uwagę nazwy), strona musi mieć możliwość zainicjowania wartości oraz wykonania operacji by być gotową do użycia poprzez różnych klientów, pomimo jej nie zmieniającej się struktury. Pierwszą z metod w tym cyklu jest setup render i użyjemy jej, a co nam. Druga metoda (onAction...) obsługuje wszystkie eventy generowane przez nasze action linki. Warto zauważyć, że w tapestry możemy przekazywać do metod parametry. Nie trzeba kombinować nad jakimiś ukrytymi checkboxami, hidden fieldami czy innymi paskudztwami, chcecie przekazać parametr do metody, to po prostu to zróbcie. Więcej o <a href="http://tapestry.apache.org/tapestry5.2-dev/guide/lifecycle.html" target="_blank">cyklu życia</a> i cyklu <a href="http://tapestry.apache.org/tapestry5.2-dev/guide/rendering.html" target="_blank">wyświetlania strony</a> znajdziemy na stronach tapestry, a i ja może coś kiedyś skrobnę.

Wracając do naszej gry. To co możemy już zaobserwować, to to, że najzwyczajniej w świecie nie działa :( Dlaczego dostajemy cały czas wartość 0 i brakuje nam wiadomości na stronie? Związane jest to znów z cyklem aktywacji strony. Tapestry dba o to by nie trzymać w pamięci obiektów nam zbędnych, więc to na nas spada wskazanie, które properties strony mają być zapamiętane. Można to zrobić na kilka sposobów:

1. Dodanie metod aktywujących
[sourcecode language="java"]
	void onActivate(int numberToGuess, String message) {
		this.numberToGuess = numberToGuess;
		this.resultMessage = message;
	}

	Object[] onPassivate() {
		return new Object[] { numberToGuess, resultMessage };
	}
[/sourcecode]
Obie metody bazują na konwencji nazw, a więc nazwa ma znaczenie ;) onActivate (liczba parametrów jest dowolna) jest wywoływana za każdym razem gdy strona ma zostać załadowana i należy ustalić wartości pól strony. Można napisać kilka takich metod, bardzo przydatne dla stron, które przyjmują różne ilości parametrów (osobiście korzystałem z tego w przypadku stron zawierających filtry). Metoda onPassivate jest wywoływana w dokładnie przeciwnym przypadku, tj gdy strona zwracana jest do page poola. Zwrócić może jeden parametr, bądź tablicę. Zwrócić? Ale dokąd, i jak przechowywane są te wartości? Obie metody korzystają z URLa. Wpisane przez nas wartości znajdą się w adresie, co uczyni stronę prostą do bookmarkowania (idealne dla wspomnianych filtrów). Niestety nie jest to dobry sposób na przechowywanie danych w grze w zgadywanie (jakby wypisanie na ekranie wyniku to było mało!). Sprawdźmy co tam jeszcze można zrobić by nasze properties przeżywały poszczególne requesty.

2. Oznaczenie pola adnotacją @Persist wskazuje, że jego wartość ma być zachowywana pomiędzy kolejnymi requestami. Znów większość osób zastanowi się jak to się dzieje i gdzie Tapestry trzyma nasze wartości. Odpowiedź jest tym razem trudniejsza i brzmi: to zależy. Pokrótce postaram się to objaśnić.
Jest kilka możliwości, domyślnie stosowana jest strategia trzymania wartości w sesji, zwana Session (adnotacja przyjmuje Stringa jako parametr określający, która strategia ma być użyta. Stałe je reprezentujące znajdziemy  w obiekcie PersistenceConstants)
Flash  - wartość pola wkładana jest wprawdzie do sesji, ale usuwana jest z niej w momencie pierwszego pobrania. Można wykorzystać do np wyświetlenia komunikatu błędu)
Client - mimo iż jest, to odradzam korzystanie. W tym trybie tapestry wrzuci obiekt w URLa w sobie tylko znany sposób, bądź (w przypadku formularzy), skorzysta z ukrytych pól. Prosty sposób by narobić sobie problemów, ale jeśli będzie potrzeba, to taki mechanizm jest)

Z jednym z powyższych możemy zapisywać wartości na stronach, co jest nam niezbędne do tego by gra działała. Przetestować proszę kod, powinien działać. Jako, że długie się to zrobiło to kończę wpis :)

Przypomnę jeszcze tylko, że całość kodów źródłowych można znaleźć w moim repo <a href="https://bitbucket.org/mgruca/blogowe-skrawki" target="_blank">bit bucketa</a>

-= Edit =-

Długo szukałem nazwy dla tego posta, niestety właściwa przyszła dopiero po publikacji. Ta zmiana wyjdzie na zdrowie tej notce, bo o utrwalaniu danych będzie więcej w przyszłości]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2010-10-30 18:31:20</wp:post_date>
		<wp:post_date_gmt>2010-10-30 16:31:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zarzadzanie-stanem-w-tapestry5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288456280]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[utrwalanie-danych-w-tapestry5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[zarzadzanie-stane-w-tapestry5]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Nawigacja w T5 part II &laquo; Reliable IT Solutions]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mgruca.wordpress.com/2010/11/23/nawigacja-w-t5-part-ii/</wp:comment_author_url>
			<wp:comment_author_IP>69.170.134.50</wp:comment_author_IP>
			<wp:comment_date>2010-11-23 21:03:09</wp:comment_date>
			<wp:comment_date_gmt>2010-11-23 19:03:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] już przemieszczać się pomiędzy stronami oraz zatrzymywać ich stan. Czas więc pomyśleć o przekazywaniu wartości pomiędzy różnymi stronami. Przykład? W każdej [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1290538990]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Page pooling w T5</title>
		<link>http://rits.pl/2010/11/08/page-pooling/</link>
		<pubDate>Mon, 08 Nov 2010 11:11:42 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=82</guid>
		<description></description>
		<content:encoded><![CDATA[W poprzednim wpisie wspomniałem, że do wersji 5.2, wszystkie strony w Tapestry były przetrzymywane w puli. Niestety poprzedni wpis się rozrósł i postanowiłem stworzyć krótszy wpis poświęcony temu zagadnieniu.

W poprzednim wpisie pokazywałem jak można zarządzać stanem strony. Jedną z zalet programowania w T5 jest wrażenie, że strony dają poczucie bycia świadomymi swojego stanu. Wystarczy mała adnotacja, bądź metoda i programujemy  nie przejmując się skąd pobrać wartości dla kolejnego żądania od klienta. Osobiście miałem ten problem, gdy korzystałem z innych szkieletów, wiem że inni też go miewali. Każda osoba pisząca ukryte pola, bądź kombinująca nad sesją ręka w górę ^^

Niestety zachowywanie stanu ma swoje wady. Dane trzeba gdzieś trzymać i jakoś je ładować. Dla developera i klienta, strona może i wygląda jakby cały czas miała zapisane wartości, ale tak nie jest. Tapestry podczas każdego redirecta, zapisuje dane do wyznaczonego przez nas miejsca (przeważnie do sesji), po czym wysyła stronę do puli a następnie pobiera stronę o którą prosi użytkownik (może być ta sama) i ustawia property z nią związane (adnotowane np persistem, bądź będące w cyklu aktywacji/deaktywacji). Dłuższe i sensowniejsze wyjaśnienie cyklu życia i stanowość opisane są <a href="http://tapestry.apache.org/tapestry5.2-dev/guide/lifecycle.html" target="_blank">tu</a>, <a href="http://tapestry.apache.org/tapestry5.2-dev/guide/rendering.html" target="_blank">tu</a> i <a href="http://tapestry.apache.org/tapestry5.2-dev/guide/persist.html" target="_blank">tu</a>.

Podejście to ma jednak wady. Trzymanie wielu instancji strony jest kosztowne. Każda z nich zajmuje pewną ilość pamięci co przy wielu stronach i wielu klientach doprowadzi do zużycia dużej ilości pamięci. Alternatywnie można by tworzyć dla każdego klienta instancję strony i niszczyć tuż po użyciu, niestety strony w Tapestry wymagają dużo zasobów do ich stworzenia, a to nie pomaga gdy użytkownik czeka na swoją stronę. Pula jest więc dobrym pomysłem, jednak stwarza problem dla dużych serwisów, gdzie zużywana pamięć bywa już problemem. By wyjść naprzeciw oczekiwaniom developerów, od wersji 5.2 pulę zastąpiono poprzez singletony stron. Dzięki sprytnemu zabiegowi, dla każdej strony tworzona jest tylko jedna instancja, co jak łatwo się domyślić przekłada się pozytywnie na ilość zużywanej pamięci. Obecnie mechanizm wygląda tak, że Tapestry pakuje w mapę wszystkie wartości, związane z stroną, i w przypadku żądania od klienta wykorzystuje je do zasilenia obiektu strony. Więcej o nowym mechanizmie (i bardziej szczegółowo) można przeczytać na blogu <a href="http://tapestryjava.blogspot.com/2010/07/everyone-out-of-pool-tapestry-goes.html" target="_blank">Howarda Lewisa Shipa</a>. Wpis ten tłumaczy koncepcję i implementację nowego mechanizmu. Polecam zainteresowanym.

Ostatnia sprawa. Jednym z czynników, dla których poruszam ten temat, jest to, że jest to spora zmiana. Kto czytał o Tapestry więcej, wie że większe zmiany powodowały duże problemy z wsteczną kompatybilnością. Tu jednak nie tylko został zachowany stary mechanizm (można aktywować pulę i zrezygnować z singletona), ale ponadto pula została rozszerzona. Od ver 5.2 da się zarządzać nią zdalnie i dostosowywać jej wielkość do aktualnych potrzeb (wcześniej było to możliwe tylko podczas kompilacji, ewentualnie przez properties i reload aplikacji). Mechanizm ten <a href="http://blog.tapestry5.de/index.php/2010/05/28/remote-page-pool-management/">opisał na swoim blogu</a> Igor Drobiazko. Podobne zachowanie kompatybilności wstecz, przy rozwijaniu frameworku, można zaobserwować w sprawie bibliotek javascriptowych. Na liście non stop powraca temat zastąpienia obecnych bibliotek poprzez jquery i non stop jest odrzucany wraz z przekierowaniem do projektów, które pozwalają na ową integrację. Nie bójcie się więc T5, ono nie planuje się zmieniać, przynajmniej nie rewolucyjnie :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2010-11-08 13:11:42</wp:post_date>
		<wp:post_date_gmt>2010-11-08 11:11:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>page-pooling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1289214703]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Nawigacja w T5 part II</title>
		<link>http://rits.pl/2010/11/23/nawigacja-w-t5-part-ii/</link>
		<pubDate>Tue, 23 Nov 2010 19:03:02 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[Umiemy już <a href="http://mgruca.wordpress.com/2010/10/24/nawigacja-pomiedzy-stronami-w-tapestry5/" target="_blank">przemieszczać się pomiędzy stronami</a> oraz <a href="http://mgruca.wordpress.com/2010/10/30/zarzadzanie-stanem-w-tapestry5/" target="_blank">zatrzymywać ich stan</a>. Czas więc pomyśleć o przekazywaniu wartości pomiędzy różnymi stronami. Przykład? W każdej aplikacji się znajdzie, od wypełnienia przelewu po nasz: stronę z wynikiem naszej gry (BTW sam pomysł na guess game wziąłem z oficjalnego tutoriala Tapestry).

No to zdefiniujmy nasze nowe wymaganie. Grający po kliknięciu w link z liczbą ma zostać przeniesiony na stronę z wynikiem. Jeśli poprawnie wytypował liczbę to system ma go o tym powiadomić oraz umożliwić powrót na stronę z grą, by mógł zacząć grać od nowa. Jeśli wytypował niepoprawnie, to ma zostać o tym poinformowany oraz ma być mu wyświetlony link pozwalający grać dalej. Use case prosty. Zaczynamy kodzić :) Na początek stwórzmy stronę z wynikiem (kod tml-owy pomijam, jako że wszystko do javy wsadzę, a  jak linki się tworzy i wypisuje wartości to każdy już wie). Na stronie wyniku wstawiamy trzy property: int playerGuess, boolean correctAnswer; Pierwsza własność będzie nam potrzebna do wyświetlenia na ekranie wyboru osoby grającej, druga oznaczać będzie tylko czy to co user podał jest prawidłowe czy nie. Do tego mam 2 stringi do wyświetlenia graczowi odpowiedniego komunikatu i odpowiedniej wartości linka. Na pierwotnej stornie dodajemy następujące pole: @InjectPage private GuessResult resultPage;
Zacznijmy od tego najmniej użytecznego sposobu ;) GuessGame.java modyfikujemy w następujący sposób.

[sourcecode language="java"]
Object onActionFromGuess(int guess) {
	final boolean isCorrectAnswer = numberToGuess == guess;
	resultPage.setCorrectAnswer(isCorrectAnswer);
	resultPage.setPlayerGuess(guess);
	return resultPage;
}
void reset() {
	numberToGuess = new Random().nextInt(10) + 1; //Przeniesiony z setupRender który teraz wywołuje tą metodę
}
[/sourcecode]

Na stronie wyników umieszczamy poza getterami i setterami następujący fragment:

[sourcecode language="java"]
@InjectPage private GuessGame gamePage;

void onActivate(int playerGuess, boolean correctAnswer) {
	this.playerGuess = playerGuess;
	this.correctAnswer = correctAnswer;
	resultMessage = correctAnswer ? &quot;That is correct answer&quot; : &quot;That is not correct answer&quot;;
	linkMessage = correctAnswer ? &quot;Want to play again?&quot; : &quot;Please try again&quot;;
}

Object[] onPassivate() {
	return new Object[] { playerGuess, correctAnswer };
}

Object onActionFromBackToGuessGame() {
	if (correctAnswer) {
		gamePage.reset();
	}
	return gamePage;
}
[/sourcecode]

W ten sposób mamy prostą i czystą nawigację, która jednak trzyma wartości w URLu, co nie bardzo mi pasuję do tej strony, jednak znakomicie mogło by się sprawdzić w wszelakiego rodzaju wizardach, które pozwalają bookmarkować kolejne kroki. Modyfikujemy więc stronę rezultatu dodając adnotację @Persist nad poszczególnymi polami, usuwamy metody onActivate i onPassivate i już mamy czysto w URLu. W zasadzie to prawie. Brak nam jeszcze miejsca, w którym będziemy nasze 2 stringi ustalać i proponuję je umieścić w znanym nam już setupRender(); Przy moich zastosowaniach jest to zawsze wygodne miejsce. Przyjrzyjmy się obu przypadkom trochę bliżej.
Pierwszy oznacza pełną transparentność przekazywanych parametrów, pozwala bookmarkować stronę oraz odwoływać się do niej w prosty sposób z zewnętrznych systemów. Poprzez metodę activate można przyjąć wartości, które połączymy z odpowiednimi polami. Pola te mogą być adnotowane poprzez @Persist co pozwoli połączyć oba sposoby. W ten sposób wykonałem kiedyś dla klienta, prostą integrację z zewnętrznym systemem CRM. 
Drugi sposób jest bardzo wygody do przekazywania wartości pomiędzy stronami i określił bym go jako 'obiektowy'. Nie ma możliwości wstrzyknięcia z zewnątrz danych (przynajmniej ja nie kojarzę takiego sposobu) a Tapestry zajmie się za nas zarządzaniem pamięcią i nie pozwoli by dane przeciekały do kolejnych stron.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2010-11-23 21:03:02</wp:post_date>
		<wp:post_date_gmt>2010-11-23 19:03:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nawigacja-w-t5-part-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1290538983]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1155158893]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pierwsze kroki w konfiguracji aplikacji w Tapestry5</title>
		<link>http://rits.pl/2010/12/04/pierwsze-kroki-w-konfiguracji-aplikacji-w-tapestry5/</link>
		<pubDate>Sat, 04 Dec 2010 18:06:45 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[Dzisiejszy wpis będzie tylko wstępem do konfiguracji, jako że muszę uzupełnić w tym względzie własne braki :). 
No to dziś będzie nudno, bo będzie dużo xmla... hmm no może jednak nie. Tapestry należy do tych szkieletów aplikacyjnych, w których nie musimy pisać ni linijki w xmlu (pomijając web.xml i templaty, które są dokumentami XHTML czyli XMLami). 
Niektórzy stwierdzą w tym momencie, że bez sensu, nie da się programować w notatniku i na żywo podmieniać na produkcji kodu zmieniając wszystko. A ja powiem, że dzięki temu można dbać o jakość, testować, popełniać mniej błędów, korzystać z wsparcia IDE, refaktoryzować, etc. 
To co warto nadmienić przed przejściem dalej, to że T5 jest zbudowane na module IOC więc cała nasza konfiguracja będzie interakcją z modułem wstrzyknięć. Nadmieniam to tutaj, gdyż mówiąc na co dzień o IOC mam na myśli nasze klasy wstrzykiwane do innych naszych klas. Gdy piszę o konfiguracji, to mam na myśli interakcję z klasami dostarczanymi z Tapestry. Wiem, zagmatwałem :(

No ale do kodu (z którego komentarze pozwalam sobie wycinać).
Specyfikacja JEE wymaga od nas byśmy zajrzeli na początek do web.xml, gdzie ponad standardową deklarację XMLa i web app (wymagane przez kontener servletów) znajdziemy następujący fragment

[sourcecode language="html"]
    &lt;context-param&gt;
        &lt;param-name&gt;tapestry.app-package&lt;/param-name&gt;
        &lt;param-value&gt;pl.rits.blog.projektBlogowy&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;app&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.tapestry5.TapestryFilter&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;app&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
[/sourcecode]

Mam nadzieję, że na dziś się już XMLa naoglądaliście, bo więcej go w tym wpisie nie znajdziecie. Dewianci niech otworzą jakiś projekt Springowy/facowy/strursowy i wrócą za miesiąc, bo w najbliższej przyszłości nie przewiduję więcej XMLa na blogu (no .tml-e się pewnie pojawią, ale niewiele!).

Słowo wyjaśnienia się teraz należy co widać w zamieszczonym kodzie. Zdefiniowaliśmy root projektu, dzięki temu T5 będzie się w stanie znaleźć w naszej aplikacji (od podanego tu pakietu, szukane są pakiety pages, components, etc).

Druga istotna informacja to rejestracja filtra tapestry i określenie jego nazwy na app. Definiuje ona nazwę klasy w której będziemy dokonywali konfiguracji naszej aplikacji. Dla przykładu: jeśli pozostanie ona zdefiniowana jako app, to tapestry będzie szukać klasy <em>${rootProjektu}.services.<span style="text-decoration:underline;">App</span>Module.java</em>. Brak tej klasy nie jest błędem, ale uniemożliwia nadpisanie jakichkolwiek domyślnych ustawień tapestry. Wyłączy nam też możliwość definiowania nowych services więc de facto poza pół statycznymi aplikacjami, ta klasa będzie zawsze obecna.

Przejdźmy więc do niej i sprawdźmy co w niej znajdziemy. Niestety jest tego niewiele. Nie ma interfejsu, dziedziczenia ani, co gorsza, XMLa! :( Hańba!

Jest za to kilka metod. Przypomnę, że tapestry to Convention over Configuration więc korzysta z konwencji nazw by umożliwić nam konfigurację. Niestety zmiany w tej klasie będą wymagały restartu aplikacji, live class reloading tu nie działa, z doświadczenia za to wiem, że to nie jest uciążliwy problem. Po pierwszej konfiguracji jedyną zmianą jest dokładanie kolejnych services. Spójrzmy na 2 z metod znajdujących się domyślnie w klasie (tj znajdujących się w mavenowym archetypie):

[sourcecode language="java"]
public static void bind(ServiceBinder binder) {
// binder.bind(MyServiceInterface.class, MyServiceImpl.class);
}
public static void contributeApplicationDefaults(MappedConfiguration configuration) {
configuration.add(SymbolConstants.SUPPORTED_LOCALES, &quot;en&quot;);
configuration.add(SymbolConstants.PRODUCTION_MODE, &quot;false&quot;);
configuration.add(SymbolConstants.APPLICATION_VERSION, &quot;0.0.1-SNAPSHOT&quot;);
}
[/sourcecode]

Pierwsza metoda służy do powiadomienia kontenera IOC tapestry o istnieniu naszego service (w springu zwanego beanem, co BTW jest dla mnie najbardziej denerwującą rzeczą w całym springu). 
Serwisy w tapestry standardowo składają się z interfejsu oraz jego implementacji, choć pierwsze może zostać pominięte (niezalecane). Nazwa powinna być znana użytkownikom HiveMind (który był stworzony na potrzeby poprzedniego tapestry). 
Powiązanie pomiędzy implementacją a interfejsem tworzone jest po .class, dzięki czemu możemy refaktoryzować nasz kod w dowolnym IDE, a i tak będzie nas ono wspierało. Powiązania są również wyszukiwalne, choć oba punkty stają się coraz mniej aktualne wraz z wzrastającym wsparciem  wszystkich IDE dla Springa. Wspominam o tym jednak, gdyż w dawnych czasach, zdarzyło mi się pomagać koledze utrzymującemu naszą aplikację, znaleźć błąd w mojej klasie. Po dłuższej chwili okazało się, że nastąpiły zmiany w klasach, które nie zostały odzwierciedlone w plikach XML.
 
Druga metoda dokłada się do domyślnych ustawień aplikacji, co to dokładnie oznacza wyjaśnię w jednym z przyszłych wpisów. Do metody tapestry dostarczy nam obiektu, który jest taką a'la mapą do której można tylko wkładać. Klucz odpowiada za nazwę opcji a wszystkie opcje można znaleźć w obiekcie SymbolConstatns. Opisy poszczególnych ustawień można znaleźć <a title="Tapestry user guide" href="http://tapestry.apache.org/configuration.html" target="_blank">na stronach tapestry</a>. 
My dodamy jedno od siebie <em>configuration.add(SymbolConstants.COMPRESS_WHITESPACE, "false");</em> 
Dzięki temu łatwiej się developuje (przynajmniej mi) bo więcej widać. Co to zmienia? Przed zmianą podejrzyjcie dowolną stronę wygenerowaną przez T5, a następnie tę samą stronę po zmianie (w przeglądarce korzystamy z opcji source/pokaż źródła ctrl+u). 

I wszystko jasne.  Tapestry kompresuje mnóstwo rzeczy by do klienta szło jak najmniej danych. Domyślnie tapestry Gzipuje niektóre dane (o czym za chwilę poniżej) oraz wycina zbędne białe znaki (co właśnie zmieniliśmy). Domyślny rozmiar danych by zostały skompresowane to 100 bajtów, ale da się limit ten zmienić w sposób analogiczny do kompresji białych znaków.

Ciekawostka. Opcja Application_Version jest przydatna :) Na czas developmentu opcję tę kasujemy, przywrócimy ją dopiero jak aplikacja pójdzie live. Dlaczego? Odpowiada ona za przygotowywanie tzw. Assetów (czyli wszystkiego co może zostać wysłane do przeglądarki). Przygotowanie polega na wkomponowaniu w adres URI zasobów numeru wersji. Dzięki temu przeglądarka może cachować po stronie klienta zasoby i pobierać je ponownie dopiero gdy zmieni się numer wersji. Gdy nie podamy tej opcji w ogóle to za każdym uruchomieniem generowany jest losowy numer, co pozwala nam uniknąć ręcznego czyszczenia cachu by zobaczyć wyniki naszych zmian.

To na dziś tyle. Może krótko, ale jak wspominałem sam mam braki w temacie. Jednak pomimo tego czułem potrzebę omówienia zagadnienia konfiguracji. Przepraszam również, że wpis ukazuje się tak późno. Był gotów w zeszłą niedzielę, ale po windows updatcie i pewnej dozie nerwów z tym związanych, postanowiłem go opublikować w poniedziałek. Naiwny, nie widziałem wtedy jeszcze, że czeka mnie piekielny tydzień.
Postaram się nadrobić tekstem jutro :)
Do przeczytania]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2010-12-04 20:06:45</wp:post_date>
		<wp:post_date_gmt>2010-12-04 18:06:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pierwsze-kroki-w-konfiguracji-aplikacji-w-tapestry5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1291486006]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808123]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.190.97.153</wp:comment_author_IP>
			<wp:comment_date>2010-12-05 07:02:46</wp:comment_date>
			<wp:comment_date_gmt>2010-12-05 05:02:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fajnie, że podajesz takie niuanse jak na przykład Application_Version. Czytając kolejne wpisy czuje się jakbym znów był na Twojej prelekcji JUG'owej, tylko o poszerzonej treści :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1291525366]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383543]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Czas wyjść do ludzi</title>
		<link>http://rits.pl/2010/11/23/czas-wyjsc-do-ludzi/</link>
		<pubDate>Tue, 23 Nov 2010 19:25:50 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[Jako, że Tapestry zmieniło <a href="http://tapestry.apache.org/" target="_blank">stronę główną</a>, upgradowało dokumentację i ogółem jest super a najlepsza przeglądarka wydała właśnie najnowszą betę to może i dla bloga jest dobry czas by się pokazać w pełni publicznie. Dotąd wpisy były znane nie licznym, teraz czas się rozpropagować i oczekiwać jakiegoś feedbacku.

Nie jest to wprawdzie dla mnie najlepszy okres, pracy mam co nie miara bo u klienta <em>drobn</em>a restrukturyzacja, ale kiedyś trzeba zacząć się mocniej starać. Postaram się nadrobić na dniach zaległości. Co do tapestry to czeka mnie konfiguracja, dzielenie wartości w szerszym scopie niż page i request, wstrzyknięcia, coś o budowaniu URLi, internacjonalizacja, metaprogramowanie i kilka innych tematów. Jak skończę podstawy to planuję screencasty albo poświęcenie większej uwagi innym tematom. Od dawna czeka na mnie gradle. Zacząłem się nim bawić w okolicach ver 0.7/0.8, ale wtedy uznałem, że to za wcześnie by w <em>to wejść</em> i jakoś się z mavenem przemęczę ten czas. Czeka też na mnie ibatis 3 (w sumie to obecnie myBatis). Wersja 2 była dla mnie zwycięzcą jeśli chodzi o frameworki do utrwalania, choć nie na każdym polu. Śledząc informacje od wczesnych bet o nowej wersji mam wrażenie, że myBatis będzie w stanie zastąpić mi całkowicie ORMy, bądź zwiększyć choć pole zastosowania. Przyglądałem się też od dłuższego czasu różnym językom innym niż java, ale to na później odchodzi, jako że czasu brak. O tematach nie tyczących się technologi bezpośrednio nawet nie będę pisać.

Jak widać jest trochę tematów, które się tu pojawią. Mam nadzieję utrzymywać tempo choć jednego wpisu na tydzień, mniej będę uznawać za osobistą porażkę.

No to zaczynamy :)

PS będę też twittować, choć jeszcze nie jestem pewien jak chcę wykorzystać Twittera, to wiem że go tu jakoś należało by podpiąć ;)

&nbsp;

Do następnego wpisu, oby szybko.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2010-11-23 21:25:50</wp:post_date>
		<wp:post_date_gmt>2010-11-23 19:25:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>czas-wyjsc-do-ludzi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1290540350]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Metaprogramming zamiast konwencji nazw</title>
		<link>http://rits.pl/2010/12/08/metaprogramming-zamiast-konwencji-nazw/</link>
		<pubDate>Wed, 08 Dec 2010 19:43:45 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[Tak chwalę wam i chwalę konwencję nazw i jak to fajnie jest ją mieć, a każdy chyba wymieni mi przykłady, że czasem nie jest to najlepszy pomysł by tylko na niej polegać. I co jak ktoś chce mieć własne nazwy metod lub co gorsza, wykonuje legendarną zmianę wszystkich frameworków bo ma pojo klasy. Czy taka osoba jest skazana na zmienianie nazw po wsze czasy?
Nie. Nasz dzielny bohater nie jest stracony, gdyż dziś pozna tutaj inne sposoby informowania na oznaczanie ważnych metod w cyklu życia strony/requestu.

Nasi dzisiejsi bohaterowie to adnotacje i zostali przedstawieni javie w jej 5tym wydaniu. Są już dość długo na rynku, ale do dziś wielu nie może ich zaadoptować. Natomiast tapestry z racji bycia nowym frameworkiem rozpoczęło swój żywot przyjmując w pełni ich dobrodziejstwo.

Adnotować możemy wiele rzeczy, pola, metody, konstruktory itd. Kilka adnotacji nawet już się na blogu pojawiło, mimo iż starałem się ich za wcześnie nie pokazywać. Streśćmy więc może co już znamy i co jeszcze przyjdzie nam poznać lepiej.

<strong><span style="text-decoration:underline;">@Persist </span></strong>- tę adnotację już znamy. Umieszczona nad polem powoduje, że strona zachowuje się jakby posiadała stan (a teoria mówi, że HTTP jest bezstanowe). Zapisywane wartości pakowane są do mapy i wsadzane do sesji użytkownika. Każda z wartości jest związana dzięki temu z danym użytkownikiem, stroną i konkretnym polem a Tapestry troszczy się o to by nie pojawiły się te informacje nigdzie indziej. Poprzez atrybut value adnotacji można doprecyzować zachowanie podczas zapisu.

<strong><span style="text-decoration:underline;">@InjectPage</span></strong> - również znamy, umieszczone nad polem wstrzykuje obiekt strony o klasie tej samej co pole. Pozwala to nam przekazywać wartości i nawigować pomiędzy stronami. Adnotacja posiada opcjonalny atrybut, informujący o konkretnej instancji strony do wstrzyknięcia. Do użycia w przypadku gdy klasa pola jest interfejsem implementowanym przez stronę. Dość to naciągane, ale i taką opcję mamy.

To teraz nowe zabawki. Poznaliśmy już metody  onActivate i onPassivate. Działają dobrze, ale strasznie upierdliwe są i dużo pisać trzeba przy nich. No więc dla leniwych (jak ja) mamy adnotację

<span style="text-decoration:underline;"><strong>@ActivationRequestParameter</strong></span> - Można nią adnotować jedno pole jedynie, ale dla większości będzie to wystarczająco. Jeśli jest to własny obiekt (nie string, bool etc) to potrzeba będzie dostarczyć translatora (tak jak w przypadku onActivate i onPassivate). Wyjątek stanowią encje hibernata, dla których tapestry samo tworzy translatory (o ile mamy bibliotekę integrującą tapestry z hibernatem w naszym projekcie)

Zmniejszając ilość kodu w naszej aplikacji trudno jest nie zauważyć wszystkich metod get i set jakie  powstają by wspierać templaty .tml. No więc czas i to usunąć przy pomocy adnotacji <span style="text-decoration:underline;"><strong>@Property</strong></span>. Generuje ona dla prywatnego pola gettery i settery. Dodatkowo, korzystając z atrybutów adnotacji, możemy ustawić by tapestry generowało tylko getter/setter w przypadku gdy drugą metodę stworzymy sami bądź gdy nie chcemy by takowa była dostępna w aplikacji.

Pamiętacie naszą metodę <em>setupRender(){}</em> ? Otóż okazuje się, że dobrze by było gdyby się nazywała init(){} a nad nią dało się umieścić adnotację <strong><em>@SetupRender</em></strong>. I wiecie co? Da się :) Każda z metod cyklu życia strony ma swój odpowiednik w adnotacji.

Programując w tapestry natkniemy się na o wiele więcej adnotacji, lecz pozwólcie mi zostawić kilka na przyszłe wpisy, gdy będę zajmować się związanymi z nimi pojęciami. Poza tym wpis mi się robi długi ;)

Do następnego

&nbsp;

PS nie twierdzę, że konwencja nazw jest zła. Wręcz przeciwnie, lubię ją, ale nie zawsze jest ona najlepszym wyjściem. Do pisania na szybko preferuję nazywać moje metody zgodnie z konwencją, gdyż tak mi jest łatwiej (tak, tak onActionFrom też któregoś dnia zamienimy na adnotację). Później natomiast to już różnie bywa. Moja rada: dogadajcie się w teamie jak wam bardziej pasuje programować. Tapestry się do was dostosuje :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2010-12-08 21:43:45</wp:post_date>
		<wp:post_date_gmt>2010-12-08 19:43:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metaprogramming-zamiast-konwencji-nazw</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1291837426]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808015]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.190.97.153</wp:comment_author_IP>
			<wp:comment_date>2010-12-08 23:28:41</wp:comment_date>
			<wp:comment_date_gmt>2010-12-08 21:28:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Te adnotacje, które dzisiaj omówiłeś posiadają odpowiednik w kodzie w poprzednich wpisach. Planujesz przy omawianiu następnych posiłkować się kolejnymi etapami tworzonego w pierwszych wpisach projektu lub też osobnymi kawałkami kodu oderwanymi od niego? Było by znacznie łatwiej dla czytelnika bez znajomości Tapestry zorientować się w tym co się dzieje.

I drugie pytanie - planujesz robić wpisy o integracji Tapestry z Hibernate/Spring?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1291843721]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383469]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2010-12-09 20:29:56</wp:comment_date>
			<wp:comment_date_gmt>2010-12-09 18:29:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Idealnie by było gdybym pisał jakąś aplikację, ale to było by zbyt pracochłonne. Postaram się jednak trzymać jakiejś w miarę spójnej koncepcji, którą będzie widać od wpisu od wpisu o formularzach, tak żebym miał już jakąś liczbę narzędzi do pracy. Pewnie coś na wzór mantisa będę tworzył, ewentualnie jakiejś TODO listy bo to dość prosta koncepcja. 

Integracja będzie opisana, jak najbardziej. Jednak do tego jeszcze trochę wody w wiśle upłynie. Osobiście uważam, że integracja z Springiem to nie jest jakiś priorytet, o ile nie chcemy podpiąć jakiejś technologii z którą on się łatwo integruje.
Hibernate będzie szybciej, ale wpierw komponenty :)
Z innych integracji będzie też pewnie jsecurity (znaczy obecne Apache Shiro), ale to też wymagać będzie czasu trochę. 
Jeśli chcesz korzystać z T5 już dziś to zacznij od studiowania jumpstart (link na głównej stronie tapestry znajdziesz, ewentualnie w moich prezentacjach powinien być). Jest tam mnóstwo przykładów + można zobaczyć, że Tapestry może współgrać z EJB (bo Geoff korzysta z EJB wszędzie).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>11</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1291919397]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1291919397.3662";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383469]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383471]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Nom, nom, nom. Yummie logs</title>
		<link>http://rits.pl/2010/12/12/nom-nom-nom-yummie-logs/</link>
		<pubDate>Sun, 12 Dec 2010 12:07:26 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[Dziś lightowo będzie. Ostatnio nie miałem czasu pisać to chcę nadrobić kilkoma krótszymi wpisami.

Większość z nas wie, że logowanie jest dobre. Wprawdzie są osoby, które uważają, że każda linia kodu do tworzenia logów to linia stracona, ale ja się z tym nie mogę zgodzić. By to wyjaśnić zacznijmy od mojej historii, by łatwiej było zrozumieć dlaczego dla mnie ten temat jest istotny.

Pan Michał uczył się programować w Javie na studiach, głównie z książki Core Java I i II oraz korzystając z pomocy <a href="https://pe.ug.edu.pl/nauczyciel/631" target="_blank">Jakuba Neumana</a> (z którym miałem laborki). Pojęcie debuggera było mi całkowicie obce, ba pojęcie IDE było obce. Do dziś pamiętam jak dziwiłem się po co w eclipsie trzeba tworzyć projekty. Przecież wystarczy wszystko skompilować i działa :P

Niestety, ale wtedy nie cały mój kod był tak doskonały jak jest teraz ;) Zdarzał się błędy :( Na szczęście to już za mną :E Wtedy trzeba było jednak znaleźć miejsce w którym aplikacja postąpiła źle (no bo wiadomo, że to nie ja się pomyliłem). Naturalnym rozwiązaniem było System.out.println(); najlepiej co drugą linijkę by zbierać informacje na temat stanu obiektu i możliwych przyczyn błędu. W pracy zacząłem szybko sam zauważać wady takiego podejścia i pojawiła się potrzeba posiadania jakiegoś lepszego medium do logowania. Wpierw próby z przekierowaniem System.out do pliku logów, następnie żmudna nauka log4j i kolejnych frameworków wspierających mnie w tym zadaniu. W moim kodzie znaleźć można przeważnie dużo log.trace/.debug , ponieważ nie jestem nauczony korzystać z debbugera. Walczę z sobą by korzystać z niego częściej, ale logi są przydatne i dla mnie wygodnie się z nimi pracuje. Ponadto są niemal nic nie kosztują przy odpowiednim zastosowaniu.

Log4j znać winien każdy, slf4j powinno się znać, jak nie znamy to polecam nadrobić, gdyż jest to świetna biblioteka, znacząco ułatwiająca logowanie. Tworząc ten wpis zakładam, że rozumiesz drogi czytelniku, po co tworzy się logi.

A gdzie w tym wszystkim Tapestry? Ano dziś pokażę wsparcie dla logowania. Przed, bądź po lekturze tego tekstu polecam wszystkim, którzy nie czytali, zapoznać się z serią wpisów  <a title="Clean code, Clean logs" href="http://nurkiewicz.blogspot.com/search/label/logging">Tomasza Nurkiewicza</a> na temat tworzenia logów. Teksty te wybiegają daleko ponad to co ja pokażę, tu wystarczy nam wiedzieć czym i po co są logi

No to zaczynajmy, spójrzmy na nasz projekt. Na stronie guessGame wyświetlamy aktualnie poprawny wynik. Nie jest to szczególnie mądre, gdybyśmy teraz wprowadzili opłaty i wygraną za poprawne trafienie, to szybko zostalibyśmy bankrutami. No, ale trzeb przecież sprawdzić czy aplikacja działa i co wylosowała, inaczej skąd mamy wiedzieć, że to w ogóle działa.

Po pierwsze wstrzykujemy instancję <em>org.slf4j.Logger</em> do naszej klasy

[sourcecode language="java"]
@Inject
private Logger log;
[/sourcecode]

I tyle. Tapestry samo zadba o zainicjalizowanie loggera, jako że slf4j jest natywnie wspierany przez framework. Podczas poprawiania nawigacji, wyekstrahowaliśmy z metody setupRender metodę restet(). Wypada sprawdzić co zostało wylosowane

[sourcecode language="java"]
void reset() {
	numberToGuess = new Random().nextInt(10) + 1; // moved from setupRender
	log.debug(&quot;{} is drawed number&quot;, numberToGuess);
}
[/sourcecode]

Wynik jest przewidywalny: <em>[DEBUG] pages.GuessGame 6 is drawed number</em>

No, ale mamy też bardziej typowe potrzeby logujące, np potrzebujemy sprawdzić co użytkownik kliknął by wiedzieć czy dobra wartość jest przekazywana do kolejnej strony.

[sourcecode language="java"]
Object onActionFromGuess(int guess) {
	log.debug(&quot;[Enter] onActionFromGuess with param '{}'&quot;, guess);
	final boolean isCorrectAnswer = numberToGuess == guess;
	resultPage.setCorrectAnswer(isCorrectAnswer);
	resultPage.setPlayerGuess(guess);
	log.debug(&quot;[Exit] onActionFromGuess to page '{}'&quot;, resultPage);
	return resultPage;
}
[/sourcecode]

Wynik znów przewidywalny (kliknięty link nr 7)
<em>[DEBUG] pages.GuessGame [Enter] onActionFromGuess with param '7'</em>
<em> [DEBUG] pages.GuessGame [Exit] onActionFromGuess to page 'pl.rits.blog.projektBlogowy.pages.GuessResult@b52f79'</em>

Problemem jest to, że  takich linii Enter - Exit w kodzie może się zrobić dużo. Do tego wyglądają niemal identycznie i idealnie zaśmiecają nam kod. W tym miejscu przychodzi nam z pomocą mała adnotacja <em>@Log</em>

Usuwamy obie linijki log.debug(...); z metody onActionFromGuess i wstawiamy nad nią adnotację @Log. Otrzymamy takie coś

[sourcecode language="java" highlight="1"]
@Log
Object onActionFromGuess(int guess) {
	final boolean isCorrectAnswer = numberToGuess == guess;
	resultPage.setCorrectAnswer(isCorrectAnswer);
	resultPage.setPlayerGuess(guess);
	return resultPage;
}
[/sourcecode]

A wynikiem dla kliknięcia w 7 będzie
<em>[DEBUG] pages.GuessGame [ENTER] onActionFromGuess(7)</em>
<em> [DEBUG] pages.GuessGame [ EXIT] onActionFromGuess [pl.rits.blog.projektBlogowy.pages.GuessResult@13d99c]</em>

Czyli odrobinę inaczej niż ja sam napisałem, ale daje tyle samo informacji.

Adnotować można wszystkie metody na stronach, bez względu na ich widoczność. Adnotacja w pełni respektuje nasze ustawienia dla loggera więc gdy przenosimy się na produkcję, to nic nie będzie wyświetlane. Poziom logowania jest domyślnie ustawiony na Debug, ale można to zmienić.

To przyjemnego logowania i do następnego razu.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2010-12-12 14:07:26</wp:post_date>
		<wp:post_date_gmt>2010-12-12 12:07:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nom-nom-nom-yummie-logs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1292155646]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1193121180]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Google wspiera open source</title>
		<link>http://rits.pl/2010/12/17/google-wspiera-open-source/</link>
		<pubDate>Fri, 17 Dec 2010 12:31:52 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[Przedwczoraj na blogu googla <a href="http://googlecode.blogspot.com/2010/12/windowbuilder-becomes-new-open-source.html">pojawiła się informacja</a>, że otwierają 2 wtyczki WindowBuilder i CodePro Profiler. Pierwsza służy do budowania GUI i jest naprawdę dobrym kawałkiem softu, druga to profiler (jak nazwa wskazuje :P) czyli służy do znajdowania wąskich gardła w aplikacji.

Oba projekty przejdą pod skrzydła fundacji Eclipse'a i zostaną <em>Eclipse projects</em> w pierwszej połowie 2011 roku. Wtedy zostaną opatrzone licencją EPL (Eclipse public licence).

Według mnie jest to ważne wydarzenie dla wszystkich użytkowników Eclipsa. Są to 2 dobre wtyczki, których wielu osobom przez kilka lat brakowało, a teraz są i to jako OS :).

Google wycenia wartość przekazanego kodu i praw intelektualnych na 5 milinów $. Sporo. Ciekawy jest również podany przez nich powód, czyli wiele próśb od userów :) Choć google starają się nie być złymi to jednak jestem przekonany, że mają w tym jakiś głębszy cel.

Ponadto w wtorek Apache <a href="https://blogs.apache.org/foundation/entry/the_apache_software_foundation_launches" target="_blank">ogłosiło</a>, że rozpoczyna współpracę z Googlem. Powstaje strona pod adresem http://www.apache-extras.org/ gdzie hostowane są projekty związane z projektami apache, ale nie będące bezpośrednio pod skrzydłami Apacha (dla przykładu, Apache Shrio ma realma do Atlassian Crowda, który można znaleźć na nowej stronie).

Jako, że nie jest to formalnie część ASF to nie jest narzucana licencja ani proces zarządzania, co było wytknięte Apaczom na ostatnim trójmiejskim JUGu. Widać zdają sobie oni sprawę, że nadmiar formalizmów mógł ich w końcu zabić, do czego w komunikacie się według mnie przyznają, stwierdzając, że ta inicjatywa ma służyć dalszemu podnoszeniu innowacyjności ich projektów.

Co do zysków googla, to poza utrzymaniem domeny nic ich to nie kosztuje (w sumie jest to ten sam code.google.com co wcześniej, a same projekty można, podobno, bezproblemowo przenieść), a wokół apaczów muszą się kręcić z racji Harmony. Ciekawe jak się potoczy dalej ta przyjaźń.

To garść <em>nowości</em> z szerokiego świata na dziś. Ciekaw jestem waszej opinii na temat nowych inicjatyw googlowych, jako że ja mieszkam u klienta w tym tygodniu i za dobrze nie miałem czasu na własne przemyślenia. Nawet ten wpis się pisał przez 3 dni :P]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2010-12-17 14:31:52</wp:post_date>
		<wp:post_date_gmt>2010-12-17 12:31:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-wspiera-open-source</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1292589113]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15995486";s:7:"blog_id";s:8:"16307690";s:9:"mod_stamp";s:19:"2010-12-17 12:31:52";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344258129";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Tapestry 5.2 goes final</title>
		<link>http://rits.pl/2010/12/20/tapestry-5-2-goes-final/</link>
		<pubDate>Sun, 19 Dec 2010 22:38:12 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=156</guid>
		<description></description>
		<content:encoded><![CDATA[No i stało się. 5.2.4 zostało uznane za wystarczająco stabilne by mogło zostać uznane za oficjalną wersję 5.2
Co nowego w tej wersji?  Pozwolę sobie odesłać do <a href="http://tapestryjava.blogspot.com/2010/12/announcing-tapestry-52.html">wpisu Howarda Lewisa Shipa</a> (ojca tapestry) na temat tego rela. Powtarzanie po nim mija się z celem.

Dla mnie najważniejszą zmianą, jest to, że w końcu live reloadowalne są services (jednostka wstrzyknięcia w Tapestry). Gdy uczyłem się jak działa hibernate to szczególnie denerwowało, że muszę pracować jak developer Springa.

Poza tym pojawiło się dużo innych usprawnień, takich jak usunięcie page poola i zastąpienie go singletonem stron (co daje duże oszczędności pamięci). Dołożono sporo adnotacji (między innymi wsparcie dla JSR-303), poprawiono moduł testowy i wsparcie dla selenium oraz zmieniona została strona główna. Ostatnia zmiana ma pomóc w rozbudowie dokumentacji. Ostatnie wygląda obiecująco, choć mi utrudnia poruszanie się po stronie. Zakładam, że większość nie będzie miała tego problemu, ja się po prostu przyzwyczaiłem do starego layoutu.

To tyle na dziś. Muszę pomyśleć nad kolejnymi wpisami, to może w święta pod choinkę podgonię tutoriala.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date>2010-12-20 00:38:12</wp:post_date>
		<wp:post_date_gmt>2010-12-19 22:38:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tapestry-5-2-goes-final</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1292798294]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15995486";s:7:"blog_id";s:8:"16307690";s:9:"mod_stamp";s:19:"2010-12-19 22:38:12";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835807994]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek Dziurko]]></wp:comment_author>
			<wp:comment_author_email>tdziurko@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tomaszdziurko.pl/</wp:comment_author_url>
			<wp:comment_author_IP>78.154.70.41</wp:comment_author_IP>
			<wp:comment_date>2010-12-20 09:42:14</wp:comment_date>
			<wp:comment_date_gmt>2010-12-20 07:42:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pamiętam stare czasy, gdy T5 było w wersji beta, a ja zachwycony odsłoną czwartą tego frameworku, którego użyłem do inżynierki i potem w pracy, stwierdziłem, że nowy projekt napiszę w T5. Niestety nie wziąłem pod uwagę problemów związanych z używaniem biblioteki, która cały czas mocno ewoluowała i po 3 tygodniach walk musiałem uznać się za pokonanego :) Wtedy wybrałem Wicket, bo był w miarę podobny i  używam do do tej pory, ale co jakiś czas zaglądam na Twojego bloga poczytać jak to wygląda teraz i widzę, że wygląda całkiem interesująco :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1292830934.5552";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1292833354]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1292833354.094";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383445]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz "Smok" Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.190.97.153</wp:comment_author_IP>
			<wp:comment_date>2010-12-20 13:29:32</wp:comment_date>
			<wp:comment_date_gmt>2010-12-20 11:29:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No to już zdecydowałem :) Ostatnimi czasy w pracy zajmuje się jWebUnit, testowaniem integracyjnym, ciutke Selenium etc. i wbudowane wsparcie z takim narzędziem jak Selenium RC przechyla szale do Tapestry :) Dzisiaj zaczynam przygotowania do pierwszego projektu :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1292844572]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383448]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>178.19.178.73</wp:comment_author_IP>
			<wp:comment_date>2010-12-20 13:35:25</wp:comment_date>
			<wp:comment_date_gmt>2010-12-20 11:35:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Przechodziłem chyba przez coś podobnego, jako że zaczynałem moją przygodę z T5 w czasach wczesnych bet. Trudno było na początku nadążyć za zmianami, a jeszcze gorzej mam teraz jak mi Eclipse coś koloruje na żółto, bo pamiętam starszą nazwę adnotacji :) (na JUGu mi się zdarzyło to nawet podczas prezentacji :P)
Ja przy T5 wytrwałem, choć też miałem przejść na Wicketa. Za to mimo iż w nim nie pracowałem, to i tak będę go polecać, oczywiście tylko jak komuś Tapestry do gustu nie przypadnie ;)
Jak T5 Ci się podoba to polecam spróbować. Obecnie raczej nie natkniesz się na rewolucyjne zmiany wprowadzane w kolejnych wydaniach. A nawet jeśli będą (usunięcie page pool, live reload na services) to nie dotkną one raczej bezpośrednio Twojego kodu.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1292844926]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1292844926.4679";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383450]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>178.19.178.73</wp:comment_author_IP>
			<wp:comment_date>2010-12-20 13:40:16</wp:comment_date>
			<wp:comment_date_gmt>2010-12-20 11:40:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To ja się bardzo cieszę, że udało mi się kogoś wyciągnąć z mroków jsp.
Witam po radosnej stronie życia ;)
A jako, że o modułach testowych w T5 wiem nic bądź coś kole tego, to będę Ciebie i Twoją wiedzę wykorzystywać :) 
Ewentualnie jak Ci się start projektu przeciągnie trochę to może sam zdążę opisać testowanie i pomóc przy starcie projektu.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>14</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1292845216]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1292845216.993";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383448]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383457]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Samomotywacja</title>
		<link>http://rits.pl/2011/02/07/samomotywacja/</link>
		<pubDate>Sun, 06 Feb 2011 22:07:43 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[Witajcie po przerwie. Mam najgorętszy okres w projekcie za sobą więc teraz nadszedł czas na odpoczynek i pisania bloga , again :)

Nie było mnie wśród <em>żywych</em> przez około 2 miesiące, podczas których musiałem zmagać się z projektem. Podczas tego okresu miałem okazję zaobserwować na sobie ciekawe zjawisko.

Im więcej pracy tym lepiej wpływa na moją motywację (to wiedziałem), ale tylko do pewnego momentu, gdy fizycznie mój organizm przestaje wyrabiać (tego nie wiedziałem). Obciążony przez dłuższy czas wielogodzinną pracą zmieniłem się w takie zombie, które przepracowało 8h (12), które musiało przepracować, po czym udawało się na fotel / kanapę i udawało Ferdka Kiepskiego leżąc z browarem przed telewizorem.

Zostawiłem bloga w świętym spokoju, olałem jakiekolwiek czytanie artykułów czy oglądanie prezentacji, nie powstał żaden spike, nie spotykałem się z ludźmi. Jak na początku napisałem: umarłem. Jedyne co mogłem zrobić, a wymagało ode mnie więcej niż poruszania palcem po pilocie, to czytanie książek, ale nie związanych z pracą.

Opiszę kiedyś ten przypadek dokładniej i opatentuję jako lek na pracoholizm, może nobla nawet dadzą :) Moje wiekopomne dzieło zwać się będzie "Leczenie pracoholizmu pracą"

Teraz mając najgorętsze <em>deadliny</em> za sobą i pewną stabilizację w życiu wracam do codziennej rutyny. Zaczynam wychodzić do ludzi, chodzić do kina, spacerować, ćwiczyć, uczyć się, no i oczywiście pracować po pracy :P

Odbiegając od technicznych tematów zastanowiłem się co mnie zawsze motywowało do pracy (po pracy, tj do czegoś za co nikt mi nie płaci a związane jest bezpośrednio z zawodem). Proces wychodzenia z stagnacji nie był prosty, powstawała w tym czasie pierwsza wersja tego wpisu. No i o to ją macie, po ponad 2 tygodniach ^^ No ale w tym czasie doszedłem do pewnych wniosków więc teraz mogę się z wami tym podzielić.
<ul>
	<li>Spotkania JUGowe</li>
	<li>Prezentacje, książki i screencasty</li>
	<li>Dyskusje z innymi osobami z branży</li>
	<li>Testowanie nowych technologii</li>
</ul>
Skrócić to można do obcowania z mądrzejszymi ode mnie (jako, że na konferencje, wykłady, prelekcje, do pisania książek, przeważnie głupich nie biorą). Niestety Trójmiejska java user grupa, ostatnio nie jest najaktywniejsza. Opuściłem na dodatek ostatnią prezentację Łukasza Kuczery "<a href="http://it.wtrojmiescie.org/spotkania/clean-code-scala">Clean code - Scala</a>". Innych wydarzeń w rejonie przeważnie brak. InfoQ ma ograniczone zasoby tego co można obejrzeć, a parleys płatny jest. Niestety, jakoś tak dziwnie świat jest ułożony, nie ma co tydzień konferencji gdzie pojawiałaby się na dodatek prezentacja zmieniająca całkowicie pogląd świata na programowanie / zarządzanie projektem.

Z większych wydarzeń to wybieram się na konferencję <a href="http://33degree.org/" target="_blank">33rd Degree</a>, ale ona dopiero w kwietniu jest. Niemniej jednak mam nadzieję, że kilka osób tam spotkam :)

Kolejne źródło do zachęty by wziąć się do roboty to książki. Obecnie na tapecie mam <em>Growing Object-Oriented Software, Guided By Tests</em>. Niestety zabierając się do niej nie przewidziałem ilości pracy jaka mnie czeka i własnego zniechęcenia do świata. Książka dobra, ale teraz ciężko mi do niej wrócić.

Na szczęście, jak dobrze poszukać to zawsze się coś znajdzie do obejrzenia. A jak nie to pogoda coraz ładniejsza, można iść gidześ gdzie komputera nie ma, dziewczynę na spacer zabrać, później coś zjeść i z znajomymi na kręglach skończyć. Po jakimś czasie człowiek z przyjemnością siądzie przed kompem i natchnienie samo się znajdzie.

Do następnego]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2011-02-07 00:07:43</wp:post_date>
		<wp:post_date_gmt>2011-02-06 22:07:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>samomotywacja</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1297030066]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344374763";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808128]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Grzesiek]]></wp:comment_author>
			<wp:comment_author_email>grzegorz.duda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dworld.pl</wp:comment_author_url>
			<wp:comment_author_IP>151.193.120.15</wp:comment_author_IP>
			<wp:comment_date>2011-02-09 09:44:52</wp:comment_date>
			<wp:comment_date_gmt>2011-02-09 07:44:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Michał, na 33rd Degree znajdziesz wielu mądrych ludzi. Tak więc mam nadzieję, że wrócisz mocno zmotywowany. W końcu to "Conference for Java Masters" ;) 

A tak serio to czekam wpis jak sobie poradziłeś z wyjściem z tego pracoholizmu. A może jeszcze lepiej co by się stało, gdyby taki klimat pracy trwał dłużej?

Do zobaczenia na 33rd Degree.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1297274795]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1297274795.1474";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1297237492.531";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383549]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-02-09 20:12:15</wp:comment_date>
			<wp:comment_date_gmt>2011-02-09 18:12:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gdyby tak zostało jak było (tj. siedziałbym po naście godzin by na kolejny deadline się wyrobić), to pewnie bym przestał całkowicie poszerzać swoje horyzonty. 
Przez ostatnie tygodnie nie robiłem nic ponad to co ode mnie wymagano.
Powoli wracam do siebie jednak. Już zabieram do domu takie smaczki jak przygotowanie build scriptów w gradlu, czy projektowanie tego jak można usprawnić pracę zespołu. No nic, widać całkowicie nie da się człowiek wyleczyć z nałogu pracy, chyba ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1297275136]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1297275136.0645";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383552]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Tapestry 5 in Action MEAP</title>
		<link>http://rits.pl/2011/03/24/tapestry-5-in-action-meap/</link>
		<pubDate>Wed, 23 Mar 2011 22:38:16 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[Igor Drobiazko, jeden z commiterów tapestry, autor niemieckiej książki o tym frameworku, ogłosił właśnie, że rozpoczął się MEAP angielskiej wersji jego bryka.

Czym jest MEAP?

Manning Early Access Program to wczesny możliwość uzyskania dostępy do książki zanim zostanie opublikowana. Kolejne jej części są udostępniane wraz z postępem korekty nad poszczególnymi rozdziałami. Gwarantuje też najszybszy dostęp do książki i informacji w nich zawartej.

Jeśli ktoś jest zainteresowany Tapestry 5 to zdecydowanie polecam się zapisać, więcej informacji na <a href="http://www.manning.com/drobiazko/" target="_blank">stronach wydawnictwa</a>.

&nbsp;

A co do moich wpisów to w ten weekend albo w okolicach <a href="http://33degree.org/" target="_blank">33rd degree </a> wracam do pisania. Mam kilka pomysłów i jakiś scenariusz biznesowy, na którym można by przećwiczyć zabawy z Tapestry. Póki co będę jeno <em>Tłitować</em>, bo polubiłem :)

Stay tuned.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date>2011-03-24 00:38:16</wp:post_date>
		<wp:post_date_gmt>2011-03-23 22:38:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tapestry-5-in-action-meap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1300919897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[935853021]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>33rd degree - day 1</title>
		<link>http://rits.pl/2011/04/11/33rd-degree-day-1/</link>
		<pubDate>Mon, 11 Apr 2011 19:12:05 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[No i po 2 dniach kręcenia się po Krakowie, o czym może też wam napiszę, nadszedł w końcu wielki dzień, rozpoczyna się konferencja.  Jeszcze tylko śniadanie w hotelu, 10 min spacerkiem do Best Western Premium Krakow Hotel i rozpoczynamy Geekfest :D

Będę opisywać wydarzenia chronologicznie. Będę też dość szczegółowy, ostatni wpis będzie pewnie podsumowaniem, po którym będzie jeszcze grupa wpisów z kuluarów.

Zaczęło się od Lindy Rising i jej tematu o tym jak się oszukujemy (<a title="Linda Rising Deception And Estimation" href="http://33degree.org/talks.html#DeceptionAndEstimation" target="_blank">Deception and Estimation</a>). Miało to wprawdzie niewiele wspólnego bezpośrednio z programowaniem, a już na pewno nic z Javą, niemniej jednak mi temat odpowiadał. Kto mnie zna lepiej, wie że lubię "miękkie" tematy. To co udało jej się jako jednej z niewielu to uaktywnienie publiczności, całej. Zaliczam jej prelekcję jako wyjątkowo udaną. Przyjemnie się również z nią rozmawiało podczas przerwy na kawę (w zasadzie to opuściłem całą przerwę, bo rozmowa była zbyt wciągająca)

Po Lindzie na scenę wszedł Matt Raible (<a title="Matt Raible Comparing JVM Web Frameworks" href="http://33degree.org/talks.html#ComparingJVMWebFrameworks" target="_blank">Comparing JVM Web Frameworks</a>). Widziałem co pokazywał na Devoxxie 2k10 (<a title="Matt talk from Devoxx" href="http://parleys.com/#st=5&amp;sl=0&amp;id=2118" target="_blank">Parleys udostępnia ten speech za free</a>) więc planowałem rozpocząć unconference. Okazało się jednak, że Matt uaktualnił slajdy więc zostałem :P. W nowej wersji Tapestry awansowało na 5te miejsce więc trochę o nim mówił (co skończyło się tym, że zabierałem czas z Q&amp;A, jako że się musiałem wtrącać co pewien czas :P)

Matt niestety poszedł sobie tak szybko jak tylko mógł, a po nim przyszedł Nathaniel Schutta (<a title="Nathaniel Schutta Hacking Your Brain For Fun And Profit" href="http://33degree.org/talks.html#HackingYourBrain" target="_blank">Hacking Your Brain for Fun and Profit</a>). Jego wykładu mi jakoś nie podszedł, poszedłem więc do pustego pokoju konferencyjnego i rozpocząłem unconference. Wprawdzie wpierw byłem sam, ale na szczęście to się dość szybko zmieniło i miałem pierwszy ciekawy problem projektowy do dyskutowania. Tematem była kiełbasa i lockowanie jej na czas trwania sesji wielu klientów. Sesja przeciągnęła się na lunch, gdzie 400 geeków poruszało typowy dla nas problem: rozmawialiśmy o dupach (Moja karta graficzna jest do dupy ;)), no i trochę o pracy.

Nie podejrzewacie nawet ilu rzeczy można dowiedzieć się o wątkach, jbossie i javie wcinając zraza z ziemniakami.

Po obiedzie były WDW (wykłady do wyboru). Interesował mnie z tej sesji jedynie Hamlet D'Arcy i jego temat o statycznej analizie kodu w Intelliju (<a title="Hamlet D'Arcy Get'em before they get you" href="http://33degree.org/talks.html#Getem" target="_blank">Get 'em before they get you</a>). Prezentację i slajdy widziałem wcześniej na jego stronie/twitterze, więc w sumie to wynudziłem się trochę podczas samych slajdów. Na jego szczęście (bo będę pozytywnie go recenzować na mym ultra ważnym i wpływowym blogu :E), był bardzo otwarty na pytania, dzięki czemu udało mi się poznać moje narzędzie lepiej (w pracy żyję na co dzień z Ideą) oraz poznałem rozwiązanie kilku zagadek/problemów z nim związanych.

Teraz miały nastąpić workshopy. Wszystkie zapowiadały się ciekawie i na korytarzu wrzała dyskusja gdzie iść. BTW +1 dla  Hotelu i Grzegorza za przekąski i nieograniczoną ilość soków/wody/kawy/herbaty w przerwach. Wpierw miałem iść na GITa, ale jako że WiFi szwankowało (czyt. nie działało), to średnio bym miał okazję z tego coś wynieść. Ten sam problem miała sesja androida więc -1 za słabe przygotowanie się pod te zajęcia. Z rozkładu wychodziło mi, że albo Neal Ford i jego produktywny programista albo Linda z retrospekcją. Wiedząc, że to klawa laska jest, poszedłem do Lindy :)

Sesja traktowała o retrospekcji: czym jest i jak przeprowadzić (<a title="Linda Rising The Power of Retrospection" href="http://33degree.org/talks.html#ThePowerOfRetrospection" target="_blank">The Power of Retrospection</a>). Przydatne zajęcia, poprowadzone z dużą dozą humoru i dające kilka ciekawych pomysłów do zaimplementowania  w pracy. Jeśli się nie mylę to kilka pomysłów Linda chciała zaszczepić Grzegorzowi by zaaplikował na przyszłym 33degree, za rok zobaczymy co z tego wyjdzie :)

Na koniec był jeszcze Jakub Nabrdalik z kilkoma pomysłami dotyczącymi poprawiania firmy (<a title="Jakub Nabrdalik Hack your company" href="http://33degree.org/talks.html#BOFHackCompany" target="_blank">Hack your company</a>). Sam temat ciekawy jednak nie widzę sposobu by wdrożyć te pomysły. Dla wszystkich lepiej, że nie było mnie na <em>Web frameworks shootout</em> gdzie pewnie bym trollował chłopakom tekstem: <em>W Tapestry da się to zrobić lepiej! I szybciej!</em> ;)

Na koniec jeszcze tylko kilka piw od chłopaków z JRebela, dużo pogawędek i czas do hotelu.

O czymś nie wspomniałem? Niee, poznanie męża Lindy, pokazanie mi przez Matta (podczas beer party) drogi jaką mogę podążać, poznanie JRebel teamu (świetna ekipa), przeprowadzenie kilkunastu interesujących rozmów, pogawędki z dziewczynami z Luxoft HRów i kilka innych nieistotnych wydarzeń można chyba spokojnie pominąć ;)

No i tak mi minął pierwszy <del>nudny</del> dzień na 33rd degree. Za rok wracam... a wait, jeszcze minimum 2 wpisy zanim to ogłoszę :P

PS zdjęć napstrykałem sporo. Problem w tym, że ze mnie kiepski fotograf a w każdym pomieszczeniu było inne oświetlenie a ja nie lubię gdy lampa błyska więc średnio wyszły. Wpierw muszę przefiltrować fotki, a później dopiero postaram się zrobić fotorelację.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2011-04-11 21:12:05</wp:post_date>
		<wp:post_date_gmt>2011-04-11 19:12:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33rd-degree-day-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1302549125]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344252122";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808135]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz Rybka]]></wp:comment_author>
			<wp:comment_author_email>darkstariw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://akademiajavy.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>81.190.97.153</wp:comment_author_IP>
			<wp:comment_date>2011-04-12 00:41:55</wp:comment_date>
			<wp:comment_date_gmt>2011-04-11 22:41:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Niestety WiFi to problem, który chodzi za Grzegorzem niczym zjawa. Rewelacyjnie organizuje i koordynuje konferencje, ale z WiFi chyba zawsze ma problem. Co do fotorelacji - Picasa Web Albums :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302561716.4801";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1302591818]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302591818.4744";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383555]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Grzesiek]]></wp:comment_author>
			<wp:comment_author_email>grzegorz.duda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dworld.pl</wp:comment_author_url>
			<wp:comment_author_IP>151.193.120.15</wp:comment_author_IP>
			<wp:comment_date>2011-04-12 13:21:22</wp:comment_date>
			<wp:comment_date_gmt>2011-04-12 11:21:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OK, ok. Nastepnym razem bedzie lepsze WiFi. Podejrzewam, ze wiem gdzie lezy problem. Chyba moze to miec cos wspolnego z tym, ze dla mnie WiFi zawsze jest daleko za lista "Must Have", to nawet nie jest "Should Have". 
No ale widze, ze nie uda mi sie wszczepic 100% idei face2face, zamiast face2web. No nic. Pora sie chyba dostosowac ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1302607282]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302607282.8672";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383557]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-04-12 22:44:07</wp:comment_date>
			<wp:comment_date_gmt>2011-04-12 20:44:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<blockquote cite="#commentbody-25">
<strong><a href="#comment-25" rel="nofollow">Grzesiek</a> :</strong>
<p>OK, ok. Nastepnym razem bedzie lepsze WiFi. Podejrzewam, ze wiem gdzie lezy problem. Chyba moze to miec cos wspolnego z tym, ze dla mnie WiFi zawsze jest daleko za lista “Must Have”, to nawet nie jest “Should Have”.<br>
No ale widze, ze nie uda mi sie wszczepic 100% idei face2face, zamiast face2web. No nic. Pora sie chyba dostosowac ;)</p>
</blockquote>
Moje marudzenie będzie w jakimś podsumowującym poście. WiFi jak wspomniałem na konferencji, nie jest dla mnie priorytetem. Hotspot na kablowym switchu will do. 
Za to na warsztatach typu git, ludzie powinni mieć  z sobą możliwość się łączyć. Router o maksymalnie ograniczonej mocy (tak żeby nie siał sygnału po całym hotelu) pewnie will do.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>20</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1302641048]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302641048.3555";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383557]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383562]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>33 degree day 2</title>
		<link>http://rits.pl/2011/04/16/33-degree-day-2/</link>
		<pubDate>Sat, 16 Apr 2011 18:46:02 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[Postaram się streścić co by przejść jak najszybciej do podsumowania a następnie do tematów z kuluarów.

Dzień drugi miałem zacząć od Jevgeniego Kabanova (<a title="Abstract - Jevgeni Kabanov - Do you really get memory" href="http://33degree.org/talks.html#Memory" target="_blank">Do you really get Memory?</a>) i tematu zarządzania pamięcią w javie. Wyglądało ciekawie, jednak alkohol z poprzedniego dnia + wczesna pora sprawiły, że wybrałem sesję korytarzową i dyskusję kto dłużej pił, a dyskutantów było wielu.

Do czasu gdy zaczął mówić Paweł Lipiński  (<a title="Abstract - Paweł Lipiński - Don't Code, create software" href="http://33degree.org/talks.html#CreateSoftware" target="_blank">Don't code - create software!</a>), zdążyłem dojść do siebie. Zastanawiałem się wpierw czy nie odwiedzić ponownie Hamleta D'Arcyiego (<a title="Abstract - Hamlet D'Arcy - Java Boilerplate Busters" href="http://33degree.org/talks.html#JavaBoilerplateBusters" target="_blank">Java Boilerplate Busters</a>), ale szybkie spojrzenie na poruszany temat i stwierdziłem, że biblioteki o których mówi znam w stopniu satysfakcjonującym więc lepiej iść na coś miękkiego.

Wracając do Pawła. Poruszał on tematy związane z wytwarzaniem kodu poprzez testowanie. Było trochę o TDD, BDD, A-TDD i DDD. Krótko mówiąc dużo D było. Ciekawie, szczególnie podobały mi się wszystkie wtrącenia z sali, jako że wyciągały więcej informacji i jak zwykle, wprowadzały inny punkt widzenia do dyskusji. Zainteresowanych tematem odsyłam do wujka google na temat TDD.

Narzędzia do BDD pokazane przez Pawła i sama idea jakoś nie bardzo mi podchodzi. Chyba pozostanę przy zwykłych testach z <a href="http://monkeyisland.pl/2009/12/07/given-when-then-forever/" target="_blank">given, when, then</a>. Jeśli ktoś natomiast BDD (Behavior Driven Development)  się interesuje to polecam przejrzeć <a href="http://dannorth.net/introducing-bdd/" target="_blank">posty</a> Dana Northa (@Tastapod na twitterze).

Poza TDD w wszystkich smakach i odmianach było o pair programmingu  i innych metodach zaliczanych powszechnie do zwinnych. Wiele z tych rzeczy chciałbym wprowadzić jako codzienność w pracy, jednak pomysły takie jak 2 programistów 1 komputer nie brzmią dla ludzi z kasą przekonywająco.

Następnie nadszedł jeden z bardziej wyczekiwanych przeze mnie speechy. Steve Freeman (<a title="Abstract - Steve Freeman - Fractal TDD" href="http://33degree.org/talks.html#FractalTDD" target="_blank">Fractal TDD: Using tests to drive system design</a>), jeden z autorów <a href="http://www.growing-object-oriented-software.com/">Growing Object Oriented Software</a> (książka, przez którą nie mogę przebrnąć ;)) opowiadał o koncepcji TDD. Jest to jeden z jaśniejszych punktów tego dnia i całej konferencji. Początek miał Steve dość ciężki, ale na szczęście się rozkręcił później i w sumie chciałbym dostać jego slajdy w swoje ręce, bo zapamiętałem, że coś z jego prezentacji przekładało się bezpośrednio na kod który tworzę teraz, ale nie mogę sobie przypomnieć co to było ;P Wiem za to, że miało go poprawić :)

Gdy Steve skończył poszedłem do Matthew McCullougha  na Gita (<a title="Abstract - Matthem McCullough - Git" href="http://33degree.org/talks.html#Git" target="_blank">Git Going with a Distributed Version Control System</a>). Starałem się unikać technicznych wykładów podczas całej konferencji, zamiast na gicie miałem 2 inne <em>wykłady</em> na oku, ale dobrze, że nic innego nie wybrałem.

Matthew to chyba najlepiej przygotowany prezentujący jakiego widziałem. Mówi szybko, wiedzy do przekazania ma sporo, slajdów sporo, przykładów rzeczywistych sporo, ale wszystko jest przedstawione przejrzyście, zwięźle i zrozumiale. Sporo się też nauczyłem ;) Bardzo pozytywne wrażenie na mnie wywarł i mam nadzieję, że to nie był ostatni raz jak miałem okazję go posłuchać.

Gdy Matthew prezentował, to zrozumiałem w końcu co jest takiego w Gitcie i o co chodzi w niektórych jego ideach. Przyznaję: te wychwalane zalety jak śledzenie contentu a nie plików, mają sens nawet :) Jak to zacznie na windzie śmigać bez problemów, to może mnie nawet z Mercuriala na Gita nawrócicie.

Jeśli macie okazję pójść na warsztaty/prelekcję Matthewgo to <strong>gorąco polecam</strong>. Dla przypomnienia: na 33 degree było mnóstwo świetnych prelegentów, a mimo to on i tak się pozytywnie wyróżniał.

I znów unconference. Sang Shin i <a title="Abstract - Sang Shin - What's new in Java EE6" href="http://33degree.org/talks.html#JavaEE6" target="_blank">What's new in Java EE 6</a> jakoś mnie nie przekonały. Sang ciekawie mówił, było zabawnie, ale po chwili wyszedłem, nie wiem dlaczego.

Po przerwie ciekawie zapowiadał się Steve Freeman i jego drugi temat: <a title="Abstract - Steve Freeman - Five years of change, no outages" href="http://33degree.org/talks.html#NoOutages" target="_blank">Five years of change, no outages</a>, ale w połowie wymiękłem. Już wiem kto pisał najcięższe fragmenty ich książki. To było nie do strawienia i dlatego udałem się na lżejszy temat.

W sali obok było o narzędziu co w pracy używamy: sonar (<a title="Abstract - Matthew McCullough - Sonar" href="http://33degree.org/talks.html#Sonar" target="_blank">Monitoring 10 Critical Code Quality Metrics with Sonar</a>).  Matthew McCullough prezentował więc zakładałem, że będzie interesująco i przywróci mnie to do życia po tym co Steve ze mną uczynił. Nie myliłem się. Temat mi bliższy niż Git więc smaczki starałem się jedynie wychwycić i przygotować na jeszcze 2 sesje.

Kolejny był Nathaniel Schutta i prezentacja o usability (<a title="Abstract - Nathaniel Schutta - Agile UI" href="http://33degree.org/talks.html#AgileUI" target="_blank">Agile UI</a>). Wykład dobry, choć szkoda, że nie znalazłem się u Neala Forda. Nathaniel mówił ciekawie, jednak bardzo podobne pomysły słyszałem od <a title="Ryan Singer on usability" href="http://vimeo.com/15772341" target="_blank">Rayana Singera z 37Signals</a> (Ci od BaseCamp, polecam wszystkie 3 prezentacje). W skrócie: prototypujcie za pomocą kartki papieru i ołówka, myślcie jak użytkownik i pamiętajcie, <strong>zawsze</strong>, że to dla niego tworzycie ten system.

Dzień zakończyłem u Wojciecha Seligi, który opowiadał jak w jego firmie prowadzone są projekty Agilowe. Im podobno wychodzi w Polsce sprzedawać tylko Agile. Szkoda, że nie wszyscy mamy tyle szczęścia :(

No dobra, to jeszcze jeden dzień z konferencji, podsumowanie i zacznie się mięsko :)

Do następnego]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2011-04-16 20:46:02</wp:post_date>
		<wp:post_date_gmt>2011-04-16 18:46:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33-degree-day-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1302979563]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344168026";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>33degree - day 3</title>
		<link>http://rits.pl/2011/05/01/33degree-day-3/</link>
		<pubDate>Sun, 01 May 2011 19:20:56 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[No dobra, czas kończyć bo ciągnie się to za długo.

Ostatni dzień był dla mnie głównie serią unconference Stefan Tilkov opowiadał o RESTcie w Javie (<a title="Abstract - Stefan Tilkov - REST in Java" href="http://33degree.org/talks.html#RestJava" target="_blank">REST in Java</a>). No cóż, o ile ciekawe, o  tyle mogłem wybrać coś innego ;) <a title="Abstract - Michael Nygard - Failures Come In Flavors" href="http://33degree.org/talks.html#FailuresComeInFlavors" target="_blank">Failures Come in Flavors</a> przedstawione przez Michaela Nygarda, przypuszczam, że dużo bardziej by pasowało do mojej obecnej sytuacji ;)

Nie zrozumcie mnie źle, Stefan jest ekspertem od RESTa, dowiedziałem się więcej o dostępnych bibliotekach w Javie by zaaplikować RESTową architekturę, ale mi to akurat teraz jest zbędne.

Następnie udałem się na najgorszą z wszystkich prelekcji: <a title="Abstract - crap" href="http://33degree.org/talks.html#SolveUnsolvable" target="_blank">Marcin Kokott i Martin Chmelar w How to solve unsolvable problems in projects</a>. Jak dla mnie to przyszli panowie, by zareklamować swoje usługi i przekonać nas by ich zatrudnić. Jak dla mnie porażka, nic więcej na ich temat nie napiszę.

Kolejna prezentacja, mimo iż o tematach wszystkim dobrze znanych, była jednym z najjaśniejszych punktów konferencji. Szczepan Faber i Bartosz Bańkowski opowiadali o głównych grzechach popełnianych przez programistów (<a title="Abstract - Faber, Bańkowski - Divine Code" href="http://33degree.org/talks.html#DivineCode" target="_blank">Lost Chapters of Divine Code: 7 Deadly Sins</a>). Zgadzam się z nimi w pełni i staram się przekonywać ludzi, z którymi pracuję, do idei zawartych w ich prezentacji. No może nie do wszystkich. Przejdźmy przez t o co powiedzieli:
<ol>
	<li>Obiekt powinien nie mieć metod prywatnych, bądź mieć ich jak najmniej</li>
	<li>Obiekty bezstanowe nie powinny mieć metod statycznych</li>
	<li>Dziedziczenie komplikuje kod</li>
	<li>Nie powinno się tworzyć finalnych klas / finalnych metod</li>
	<li>Nie powinno się nazywać tej samej rzeczy na kilka sposobów</li>
	<li>Nie powinno się budować frameworków na wyrost</li>
	<li>static na polach prowadzi do stanu globalnego, który jest zły.</li>
</ol>
Ad 1. Ogółem to zgadzam się, że obiekty nie powinny być zbyt duże, ale przesada z ekstrakcją metod prywatnych i zamianą ich w metody publiczne, będzie prowadzić do biegunki klas, które są używane przez jeden obiekt jedynie.

Sam określiłbym to tak: jeśli wykorzystasz metodę prywatną w 2 obiektach, to wyekstrahuj ją do zewnętrznego obiektu by zachować zgodność z zasadą DRY.

Ad 2. Niemal w pełni zgoda. Słowo kluczowe static jest zakazane. Tworzyłem dla klienta niedawno standard kodowania w javie i był to jeden z pierwszych zapisanych przeze mnie  punktów: nie korzystać z statycznych utility classes. Nie jest to do kości złe, ale prowadzi do pokusy tworzenia aplikacji quasi proceduralnych, które niesamowicie ciężko jest testować i zmieniać.

Moja zasada: jeśli masz klasę, która posiada tylko statyczne metody, to jest ona uzasadniona jeśli może być wyekstrahowana do zewnętrznej biblioteki. Jako przykład podaję zawsze bibliotekę Apache Commons i klasę StringUtils. BTW jedna z bardziej użytecznych bibliotek.

Ad 3. Dziedziczenie uważam za złe. Widziałem proste obiekty, które był absolutnie niezrozumiałe z racji wielopoziomowej hierarchii klas. Dziedziczenie ma swoje miejsce, ale jeśli używa się go by ponownie wykorzystać kod, to bardzo łatwo złapać się w pułapkę, że coś nie działa i nie wiemy dlaczego, bądź koszt zmiany jest duży.

Dziedziczenie ma swoje miejsce i nie należy z niego całkowicie rezygnować, jednak w wielu przypadkach rozsądniej jest obiekt komponować, co prowadzi do bardziej elastycznej architektury.

Ad 4. Ogólnie zgoda. Odwołali się tu oni do Joshua Blocha, który stwierdził, że klasa powinna być abstrakcyjna albo finalna. Problem z takim podejściem pojawia się w trakcie pisania testów, bądź udostępnieniu kodu jako biblioteki dla klienta. Czasem musimy nadpisać jedną / kilka metod, bo mamy potrzebę inną niż autor przewidział.

Ad 5. W pełni zgoda. Borykają się z tym przeważnie projekty, które ciągną się na przestrzeni długiego czasu (a przynajmniej tak wynika z mojej obserwacji). Klient potrafi zmienić nazwę dla bytów co może przeniknąć szybko z dokumentów wymagań do kodu, a wtedy zaczyna się jazda, szczególnie jeśli zmienia się zespół programistów :)

Ad 6. Podsumowując: do powieszenia obrazka na ścianie potrzebny jest Ci gwóźdź i młotek. Nie buduj więc maszyny wbijającej gwoździe i wieszającej na nich obrazki, szczególnie gdy masz tylko jeden obrazek

Ad 7. Znów trudno się nie zgodzić. Stan globalny ciężko się zmienia i testuje. Hmm, może kompilator Javy powinien podczas kompilacji na każdym słowie static  wyrzucać prompta: "Czy jesteś pewien, że to chcesz zrobić?". Może to by ich oduczyło?

Od chłopaków trafiłem do Neala Forda i  <a title="Abstract - Neal Ford - Abstraction Distractions" href="http://33degree.org/talks.html#AbstractionDistractions" target="_blank">Abstraction Distractions</a>. Opowiadał on o ... trudno powiedzieć o czym, ale było ciekawie ;) Na poważnie, ciężko jest to wszystko zamknąć w kilku zdaniach by nie spłycić analizy jakiej dokonał Neal, dotyczącej tego jak myślimy, projektujemy, kodujemy, pracujemy, żyjemy. Wplatał w historie z życia wzięte zagadnienia związane z IT i szło mu to bardzo sprawnie.

Następnie wziąłem wolne  2.5 godziny i na korytarzu uczestniczyłem w licznych interesujących rozmowach. Jak na każdej konferencji: jeden z najlepszych momentów: możliwość pogadania z innymi devami.

Na sam koniec odwiedziłem jeszcze Teda Newarda i posłuchałem o ... tym by nie słuchać nikogo i myśleć samemu za siebie (<a title="Abstract - Ted Neward - Rethinking Enterprise" href="http://33degree.org/talks.html#RethinkingEnterprise" target="_blank">Rethinking "Enterprise"</a>). Bardzo odprężający wykład na koniec.

Jeszcze tylko losowanie, w którym udało mi się dostać licencję na Intellij (jej, już nie muszę korzystać z  Idei u klienta i samemu klepać kodu w eclipsie :) ) i czekając na pociąg udałem się z Łukaszem Kuczerą na miasto.

Podsumowując: było rewelacyjnie. Już pod koniec day 1 wiedziałem że za rok na pewno tam jadę ponownie. Jak dla mnie najlepsza javowa (i nie tylko) konferencja w tej części europy. Świetni prelegenci, dużo uczestników (nie tylko z PL), znakomita organizacja, przystępna cena ... a z resztą: w ankiecie na idealną konferencję tak opisałem tą moją wymarzoną, a Grzegorz ją zorganizował, za co bardzo mu dziękuję. Było rewelacyjnie i za rok postarajcie się, żeby was na niej nie zabrakło.

Co dalej na blogu? Kilka tematów, które przyszły do mnie na #33degree (teraz już technicznie stricte będzie). Pracuję też na screencastami, jak się uda i mnie technologia nie pokona (i brak czasu), to możecie się spodziewać kilku ciekawych, mam nadzieję, filmów o refactoringu i Tapestry. Tylko jeszcze w życiu osobistym posprzątam.

Do następnego]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2011-05-01 21:20:56</wp:post_date>
		<wp:post_date_gmt>2011-05-01 19:20:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33degree-day-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1304277656]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344542840";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808145]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin]]></wp:comment_author>
			<wp:comment_author_email>mstachniuk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mstachniuk.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>57.66.70.225</wp:comment_author_IP>
			<wp:comment_date>2011-05-09 12:59:08</wp:comment_date>
			<wp:comment_date_gmt>2011-05-09 10:59:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sprawdź jaką dokładnie dostałeś licencję, bo z tego co kojarzę to jest kilka i nie każdą można używać komercyjnie.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304938749.0109";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1304967400]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1304967400.783";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383565]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-05-09 21:03:25</wp:comment_date>
			<wp:comment_date_gmt>2011-05-09 19:03:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Z tego co kojarzę to są 3 licencje: enterprise, personal i academic/open source
Ta ostatnia jest chyba tylko do nie komercyjnego użytku, ale dzięki za uwagę, przejrzę jeszcze raz licencję żeby się upewnić.

Pozdrawiam,
Michał]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>22</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1304967806]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304967807.2854";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383565]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383570]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Photos from 33degree</title>
		<link>http://rits.pl/2011/05/08/photos-from-33degree/</link>
		<pubDate>Sun, 08 May 2011 09:41:00 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[Hi all,

I just finished uploading some of photographs I taken on 33degree conference to my flickr account.

To see all of them follow <a title="All of my 33degree photos" href="http://goo.gl/A8s1F" target="_blank">this</a> link. Click those link for photos from <a title="Day 1 only from 33degree, photo set" href="http://goo.gl/hinPh" target="_blank">day 1</a>,  <a title="Day 2 only from 33degree, photo set" href="http://goo.gl/80BOk" target="_blank">day 2</a>, <a href="http://goo.gl/5VqhB" target="_blank">day 3</a> only.

I won't upload everything I have taken on conference, but I will send them to Grzegorz. He will get them in original size (and that means hell big :)) and maybe will decide to share more of them or same but not resized.

As per reusing and license. I share them under <a title="CC-BY license" href="http://creativecommons.org/licenses/by/3.0/" target="_blank">CC -BY license</a>. Note however that if you want to use them commercially (yeah, right :D), you probably should ask person on photo for permission.

On the other hand, if you are on one of photos and don't want it to be published then notice me, I will either remove photo or censor it :)

Oh and don't get used to English on my blog. I'll be still posting mainly in Polish.

DISCLAIMER

I know that some of the photos are moved, too dark or just crappy as hell. I hate to use flash, as I consider it distracting and rude, so I tried to use only light that was in the room. There wasn't much of it there. I did my best, but those were my first steps with new camera and I still need to improve my technique. Next year batch will be better :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2011-05-08 11:41:00</wp:post_date>
		<wp:post_date_gmt>2011-05-08 09:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>photos-from-33degree</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1304847662]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344240098";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Ile metod ZAWSZE nadpisujesz w swoich obiektach?</title>
		<link>http://rits.pl/2011/06/05/ile-metod-zawsze-nadpisujesz-w-swoich-obiektach/</link>
		<pubDate>Sun, 05 Jun 2011 12:02:32 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[Hej, dziś temat mający korzenie w korytarzach hotelu gdzie odbywało się 33degree.

Podczas jednej z przerw rozpoczeliśmy dyskusję nad odwiecznym problemem w javie: ile metod i kiedy powinno się nadpisywać z klasy Object. By zacieśnić grono podejrzanych metod: rozmawialiśmy o hashCode, equals, toString. Całość w kontekście naszych aplikacji wykorzystujących Hibernate'a. Cała sprawa dotyczy też jedynie obiektów VO (Value Object), entities, DTO (Data Transfer Object) a nie services, controllers i innych DAO i managerów.

Jako wstęp do wpisu zachęcam do przeczytania kilku zasad tworzenia dobrych metod equals i hashCode, zebranych przez Andrzeja Ludwikowskiego w wpisach na jego blogu: <a title="Andrzej Ludwikowski - tworzenie metody equals" href="http://aludwikowski.blogspot.com/2011/02/metody-equlas-i-hashcode-w-javie.html" target="_blank">equals</a> i <a title="Andrzej Ludwikowski - tworzenie metody hashCode" href="http://aludwikowski.blogspot.com/2011/03/metoda-hashcode-w-javie.html" target="_blank">hashcode</a>. Jeśli ktoś nie czytał, a pisze kod w javie, to obowiązkowo zalecam też lekturę książki Joshua Blocha <a title="Amazon - effective Java 2nd edition" href="http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_1?ie=UTF8&amp;qid=1305458808&amp;sr=8-1" target="_blank">Effective Java</a>. Joshua dokładnie wyjaśnia wady i zalety oraz jak nadpisywać wszystkie 3 wymienione metody.

Główną linią podziału pomiędzy nami było czy w equals i hashCode korzystać z ID generowanego przez hiberneta czy nie oraz czy nadpisywać metodę toString. Moim zdaniem korzystanie z id hibernatowego ma zalety do których należy
<ul>
	<li>Pewność podczas identyfikacji obiektu. ID jest niepowtarzalne. Jeśli dwa obiekty są róne po porównaniu przez ID to na pewno jest to ten sam obiekt. Uwaga: owy obiekt może być w innym stanie, ale to historia na inny wpis.</li>
	<li>Kolejną zaletą jest <em>zwalenie</em> odpowiedzialności za utworzenie identyfikatora na kogoś innego (czyt. Hibernate-a).</li>
	<li>Przeważnie nikt też nie wpadnie na <em>genialny</em> pomysł zmiany wartości, którą postanowiliście zastosować do porównywania równości i generowania hashu (magia dwóch liter ID ;))</li>
</ul>
Są jednak też wady, a podstawową jest to, że ID potrzebne do obu metod będzie dostępne dopiero po zapisie obiektu do bazy danych. Można to obejść, ale przeważnie w mało ładny sposób, który może nas później ugryźć w najmniej odpowiednim momencie, pomińmy więc tą możliwość.

Dla wielu osób nie musi wyglądać to na poważny problem, ale niestety nim jest. Zastanówmy się teraz czy istnieje możliwość, że korzystamy z obiektów przed dodaniem ich do bazy?

Jeśli tak to trzeba się zabezpieczyć przed nullem w  id. Jak to zrobić?
<ol>
	<li>Możemy sprawdzać czy id == null i jeśli tak to zwracamy jakąś stałą, np String.EMPTY, zero, etc. Nie wydaje się to być złe, nigdy nie dostaniemy NPE. Jednak problem pojawia się gdy korzystamy z kolekcji, szczególnie haszujących. Z powodu tego, że 2 obiekty będą dla systemu identyczne, możliwe jest doprowadzenie do utraty danych. Problemem jest również korzystanie z obiektu po zapisaniu go do DB. Zmienia się ID (na wygenerowane przez hiberneta) więc próba skorzystania z metoda takich jak .contains(obj) zakończy się niepowodzeniem. Możemy na przykład wyświetlić tą samą informację na ekranie dwukrotnie.</li>
	<li>Możemy przed użyciem obiektu zapisywać go do bazy danych/pobierać przed skorzystaniem  z niego numer ID. Rozwiązanie pozbawione powyższych wad, jednak w wielu systemach zupełnie nie akceptowalne. Podstawowa wada to utrata kolejnego numeru ID oraz czasu potrzebnego na komunikację z bazą. Jeśli wyświetlamy numer ID użytkownikowi, może go zdziwić, że po zamówieniu nr  6, kolejne zamówienie ma numer 30. Inną sprawą jest, że ID bazodanowe nie powinno być prezentowane użytkownikowi, ale chyba każdy z nas miał gdzieś okazję widzieć system, który łamał tę zasadę.  Komunikacja z bazą to za to zupełnie inny problem. Jeśli mamy jakąś formę wizarda to wypadało by zadbać by obiekty stworzone przez użytkowników, a nigdy nie dokończone, zostały kiedyś usunięte z bazy. I kolejny problem wtedy mamy</li>
</ol>
Wracając do sedna i tego co Pan Michał radzi: da się uniknąć wykorzystywania ID w hashcode i equals więc starajmy się tego unikać. Pisząc encje zidentyfikujmy <span style="text-decoration:underline;">niezmienne</span> własności obiektu i wykorzystajmy je w equals i hascode. Dobrymi kandydatami są data powstania obiektu czy wymagane pola, których później się nie da zmienić np login. Wykorzystując kombinację takich danych da się dobrze identyfikować obiekty i nie trzeba przy każdym obiekcie zastanawiać się nad strategią zapisywania do bazy.

Czasem można wykorzystać też dane zmienne w czasie. Jeden z dyskutantów podał przykład z aplikacji nad którą aktualnie pracował. System służy do przeprowadzania ankiet. Według autora, nie ma problemu w wcześniejszym zapisaniu danych w bazie, przed rozpoczęciem korzystania z nich. Nie zdążyliśmy dokończyć dyskusji na ten temat, ale oto moja propozycją dla tego typu zagadnień.

Jeśli posiadacie ograniczony zbiór możliwych obiektów to może nie warto zapisywać każdego z nich, tylko agregować je. Łatwo to uzyskać poprzez porównywanie wszystkich pól w obiekcie.

Weźmy za przykład ankietę z dwoma pytaniami i trzema możliwymi odpowiedziami na każde z nich. Dla takiej ankiety istnieje zbiór 9 możliwych do utworzenia obiektów. Jeśli wypełni ankietę 1000 użytkowników to my nie będziemy gromadzić 1000 rekordów a jedynie 9. Spora oszczędność.

Co zrobić jeśli mamy ankiety z pytaniami otwartymi i zamkniętymi? Nikt nie powiedział, że ankieta (a w zasadzie odpowiedzi do ankiety) musi być obiektem monolitycznym. Obiekt odpowiedzi możemy podzielić na podklasy: odpowiedzi do części otwartej i zamkniętej. Część zamknięta jest agregowana w wyżej opisane sposób, otwarta tradycyjnie. Sama tabela odpowiedzi staje się jedynie łącznikiem pomiędzy użytkownikiem, odpowiedziami do każdej części oraz samym zestawem pytań.

Na koniec  słowo o metodzie toString(). Większość dyskutantów stwierdziła, że jej nie nadpisuje. Jako powód wymienili przykład z Effective Java, gdize Joshua podaje jako zagrożenie, możliwość rozpoczęcia parsowania przez użytkowników, wartości zwracanych z toStringa. Dla mnie to przykład jedynie książkowy, być może z racji tego jak projektuję aplikację.

Nie uważam, by ukrywanie stanu w ValueObjects (do których zaliczam encje), było wskazane, gdyż może prowadzić jedynie do takich absurdów jak parsowanie toString czy nadużywania refleksji. Ok, kwestia tego jak piszemy aplikacje, jednak jeśli nie nadpisujecie toString, z wyżej wymienionego powodu, to nie wystawiajcie innej metody, która działa jak toString a jedynie inaczej się nazywa (zaproponowane podczas tej dyskusji).

Nie unikniecie problemów związanych z parsowaniem stringów a jeydnie skomplikujecie sobie życie. Jeśli już więc unikamy toString, to wystawmy, przez odpowiedni interface,  zestaw metod do komunikacji, np myNoToStringObject.log.(LoggerAdapter, logLevel, logTemplate). Nie unikniemy wprawdzie tego, że ktoś przekaże nam własną implementację loggerAdaptera i i tak sparsuje Stringa, ale może choć utrudnimy mu życie na tyle, że zrezygnuje ;) Temat jest jednak dość obszerny by stworzyć kolejny wpis.

Tymczasem w komentarzach wpisujcie swoje przemyślenia i dajcie znać ile wy metod zawsze nadpisujecie w obiektach.
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>
<div id="W_x_sticky_0" style="display:none;text-align:left;font-family:'Helvetica Neue', Helvetica, Arial, san-serif;font-style:normal;font-variant:normal;font-weight:400;font-size:14px;line-height:1.5;position:absolute;width:250px;z-index:99999;left:10px;background-color:#fdfdbe;box-shadow:3px 3px 10px;top:25px;">
<div id="W_x_sticky_header_0" style="background:#f3f3f3;height:20px;border-bottom:2px solid #fefefe;box-shadow:0 3px 5px rgba(0,0,0,0.25);padding:5px;"><span id="W_x_sticky_status_0" style="height:15px;float:left;margin:0;padding:3px;">Save</span> <span id="W_x_sticky_close_0" style="height:15px;float:right;margin:0;padding:3px;">Hide</span></div>
<div id="W_x_sticky_content_0" style="min-height:100px;word-wrap:break-word;border-left:3px double rgba(238,150,122,.75);margin-left:20px;padding:1px 5px;">Note Here</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2011-06-05 14:02:32</wp:post_date>
		<wp:post_date_gmt>2011-06-05 12:02:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ile-metod-zawsze-nadpisujesz-w-swoich-obiektach</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1307275352]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808027]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Wojtek]]></wp:comment_author>
			<wp:comment_author_email>wojciech@erbetowski.pl</wp:comment_author_email>
			<wp:comment_author_url>http://erbetowski.pl</wp:comment_author_url>
			<wp:comment_author_IP>196.3.50.254</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 11:31:43</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 09:31:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A mi się wydaje dość dobrym rozwiązaniem na equals:
jeżeli id nie-nullowe to je porównaj, a jeśli nullowe to porównaj referencje.

W tym przypadku mogę operować np hashListami spokojnie, bez dublowania tworzonych (niezapisanych jeszcze w bazie) obiektów, a jednocześnie korzystać z wygody porównywania id kiedy już je mam.

Nie rozumiem tylko jak widzisz rozwiązanie kawałka z ankietami (jak się to ma do equals/hashCode), Hibernate nie wczyta wszystkiego z bazy i nie puści equals, żeby wiedzieć którego rekordu użyć chyba. W tym przypadku (poza opcją enumów) chyba by było miejsce dla złożonych z wielu pól Id hibernate'owych?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307352703.6721";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307353433]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1307353434.113";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383479]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>178.19.178.73</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 12:03:34</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 10:03:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Id może być równe hashCodowi, a hashcode wylicza się na podstawie wszystkich pól a więc samych hashcodów mamy ograniczony zbiór.
Jedyne co trzeba zapewnić to unikalność hashCode, ale to już kwestia budowy obiektu i tego z jakich obiektów będziemy go składać, generalnie nie powinno być to problemem.

Nie sprawdzałem czy hibernate to łyknie, ale nie spodziewałbym się z nim większych problemów (choć zawsze mnie zaskakuje czymś więc mogę się mylić)

A co do Twojego rozwiązania to też ciekawe. Muszę jeszcze przemyśleć czy nie widzę żadnych luk, ale wydaje się być ok.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>24</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307354615]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307354615.3713";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383479]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383485]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin Stachniuk]]></wp:comment_author>
			<wp:comment_author_email>mstachniuk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mstachniuk.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>194.11.254.132</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 12:27:01</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 10:27:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mi się rozwiązanie Wojtka nie podoba.

MyObject obj1 = new ...
MyObject obj2 = new ...
List list = ...
list.add(obj1);
list.add(obj2);

Możemy sobie utworzyć 2 indentyczne obiekty (w sensie wartości pól skladowych), z null'owym ID. Dodajemy je do listy i otrzymujemy w liście 2 te same (pod względem zawartości) obiekty, a tego raczej nie chcemy.
Ponadto jak byś do tego napisał hashCode()?

Ja tam jestem zwolennikiem napisania equals i hashCode, ktore porownuja pola jednoznacznie identyfikujace obiekt (wszystkie final, lub wynikające z danej domeny).

Co do toString() to jest ona dla nas, programistow, dla celów debugowania, loggowania, wypisywania na konsoli. O pomyśle parsowania toString() w celu budowy obiektu pierwsze słysze, ale brawo za inwencję ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307356021.3233";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307360242]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307360242.1043";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383487]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>178.19.178.73</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 13:42:23</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 11:42:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tak naprawdę to zrozumiałem pomysł Wojtka jako posiadanie dwóch equals i hashCode. Z listą nie będzie problemu, gorzej, że Hash kolekcja może się wykaszanić, ale to do przemyślenia, po pracy ;)

toStringa parsowanie opisał Joshua Bloch w Effective Java i ten sam powód usłyszałem na 33. Dla mnie to dziwne, bo w celu logowania i debugowania nie wyobrażam sobie bym miał kombinować na najdziwniejsze sposoby. Może gdybym pisał biblioteki, które dalej byśmy sprzedawali. No nic, ja żyję w krainie szczęśliwości gdzie należy nadpisywać toString()]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307360543]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307360543.8426";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383487]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383491]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Wojtek]]></wp:comment_author>
			<wp:comment_author_email>wojciech@erbetowski.pl</wp:comment_author_email>
			<wp:comment_author_url>http://erbetowski.pl</wp:comment_author_url>
			<wp:comment_author_IP>196.3.50.254</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 14:14:49</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 12:14:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Marcin ale zastanów się co ten kod miałby robić (który wkłada dwa identyczne obiekty i chciałby, żeby się nadpisały).

Też o tym myślałem, ale w codziennych sytuacjach nie chcę aby się nadpisywały te obiekty, bo to dla mnie rodzi więcej problemów. Stąd zacząłem stosować tę metodę.

Przykładowo request 1:

Podaj ile masz dzieci, gość podaje x.
(1..x).each {
  ojciec.addChild(new Child())
}

Twoim tokiem, gość właśnie miałby jedno dziecko, niezależnie od x.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307362490]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307362490.2502";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383495]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Konrad Garus]]></wp:comment_author>
			<wp:comment_author_email>konrad.garus@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://squirrel.pl/blog</wp:comment_author_url>
			<wp:comment_author_IP>78.131.137.62</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 19:44:16</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 17:44:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dobra praktyka czy nie, tożsamość encji i inne teoretyczne rozważania sobie, ale opieranie hashCode na ID jest po prostu niebezpieczne i prowadzi do nieprzyjemnych i trudnych do wyłapania bugów.

Z oczywistych względów może ugryźć przy zapisywaniu kolekcji. Hibernate przypisuje ID, zmienia się hashCode, i łamiemy kontrakt na wszelkie HashSety itd.

Inne problemy potrafią wyskoczyć przy odczycie. Zdarzyło mi się mieć kolekcje one-to-many już istniejące w bazie i zapisane dawno temu, gdzie w jednej sesji po odczycie ten sam rodzic miał inną ilość dzieci w zbiorze niż w drugiej (link poniżej). Nie dłubałem w implementacji, nie wiem czy to cache (1 czy 2 poziom), leniwa inicjalizacja, czy coś innego, ale tak czy inaczej radziłbym tego unikać.

http://stackoverflow.com/questions/5199978/hibernate-partial-lazy-initialization]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307382256.6867";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307382350]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307382350.6145";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383497]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin Stachniuk]]></wp:comment_author>
			<wp:comment_author_email>mstachniuk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mstachniuk.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.4.57.145</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 22:39:07</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 20:39:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wojtku, ja bym nie nazwał dzieci tak samo i odróżniał bym je po imieniu (ewentualnie dodatkowo nazwisko, data urodzenia, PESEL, lub odcisk palca :P - zależnie od wymagań).

Konrad przedstawił kolejny przykład na NIE twojej metodzie: Hibernate (lub cokolwiek innego) nadaje polu ID wartość i HashSet'y się zmieniają. Nie będziemy mogli np. usunąć obiektu z HashMap'y, bo będzie przeszukiwało nie ten kubełek.

Equals i hashCode mają nam pomagać, a nie utrudniać życie. Jak dla mnie twoje podejście może to prowadzić do trudnych do wykrycia błędów i godzin debugowania.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307392749]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307392749.9667";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383504]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Wojtek]]></wp:comment_author>
			<wp:comment_author_email>wojciech@erbetowski.pl</wp:comment_author_email>
			<wp:comment_author_url>http://erbetowski.pl</wp:comment_author_url>
			<wp:comment_author_IP>83.24.20.183</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 23:15:09</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 21:15:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ok, dzieci można ponazywać w kolejnych żądaniach, w innych transakcjach, a teraz chciałbyś wypełnić kolekcję.

Czyli uważacie, że ID w ogóle nie powinno stanowić części hashCode i equals ze względu na trudności z Hibernate? W takim razie jak rozwiążecie powyższy problem, jeśli w danej transakcji po prostu nie macie dodatkowych danych do wypełnienia elementów kolekcji (na USG już widać trojaczki, ale jeszcze nie widać płci i nie wymyśliliśmy imion, jeśli tak będzie sobie łatwiej wyobrazić ;-) ).

Ciekaw jestem, jak tak podstawowe zagadnienie nie doczekało się jeszcze jednego jasnego rozwiązania w dokumentacji Hibernate (a może się mylę?) tylko garści ostrzeżeń przed złymi praktykami?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307394910]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307394910.9862";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383515]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 23:32:53</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 21:32:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Doczekało się: http://community.jboss.org/wiki/EqualsAndHashCode
Jednak kwestia dalej pozostaje dyskusyjna. Łatwo polegać jest na ID, które zostaje nam dane, nie musimy kombinować jakie stałe przyjąć do wyliczania hashCode i equals.
Widziałem dość projektów gdzie to działało by wiedzieć, że można z tym żyć.

Jednak pociąga to za sobą cenę, o której cała ta dyskusja.

Co do pól to dla mnie jasnym pktem zawsze jest data stworzenia rekordu. Jest to śledzone przy większości encji, dość unikalne i stąd jest dobrym pkt wyjścia. 
Dla owego płodu była by to data pierwszego badania i nazwisko + imiona rodziców.
Te dane się nie zmienią a sprawią, że mam unikalny obiekt.

Pomińmy scenariusz gdy w tym samym szpitalu 2 pary o tym samym imieniu i nazwisku w tej samej milisekundzie rozpoczęły badanie ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>31</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307395974]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307395974.5536";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383515]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383517]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin Stachniuk]]></wp:comment_author>
			<wp:comment_author_email>mstachniuk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mstachniuk.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.4.57.145</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 23:38:32</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 21:38:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jedyny sens jaki widzę do używania ID w equals i hashCode, to gdy nigdy nie tworzysz obiektów tylko zawsze je dostajesz z bazy danych (z wypełnionym już polem ID). Wówczas zamiast CRUD'a masz tylko RUD'a ;) 

Jak dla mnie pola typu ID są sztucznymi polami narzuconymi nam przez relacyjne bazy danych. Nie są one tym co pozwala odróżniać od siebie dwa obiekty, a jedynie polem "technicznym". W obiektowych bazach danych nie ma pól w stylu ID, ale za to jest tożsamość obiektu (nadawana po zapisaniu obiektu w bazie i stała, aż do usunięcia obiektu). Ale to już całkiem osobny i długi temat.

Co do trojaczków na USG, to albo bym wprowadził obiekt pośredni (który niekoniecznie będę zapisywał w bazie danych) typu Płód, lub zastosował bym Buildera, w którym zgromadzę potrzebne informacje (może być w różnych transakcjach) i jak już będę miał wszystko, to zbuduję potrzebne instancje dzieci.

Michał jeszcze twierdzi, że można z tymi ID w equals i hashCode żyć, ale z pewnością niesie to za sobą wysoką cenę.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307396313]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307396314.4009";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383519]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-06-06 23:46:12</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 21:46:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To też nie jest złe rozwiązanie by zawsze mieć ID, było chyba o tym w tekście. Jest jednak problem: trzeba by kombinować jak zapewnić, że obiekt *na pewno* ma ID oraz jaki jest koszt tego.

Z tym się da żyć i zespół tworzący to będzie umiał się po swoim kodzie poruszać, o ile będzie świadom zagrożenia płynącego z owej sytuacji. Jeśli nie będą, to szybko życie może nauczyć dlaczego należy dbać o to cenne ID.
Schody się jednak zaczynają gdy projekt trzeba przekazać.
Miałem okazję pracować z kodem, który dostałem w spadku. Do tego bez możliwości konsultacji z twórcami. 
Jedno jest pewne, gdy zespół hakuje, to piekło spada na kolejne osoby pracujące z taką aplikacją.

I czy tylko Wojtek i ja widzieliśmy ID w tych 2 metodach?
Bosz, naprawdę pracuję z legacy code :o]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307396773]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307396773.5384";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383519]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383523]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Marcin Stachniuk]]></wp:comment_author>
			<wp:comment_author_email>mstachniuk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mstachniuk.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>194.11.254.132</wp:comment_author_IP>
			<wp:comment_date>2011-06-07 08:36:20</wp:comment_date>
			<wp:comment_date_gmt>2011-06-07 06:36:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Na zakończenie i pocieszenie napiszę, że nie tylko wy pracujecie z legacy codem :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1307428580]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307428580.4258";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383525]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Koziołek]]></wp:comment_author>
			<wp:comment_author_email>bjkuczynski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.koziolekweb.pl/</wp:comment_author_url>
			<wp:comment_author_IP>193.27.6.28</wp:comment_author_IP>
			<wp:comment_date>2011-06-14 08:52:09</wp:comment_date>
			<wp:comment_date_gmt>2011-06-14 06:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Samo pole ID nie jest narzucone przez DB. Narzuca je "niechcica" osoby odpowiedzialnej za zaprojektowanie danej klasy. W większości obiektów biznesowych można z powodzeniem zastąpić klucz w postaci ID za pomocą klucza złożonego z pól obiektów. Tyle tyko, że nikomu nie chce się kombinować nad budową takiego klucza ("bo komplikuje") ani nikt nie będzie chciał go implementować.
Bardzo częsta sytuacja w aplikacjach "otwartych na świat" gdzie rekord użytkownika ma swoje ID, ale od użyszkodniak wymagamy podania email. Dodatkowo testujemy unikalność emaila w bazie.

W przypadku używania klucza opartego o pola obiektu, a nie sztuczne ID problem nam znika. Możemy wymusić zarówno unikalność danych (np. email) jak i ich kompletność -&gt; patrz JSR 303 + klauzula NotNull w modelu po stronie bazy.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308034329.5159";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1308069081]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308069081.4413";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383519]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383528]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-06-14 21:51:48</wp:comment_date>
			<wp:comment_date_gmt>2011-06-14 19:51:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Zaczynam pisać po raz drugi to więc się streszczę :P

Dokładnie taki problem rozwiązywałem w przeciągu ostatniego miesiąca. Chciałem wprowadzić klucz złożony z 2-3 pól. Razem złączone tworzyły by unikalny klucz główny i umożliwiały proste (i logiczne) określenie czym jest obiekt. 
Odbiłem się jednak o ścianę niepewności czy to zadziała, czy inni developerzy zrozumieją moje intencję, nigdy tak nie programowaliśmy i kilka podobnych. Mój poziom innowacji też ma swoje granice więc mam kolejną tabelę z sztucznym kluczem głównym :/

Jednak czynnik psychologii w prowadzeniu zespołu i projektu to zagadnienie na zupełnie inny post.

Ostatecznie narzekać nie mogę. Pomagałem kolegom ogarnąć projekt gdzie była duża DB bez pozakładanych PK. Tam dopiero była masakra :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>36</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1308081108]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1308081108.842";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383528]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383529]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[KoziołekWeb &raquo; Blog Archive &raquo; O identyfikacji encji i lenistwie deweloperów&#8230;]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://koziolekweb.pl/2011/06/21/o-identyfikacji-encji-i-lenistwie-deweloperow/</wp:comment_author_url>
			<wp:comment_author_IP>188.165.250.12</wp:comment_author_IP>
			<wp:comment_date>2011-06-21 22:28:49</wp:comment_date>
			<wp:comment_date_gmt>2011-06-21 20:28:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] czas temu natknąłem się na arcyciekawy wpis na blogu Michała Gruca. Sam wpis traktuje o tym, które metody z klasy Object należy nadpisywać [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1308688212]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308688213.2474";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>only private static ... methods?</title>
		<link>http://rits.pl/2011/06/14/only-private-static-methods/</link>
		<pubDate>Tue, 14 Jun 2011 20:23:18 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=221</guid>
		<description></description>
		<content:encoded><![CDATA[Kolejny temat który mi po 33degree został, powoli kończę zaległości :P

Wpis inspirowany przez <a title="Hamlet D'Arcy blog" href="http://hamletdarcy.blogspot.com/" target="_blank">Hamleta D'Arciego</a>. Na jednej z prezentacji (bodaj o inspekcjach w Intellij), wspomniał on o jednej z własnych praktyk programowania. Mianowicie uważa on, że wszystkie metody prywatne powinny być statyczne.

Dlaczego?

Odpowiedź jest całkiem prosta: w przypadku statycznych metod, java nie pozwoli nam odwoływać się do nie statycznych pól klasy. Proste a genialne :)

No, ale moment, co zyskujemy na tym, że nie możemy korzystać z pól?
<ul>
	<li>Wprowadzamy bardziej funkcyjne podejście do metod.</li>
	<li>Można założyć, że dla 2 jednakowych inputów będziemy mieli taki sam output.</li>
	<li>Problemy wielowątkowości nam odpadają (taaa, no powiedzmy). Nie próbujemy modyfikować w 2 wątkach tego samego pola.</li>
	<li>Jest czyściej i łatwiej przeprowadzić ekstrakcję klasy, w końcu nasza metoda nie zależy bezpośrednio od klasy w której się znajduje.</li>
	<li>Łatwiej jest zapewnić SRP (Single responsibility), metoda więc będzie robić raczej jedną rzecz a dobrze</li>
</ul>
Jednak nie ma róży bez kolców. Osobiście nie wprowadzę takiego stylu w projektach w których uczestniczę ponieważ
<ul>
	<li>Tworzę czasem metody które, np opakowują geta z mapy, tak tylko żeby lepiej mi się czytało co to robi.</li>
	<li>Dziwne by było dla mnie też, przekazywanie  np klasy DAO do statycznej metody, tylko po to by na przykład pobrać pierwszy obiekt z zwracanej listy (znów w sumie kryterium czytelności)</li>
	<li>Mam uczulenie na słowo static. Ostatnio eksperymentuję nawet z stałymi które nie są statyczne (o czym może więcej kiedyś, jak uda mi się to do końca doprowadzić)</li>
	<li>Bałbym się, że ktoś nie zrozumie moich zamiarów i następnego dnia znajdę w mojej klasie mnóstwo staticów :cold:</li>
</ul>
Pomysł jednak ciekawy, zachowam go na przyszłość i jak podciągnę własny skill level/zmienię styl, to może zacznę używać. Póki co nie mogę powiedzieć, że moje wszystkie metody prywatne mogą być statyczne.

Co do screencastów, o których wspominałem jakiś czas temu to sobie odpuszczam. Próbowałem, kilka podejść zrobiłem i stwierdzam, że nie mam obecnie dość czasu (i chęci :( ), a dostarczenie czegoś mocno na kolanie skleconego nie zadowala mnie.

Za to piszę coś małego w t5. Jak uda mi się kilka pomysłów wsadzić w ten mini projekcik, to wrzucę kod na sieć i na nim poćwiczymy T5 wspólnie :) W sumie dawno T5 nie używałem więc i mi się ćwiczenie przyda :)

Do następnego]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date>2011-06-14 22:23:18</wp:post_date>
		<wp:post_date_gmt>2011-06-14 20:23:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>only-private-static-methods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1308082998]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1308082998]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1339538761";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808012]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Artur]]></wp:comment_author>
			<wp:comment_author_email>artur.chyzy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>77.252.121.46</wp:comment_author_IP>
			<wp:comment_date>2011-06-15 12:05:54</wp:comment_date>
			<wp:comment_date_gmt>2011-06-15 10:05:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ciekawi mnie tylko co w przypadku testów ? testowanie metod statycznych nie musi byc proste bo nie mozna latwo podmieniac mockow]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308132355.0864";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1308135719]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308135719.7674";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383463]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>178.19.178.73</wp:comment_author_IP>
			<wp:comment_date>2011-06-15 13:05:21</wp:comment_date>
			<wp:comment_date_gmt>2011-06-15 11:05:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nie jest to problem, privatów i tak nie testujesz (o ile refleksją nie czeszecie w testach). 

Pytanie co z pakietowymi metodami, udostępnionymi tylko dla testów, ale w takim wypadku myślę, że bym po prostu zastosował ekstrakcję takiej prywatnej metody do publicznej klasy. Łatwość ekstrakcji do zewnętrznej klasy jest tu kluczowa.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>39</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1308135922]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308135922.2044";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383463]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383464]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[KoziołekWeb &raquo; Blog Archive &raquo; Co modyfikator mówi o metodzie]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://koziolekweb.pl/2011/09/09/co-modyfikator-mowi-o-metodzie/</wp:comment_author_url>
			<wp:comment_author_IP>188.165.250.12</wp:comment_author_IP>
			<wp:comment_date>2011-09-09 21:21:32</wp:comment_date>
			<wp:comment_date_gmt>2011-09-09 19:21:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] przejmie na siebie część odpowiedzialności. Warto też zwrócić uwagę na pewien ciekawy argument, a mianowicie metody prywatne powinny być statyczne. Mam obecnie pewien mały projekt to zrobienia [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1315596808]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315596808.2248";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Primitives w javie</title>
		<link>http://rits.pl/2011/09/13/primitives-w-javie/</link>
		<pubDate>Tue, 13 Sep 2011 16:25:32 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[Trochę mnie nie było, ale i tematy się pozbierały. Jak pokonam na dobre lenia to opiszę wszystko co mi na wątrobie leży i w kajecie zanotowałem. Zaczynamy od tematu lekkostrawnego: primitives.

Od jakiegoś czasu, przeglądając zasoby sieci można wywnioskować, że jednym z większych niepowodzeń Javy, jest nie w pełni obiektowy model. Mianowicie Java posiada typy takie jak int, boolean, float, etc. Dalej można doczytać, że na szczęście nadchodzą języki, które uratują nas od tego przekleństwa (Scala, Groovy, Clojure i pewnie wiele innych).

Ale czy primitives (tak, nie wiem jak to się na PL tłumaczy) są aż tak złe?

Są trochę niebezpieczne, jako że Java je auto (un)boxuje (od 1.5), na podstawie czego Joshua Bloch stworzył kilka <a title="Joshua Bloch: Java puzzlers book" href="http://www.javapuzzlers.com/" target="_blank">Java Puzzlers</a>. Nie są też obiektami, przez co nie pasują do obiektowego modelu. Jednak mają przynajmniej dwie zalety z powodu których powstaje ten wpis i z których można korzystać do woli.
<ol>
	<li>Każdy primivitive ma wartość domyślną</li>
	<li>Nigdy nie mogą być nullem</li>
</ol>
Dlaczego jest to według mnie istotne? A szczególnie istotne w kontekście warstwy danych?

Weźmy najprostszą flagę Boolowską, powiedzmy, że oznacza ona czy email usera został zwalidowany (kliknął jakiś link w @ or sth). Korzystając z Hibernate Criteria API tworzycie zapytanie wykorzystując ją jako warunek. Zapytanie ma wyciągnąć wszystkie nieaktywne konta użytkowników. Wyglądało by to mniej więcej tak:  (Pseudokod pewnie idealnie się kompiluje, jeśli nie to proszę nie informujcie mnie o tym ;))

[sourcecode language="java"]
public class Email {//nasza encja
 ...//adnotacje i inne potrzebne pierdoły
 private Boolean active;

 public void setActive(Boolean active){
 this.active = active;
 }
 public Boolean isActive(){
 return active;
 }
 .... // pola inne i metody
}
public class JakiesDaoEmail {
 public List&lt;Email&gt; mojaMetodaSzukajacaMaili(Boolean active){
 Criteria inactiveEmails = createCriteria().addRestriction(Restriction.eq(&quot;active&quot;, active));
 ...
 }
}
[/sourcecode]

No i dobra, co jest tu nie tak i dlaczego primitive miałby nam zrobić dobrze, a przynajmniej trochę pomóc?

Zacznijmy od tego co jest źle a później dopiero o rozwiązaniach. W przykładzie, tak jak jest zdefiniowany ten wihajster, użytkownik może mieć maila aktywnego, nie aktywnego i ch..olera go wie jakiego. O tym co oznacza null pogadamy przy okazji kolejnego wpisu na temat null object pattern (ten się za bardzo rozrósł i musiałem dzielić). Zapytanie więc zwróci nam nie pełną listę nieaktywnych userów.

Oczywiście nie w ciemię bity  programista może zacząć zabezpieczać się przed nullem, w końcu wystarczy zainicjalizować pole w momencie deklaracji i w seterze sprawdzać czy nie dostaliśmy nulla. Korzystając z hiberneta można w restrykcjach na sztywno umieścić or by szukał też nulli, dołożyć jeszcze adnotację notnull i column z deklaracją default value dla kolumny i  ... o rly?

Jeśli macie team dość zdyscyplinowany to pewnie można. Jeśli nie, to łatwiej przekonać wszystkich by korzystali z primitives.  Jak wspomniałem każdy typ podstawowy (czy jak się je oficjalnie nazywa), posiada wartość domyślną. No tak, obiektowe wersję też ją mają, ale null nie jest kandydatem z moich snów i marzeń.

Korzystając z prymitywów zostanie nam wprawdzie jeden problem: unboxing, ale to już problem wyższej warstwy. W każdym bądź razie tworząc statystyki nie odkryjecie, że w systemie macie tak naprawdę jeszcze raz tyle userów o nie aktywowanych mailach ;)

I ... to jeszcze nie koniec :) Obiektowe odpowiedniki primitivów zazwyczaj widziałem <em>'czyszczone'</em> poprzez setActive(null). Powodzenia w debuggowaniu tak <em>wyczyszczonej</em> flagi. Mały bool może nie da 100% gwarancji, że NPE nie poleci (przekazanie Booleanu = null jako parametru w połączeniu z unboxem zrobią nam ała), ale znacząco utrudni psucie nam innych fragmentów kodu czy zaśmiecanie ich przez kod szukający nulli.

I tak, wiem, że opisuję haki na bad practices, ale gdzie bym nie pracował to się z tym spotykam. Praktyka wstawiania siedzi tak mocno w nas, że ostatnio i <a title="Koziołek o testach" href="http://koziolekweb.pl/2011/08/23/testy-dla-wielu-danych-w-testng/" target="_blank">Koziołek</a> prezentując testy posłużył się nullem miast wstawiać zera. Na dzonie przeglądając example kody tu i ówdzie nulla też się znajdzie. No i niby nic, bo większość wie o co chodzi, koncepcja przekazana. Tyle że młodzież co jeszcze NPE nie szukała, się szybko uczy. A później będzie, że jak Koziołki tak robią to i oni powinni.

Od dziś z powyższej przyczyny postaram się walczyć w moich pseudokodach z nullami. Amen. Rozejść się można, koniec wpisu (bosz z 2 tyg go produkowałem :/ Jeśli coś nie ma sensu to sorry, ale z 2x go dzieliłem. Feedback mile widziany :))]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2011-09-13 18:25:32</wp:post_date>
		<wp:post_date_gmt>2011-09-13 16:25:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>primitives-w-javie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>draftfeedback_requests</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:13:"4e6d339869b23";a:3:{s:3:"key";s:13:"4e6d339869b23";s:4:"time";s:10:"1315779480";s:7:"user_id";s:8:"15995486";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>draft_feedback</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:13:"4e6d339869b23";a:1:{i:0;a:2:{s:4:"time";s:10:"1315868526";s:7:"content";s:71:""... i ch** go wie jakiego"  ... taaa, jesteś pewny tego w tekscie ?

";}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1315931134]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1315931136]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808155]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Koziołek]]></wp:comment_author>
			<wp:comment_author_email>bjkuczynski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://koziolekweb.pl</wp:comment_author_url>
			<wp:comment_author_IP>85.222.74.16</wp:comment_author_IP>
			<wp:comment_date>2011-09-13 20:07:51</wp:comment_date>
			<wp:comment_date_gmt>2011-09-13 18:07:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Soł tró. W tamtym poście chodziło o dodatkowe warunki brzegowe i użycie NULL było po prostu wygodne. Zgadzam sie jednak w pełni NULL=Zło]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1315937271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315937272.0786";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383575]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[mk]]></wp:comment_author>
			<wp:comment_author_email>pk999@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.205.169.99</wp:comment_author_IP>
			<wp:comment_date>2011-09-15 10:38:27</wp:comment_date>
			<wp:comment_date_gmt>2011-09-15 08:38:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Co to jest za dzona, o której piszesz ? chodzi  to : http://java.dzone.com/, czy coś jeszcze innego ?

Same korzystanie z nulli rzeczywiście nie jest zbyt dobrą praktyką, ale nie wyeliminujemy tego tylko poprzez podstawianie 'prymitywów'. Chyba, że traktujemy prymitywy jako wspomniane NullObjects i w każdym innym przypadku także korzystamy z tych obiektów]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316075908.0346";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1316086238]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316086238.3113";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383580]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.73.164.208</wp:comment_author_IP>
			<wp:comment_date>2011-09-25 22:13:11</wp:comment_date>
			<wp:comment_date_gmt>2011-09-25 20:13:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tak, chodziło dokładnie o ten serwis. Założyłem, że jeżeli ktoś trafia na tak małego bloga jak mój, to jeden z większych serwisów javowych zna. Na przyszłość postaram się nie pozostawić wątpliwości, dzięki za uwagę.

Tak, są lepsze sposoby by wyeliminować nulla, ale wymagają wysiłku. Nie znam programistów którzy lubili by się wysilać, wprowadzam więc prosty sposób by uniknąć nulli i nie wymuszać null objecty.
Taka alternatywna furtka w javie jedynie dostępna, mało problemów powodująca. A z ewentualnymi exceptionami, wynikającymi z wprowadzenia prymitives, to już każdy programista będzie umiał walczyć.

Ostatnia rzecz: nie uważam że prymitives są złe. Koniec końców i tak zawsze opakować je wypada w własne obiekty, podnosząc trochę poziom abstrakcji, ale to już temat na inną dyskusję]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>43</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1316981593]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316981593.6497";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383580]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383585]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Ogłoszenie parafialne</title>
		<link>http://rits.pl/2011/09/25/ogloszenie-parafialne/</link>
		<pubDate>Sun, 25 Sep 2011 20:20:32 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[To teraz mogę już oficjalnie ogłosić.

Wyjeżdżam w przyszłym tygodniu na pół roku do UKejowa na kontrakt. Jak za pół roku będę dalej chciał promować Tapestry 5 to znaczy, że da  i fajnie się z nim pracuje.

Opóźnienia w publikowaniu tekstów wynika w dużej mierze z tego, że teraz mam sporo innych zajęć okołopracowych. Zakładam, że jak już w Cambridge  znajdę sobie lokum (jeszcze jestem bezdomny), to będę miał czas na pisanie. Tymczasem jeszcze o chwilę cierpliwości proszę i nie kasowanie mnie z favorites ;)

Mam nadzieję, że przez te pół roku zdążę doszlifować swój T5 warsztat na tyle by móc napisać o paru ciekawostkach jakie znalazłem podczas pracy :)

Pozdrawiam]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2011-09-25 22:20:32</wp:post_date>
		<wp:post_date_gmt>2011-09-25 20:20:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ogloszenie-parafialne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tapestry5"><![CDATA[Tapestry5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1316982034]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1316982034]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808160]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek Dziurko]]></wp:comment_author>
			<wp:comment_author_email>tdziurko@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tomaszdziurko.pl</wp:comment_author_url>
			<wp:comment_author_IP>78.154.72.225</wp:comment_author_IP>
			<wp:comment_date>2011-09-27 21:17:12</wp:comment_date>
			<wp:comment_date_gmt>2011-09-27 19:17:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No to się faktycznie ciekawie dzieje :) Powodzenia na obcej ziemi i niech Ci się tam za bardzo nie spodoba (jak sporej części ludzi, którzy pojechali z PL pracować za granicą) bo jeszcze nie będziesz chciał wracać :)

Ze swojej strony miałbym kilka pytań odnośnie zdobywania takiej pracy na kontrakt za granicą: jak się za to zabrałeś, czy szukałeś sam czy przez kogoś znajomego a może przez jakąś firmą rekrutacyjną, a może to Ciebie znaleźli? :)

Generalnie ciekawi mnie jak to wygląda własnie od strony załatwiania, więc jakbyś miał wolną chwilę i popełnił o tym wpis to byłby wdzięczny :) Nie to, żebym się wybierał, bo dla mnie to już raczej za późno na takie eskapady (Rodzina, itp), ale fajnie byłoby wiedzieć jak można coś takiego sobie załatwić :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1317151033]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317151033.3792";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383578]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>33degree 2012</title>
		<link>http://rits.pl/2011/10/31/33degree-2012/</link>
		<pubDate>Sun, 30 Oct 2011 23:50:03 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[No więc właśnie się zarejestrowałem :)

W piątek w firmie powiedzieli, że mogę lecieć więc pewnie CU there :)

33 degree było najfajniejszą konferencją na której dotąd byłem i od dłuższego czasu czekałem na to by Grzegorz podał datę kolejnej edycji. Osobiście bardziej odpowiadałby mi kwiecień, ale trudno, nie można mieć wszystkiego :)

Polecam moje <a title="33dergee blog posts" href="http://goo.gl/zHtE3" target="_blank">wpisy</a> i <a title="33degree photos" href="http://goo.gl/A8s1F" target="_blank">zdjęcia</a>  z poprzedniej edycji. A w tym roku zapowiada się, że będzie równie ciekawie, jak nie lepiej :) Liczę, że spotkam tam sporo osób, których dość długo nie widziałem (przynajmniej pół roku ;))

Jeśli podoba Ci się co czasem tu skrobię, to będę wdzięczny jeśli podczas rejestracji  podasz mój mail (michalgruca (shfit-2) gmail (kropka) com). Taka forma wirtualnego browara  :)

&nbsp;

Wiem, że wyjechałem bez zapowiedzi, wiem że miałem coś o tym napisać, ale głupi jestem. W korpie spytałem się czy mogę pstryknąć parę fotek bo o nich na blogu tworzę wpis właśnie.

Skończyło się tak, że dostałem zestaw zasad pisania o korporacji, zakaz robienia zdjęć i <em>prośbę</em> o draft do zatwierdzenia. Było zrobić jak z zensarem i po prostu publikować.

Jako, że każdy dzień przynosi trochę nowych informacji o miejscu pracy i technologii to wpis ciągle przerabiam i to w dwóch językach. Trochę tego za dużo  więc powstaną raczej na pewno 2 wpisy i tylko po angielsku.

Zmiana języka raczej nie będzie  na stałe, choć jeszcze to rozważam, ale wpisy pod zatwierdzenie w jedynym słusznym języku będą powstawać :)

&nbsp;

Do poczytania więc i oby do zobaczenia w Krakowie :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date>2011-10-31 01:50:03</wp:post_date>
		<wp:post_date_gmt>2011-10-30 23:50:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33degree-2012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1320018605]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1320018615]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15995486";s:7:"blog_id";s:8:"16307690";s:9:"mod_stamp";s:19:"2011-10-30 23:50:03";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1345208427";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808101]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek Dziurko]]></wp:comment_author>
			<wp:comment_author_email>tdziurko@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tomaszdziurko.pl</wp:comment_author_url>
			<wp:comment_author_IP>78.154.70.232</wp:comment_author_IP>
			<wp:comment_date>2011-11-04 22:24:30</wp:comment_date>
			<wp:comment_date_gmt>2011-11-04 20:24:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ja też planuję, ale jeszcze nie na 100%. Do 5 czy 6 grudnia mam czas na najtańszą rejestrację :) Do tego czasu zobaczymy jak będzie wyglądała kwestia przepustki od Żony i Małego Brzdąca (TM) ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1320438270]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320438270.5083";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383531]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[What I&#8217;m doing in UK &laquo; Reliable IT Solutions]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mgruca.wordpress.com/2011/11/20/what-im-doing-in-uk/</wp:comment_author_url>
			<wp:comment_author_IP>216.151.210.50</wp:comment_author_IP>
			<wp:comment_date>2011-11-20 13:05:05</wp:comment_date>
			<wp:comment_date_gmt>2011-11-20 11:05:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I am. I have signed half year contract so I should be here till April (with exception of going to 33degree conference), what will happen next? Hard to say, and although we&#8217;ve started talking about it right now [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321787106.2934";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1321791155]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321791155.4607";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>What I&#039;m doing in UK</title>
		<link>http://rits.pl/2011/11/20/what-im-doing-in-uk/</link>
		<pubDate>Sun, 20 Nov 2011 11:04:59 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[Hi all,

as promised in previous post, this time I publish for first time in English (or something that I'm calling English). Please treat this as a response to all questions regarding where am I, what I'm doing and how I've got here. Also if you have any further questions please ask them in here, as most probably someone else will also ask me about it ;) Last thing, it may be boring, as I'm describing all sort of stuff ;)

<strong>Disclaimer </strong>As a full story is rather long, and more actors are involved then I'm willing to introduce, hence I'm allowing myself to make story simpler.

<strong>The tale</strong>

All began around June when company called <a title="Proquest home page" href="http://www.proquest.co.uk/en-UK/" target="_blank">Proquest</a> was searching for contractors. They found my <a title="My linkedin profile" href="http://pl.linkedin.com/in/michalgruca" target="_blank">linkedin</a> profile by Tapestry 5 keyword. I had little practical experience with T5 till now, however combined with my theoretical knowledge it was enough for them. We've made couple calls, exchanged some emails, I've taken online tests, they told me what they are doing and happy with answers we've decided to arrange interview in their UK office.  In July I've been in Cambridge for face to face interview after which they started corpo process to join me with onsite team. Right after interview I was hyped by Howard Lewis Ship tweet, in which he thanked to proquest for help with dealing with a 'subtle bytecode generation bug'. Can I ask for better recommendation then from gather of Tapestry 5? :)

It took some time before everything was  ready for my coming, but here I am. I have signed half year contract so I should be here till April (with exception of going to <a title="33degree 2012" href="http://mgruca.wordpress.com/2011/10/31/33degree-2012/" target="_blank">33degree conference</a>), what will happen next? Hard to say, and although we've started talking about it right now it's too early to say anything, I should know more soon.

<strong>Proquest - the client</strong>

Regarding company itself, I was excited to join they ranks, even if for just short time. Proquest is large corporation , scattered all around the world. Company main profile is searching and processing information.

They've come up with they own development process, which they follow for couple of years. Core team haven't changed much recently, and they got a lot of knowledge in the domain. Just one thing freaked me, and not just a bit but a lot. Open space. It's really <em>open</em> in here. I wanted to take a photo of that, but corpo rules... sorry :)

I thought that I've seen open spaces (in Zensar and in some degree in DC), but Proquest beats both those companies  hard in that regard. Other than LCD screens nothing separates people from each other. And it wouldn't be so scary if the rooms were smaller, but they are large. It took me a while to get used to such office layout, and IMHO I was able to adopt <em>so</em> <em>fast </em>just because my desk is next to window, so it brings me some degree of comfort.

<span style="text-decoration:underline;">Top tip</span>: watch out to not overdo with some concepts. Nonetheless I must admit that such layout has it advantages: communication is so much easier. On the other hand having a private chat is just impossible.

<strong>Technical</strong> - Tapestry :)

From technical point of view, it is journey of my dreams. Proquest adopted Tapestry 5 long before first stable version, when T5 was in early beta and since then, they are contributing to the project (mostly indirectly). They are also well aware what's going on with framework and cooperate with Howard Lewis Ship whenever they need to push some features badly (for example T5.3 reduces memory consumption on pages, by a ... lot, and guess who was using every beta version of that release :)) That approach works well for both sides, as T5 gets better, due to insights from large project, and Proquest gets features it needs faster.

<span style="text-decoration:underline;">Top tip 2</span>: use Tapestry. Large corporation do, and it is happy with it ;)

From my point of view I can finally test my knowledge against real, live, large project, developed by people who really know the technology, and judge for myself what I like/dislike in T5. Other than T5 they don't use any other frameworks, just some basic libraries (test tools + apache commons and alike) and some 3rd party tools for search engine. After a month I can see that there is not much value that additional libraries/frameworks could add to the project. So I'm happy with pure java + t5.

<strong>Project</strong>

Time to write something about the project itself.  We are working on search tool that is used already by many academic and professional clients. Currently main clients are libraries and universities, however after some acquisitions, professional leg of users is growing fast. and it's likely that while using library system you had contact with one of Proquest tools already. Application is searching in large datasets of indexed databases (periodicals, books, articles, thesis, etc) and allows to work further with returned documents (e.g. set alerts, export results, etc).

I've been assigned to search team, so my tasks regard mainly everything between search boxes in the UI and 3rd party indexing tool available via set of services.

<strong>My observations</strong>

First of all it is good to just write code. Being developer takes a lot of burden out of one shoulder. But I'm starting to miss some things related to being in decision chain of the project so most probably before end of the contract, I'll spam couple of @ boxes with ideas regarding design, architecture and development process itself :)

Nonetheless it's refreshing and changes perspective helps to look at development from different angle, take step back and rethink some of your opinions. At least it helped me :)

Application is guarded by couple thousand of unit tests so it's harder to break anything. Sadly thousands of tests takes really long to run, I haven't broken the build yet, but I've seen couple of mails send by CI tool that should be titled 'Run <strong>all</strong> the tests  before commiting, dumbass!'. I understand that it takes a lot of time, but I don't get how can you just skip that part?

Ok, that's more then enough for one time. Next time I'll publish some thoughts on T5 itself and after that let's head back  to post promised earlier like null object pattern :P (ok on the way there maybe I'll write one more post about something about testing and tools)

So CU next time :)

&nbsp;

PS oh BTW <strong><span style="text-decoration:underline;">Top tip of all:</span></strong> if you are going to work abroad and are planning to finish some of your projects in free time, then it is good to remember to take your code with you ... Even more important when you left at home  your vdisk with redmine and all tasks in it (c's you didn't know about http://www.hostedredmine.com :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2011-11-20 13:04:59</wp:post_date>
		<wp:post_date_gmt>2011-11-20 11:04:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-im-doing-in-uk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>draftfeedback_requests</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:29:"scott.mccarthy@proquest.co.uk";a:3:{s:3:"key";s:13:"4ec059a60b45d";s:4:"time";s:10:"1321228710";s:7:"user_id";s:8:"15995486";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1321787100]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15995486";s:7:"blog_id";s:8:"16307690";s:9:"mod_stamp";s:19:"2011-11-20 11:04:59";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1321787104]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344540034";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808040]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Tomasz Dziurko (@TomaszDziurko)]]></wp:comment_author>
			<wp:comment_author_email>TomaszDziurko@twitter.example.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/TomaszDziurko</wp:comment_author_url>
			<wp:comment_author_IP>78.154.64.20</wp:comment_author_IP>
			<wp:comment_date>2011-11-21 11:02:15</wp:comment_date>
			<wp:comment_date_gmt>2011-11-21 09:02:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Finally some data about your betrayal of our nation ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321866135.9101";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_post_as</wp:meta_key>
				<wp:meta_value><![CDATA[twitter]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_avatar</wp:meta_key>
				<wp:meta_value><![CDATA[http://a0.twimg.com/profile_images/776432268/face_med_2_normal.jpg]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_foreign_user_id</wp:meta_key>
				<wp:meta_value><![CDATA[126601155]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1321866684]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1321866685.364";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383493]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>195.22.151.242</wp:comment_author_IP>
			<wp:comment_date>2011-11-21 11:16:34</wp:comment_date>
			<wp:comment_date_gmt>2011-11-21 09:16:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'll respond like one of my heroes from childhood: Don't worry, I'll be back ;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>48</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1321866995]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321866996.4815";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383493]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383496]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Tomasz Dziurko (@TomaszDziurko)]]></wp:comment_author>
			<wp:comment_author_email>TomaszDziurko@twitter.example.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/TomaszDziurko</wp:comment_author_url>
			<wp:comment_author_IP>78.154.64.20</wp:comment_author_IP>
			<wp:comment_date>2011-11-21 19:11:19</wp:comment_date>
			<wp:comment_date_gmt>2011-11-21 17:11:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, I am negotiating my presence at 33rd Degree :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1321895480]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321895481.9176";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383502]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Shankar]]></wp:comment_author>
			<wp:comment_author_email>visvanathan.shankar@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.128.174.179</wp:comment_author_IP>
			<wp:comment_date>2011-12-07 05:58:47</wp:comment_date>
			<wp:comment_date_gmt>2011-12-07 03:58:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations Michal! Good to see this post. All the best!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323230327.6542";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1323249819]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323249819.8214";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383508]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Questioning your assumptions &laquo; Reliable IT Solutions]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mgruca.wordpress.com/2012/01/23/questioning-your-assumptions/</wp:comment_author_url>
			<wp:comment_author_IP>72.233.69.24</wp:comment_author_IP>
			<wp:comment_date>2012-01-23 02:04:45</wp:comment_date>
			<wp:comment_date_gmt>2012-01-23 00:04:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] As you probably know I&#8217;ve moved couple months ago to UK to work in ProQuest. If you haven&#8217;t heard about it, then please check out my previous post. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327277650.4142";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1327277085.453";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1327277649]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Questioning your assumptions</title>
		<link>http://rits.pl/2012/01/23/questioning-your-assumptions/</link>
		<pubDate>Mon, 23 Jan 2012 00:04:36 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[1. Lets play TDD (AKA rethink some patterns)

Some of you are probably already aware that I follow James Shore <a title="James Shore Lets play TDD series" href="http://jamesshore.com/Blog/Lets-Play/" target="_blank">Let's play TDD</a> series. After <a title="James Shore - Lets play TDD ep 159" href="http://jamesshore.com/Blog/Lets-Play/Episode-159.html" target="_blank">last episode</a> I started to think about  usual design and 'The Best Practices" that I use everyday at work. Why? Because if you're going to follow his videos from the beginning, you are going to see my comments every now and again, where I'm bitching about his design.

I especially didn't like his dollar class (value object used across whole application for calculations and rendering), up to the point that I've decided to branch his repository (everything is hosted on github), and <em>fix it</em>. Trigger for that was making Dollar class responsible for rendering itself onto swing components.

So after picking up a recording tool, setting project to work in Intellij and changing layout to more familiar, maven structure, I started to refactor. It took me 3 or 4 attempts to discover that James design had <em>truth</em> in it. I still did not like it, felt wrong (still does), and was totally different from all I was used to, but that was the first time that I thought about shutting up and just letting him do his job. On a first occasion I asked him to add persistence to his application, and watched how he solves that problem.

In last episode James started to struggle with what I waited for: how to be consistent with his current design, don't clutter VO with too many methods and don't expose internals of Dollar class at the same time. He ended the episode with question to us, watchers, on how we would approach this problem. I still think that moving parsing string out of VO to external factory class would be a good idea. There we could add two way conversion from Dollars to some universal format, most likely to String (as we want to write the value to text files and to text fields). Later, if needed, we could add formatting object to e.g. display negative values in different form.

But that's not what going to happen. I've seen in comments idea that he should persist only user inputs. After reading that I felt cheated, and that James is going to do something wrong, again. But after second thought I had to agree that it is a good option in this case, and fits well with how the rest of the application is designed. It's even extensible, in boundaries described by James in first episodes. So although I feel bit cheated, about James slipping from what I've assumed to be a corner, in the end I feel like a winner. I may observe that different approach, and I still may disagree with it and search for shortcomings of the solution. And finally, the biggest win for me: I started to rethink all the patterns that I'm using in a day to day work.

Thanks for that Mister Shore (and to the all commentators as well).

2. My quest for knowledge

As you probably know I've moved couple months ago to UK to work in ProQuest. If you haven't heard about it, then please check out my <a title="What I’m doing in UK" href="http://mgruca.wordpress.com/2011/11/20/what-im-doing-in-uk/" target="_blank">previous post</a>.

While coming here I promised myself that I'll shut up and will try to listen more, especially that there are many, much more experienced people around. It's not easy as I disagree with many thins but I try to first see the bigger picture and ask why some things are done this way. Often it makes sens ;)

I should mention that any big change I let through peer review process. Thanks to feedback from other developers with much more experience in this code (and with programming at all), I'm able to observe how other people approach my problem and what they think about my ideas.

Working in PQ gave me a lot already. Enough to make this post go through long corporate approval if I would try to describe it, so I'll just skip to next point ;)

3. Open source and Pair programming

Following on mentioned experiences, recently I wanted to join some open source project. Warsaw JUG had a great timing on that, as Michał Margiel proposed to <a title="WJUG - confitura software" href="http://groups.google.com/group/warszawa-jug/browse_thread/thread/785f3175ab3c7da6" target="_blank">create software</a> (link in Polish) for one of Polish conferences, <a title="Confitura conference" href="http://confitura.pl/" target="_blank">Confitura</a> (again, Polish link).

Sadly it took some time before he responded to volunteers and I already agreed to do Pair Programming with a good friend of mine, with hope that he'll be able to use that in his master thesis. So every Tuesday and Thursday we are obliged to show up and write some stuff. As a motivation tool, we agreed to pay small fees to wikimedia foundation or one of animal shelters, if we won't show up. But as it figures, they are unnecessary as we've been doing more informal/unscheduled sessions than the planned one :)

What I've learned from that?

My friend is coding a small financial application, that he's preparing for our other friend. He want to do it as fast as possible so he often cuts corners, IMO, in a bad way. However those session reminded me that sometimes simplest approach works well, and it is possible that it will be developed faster (initially), and actually may work better than well crafted solution.

Despite breaking many <em>sacred</em> rules (like encapsulation, using wishful file parsing, etc) what he created works. What's worse (for my ego) it works better than things that I proposed after first glance at code that was already there (e.g. parsing input files by regexp instead of relying on magic numbers).

Task done by application is fairly simple, parse input files, do some calculations and write the output of calculations into spreadsheet. Bread and butter of almost any application that we write, right? It's a standard application, with small exception tat it  won't grow when is done.

And who am I to tell if that solution is worse then mine. They both works, and as there is no need for maintenance my approach is just over-engineered. I just feel like an idiot sitting in ivory tower, shouting why we should do this or that,  when in fact those things won't ever be a problem. Same as with James Shore application. They both picked the right hammer for the job.

Don't get me wrong, I'm not going to advise you to start using public fields, violate DRY, single responsibility, or other basic rules. Those recent experience, helps me to take another step back and take a look on applications that I wrote/designed from bit other perspective.

In both cases (Lets play and PP coding) they are not over-thinking the solution. Features and solutions on how to implement are being introduced Just in Time.That is something I need to try out, although I don't know how yet. When I'm writing code it's like moving small parts, one at a time, from big drawing board inside my head, and placing them in the IDE. Breaking that will be hard, but I'll try at least once! :)

All of us want to change  something in our application. That's natural, we are constantly learning. If you don't see way of improving your older code, then most probably your doing something wrong. When coding on daily basis in same environment with same people, it's easy to start improving our very specific style. But there are many people who want to and actually share their knowledge. Go out and check out, maybe someone will inspire you in very same way as James Shore inspired me to skip finishing drafts of other posts and write this one.

In 2012 I hope to change my style. I don't know how. In 2011 I was playing with different techniques, this year I want to learn at least one new language starting with coffescript/node.js (yes, js is a new language for me. Other than making things appear and disappear I don't do much with it ;)). I look forward to that and hope that it will affect my style at least a bit.

I also set myself resolution to write more often, so I hope that at least those 2 I can keep :) Till next time]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2012-01-23 02:04:36</wp:post_date>
		<wp:post_date_gmt>2012-01-23 00:04:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>questioning-your-assumptions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="learning"><![CDATA[learning]]></category>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15995486";s:7:"blog_id";s:8:"16307690";s:9:"mod_stamp";s:19:"2012-01-23 00:04:36";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1327277082]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1327277077]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344237425";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835808165]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Bob Allen]]></wp:comment_author>
			<wp:comment_author_email>bob.allen@Leandog.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>166.147.98.56</wp:comment_author_IP>
			<wp:comment_date>2012-01-23 10:05:22</wp:comment_date>
			<wp:comment_date_gmt>2012-01-23 08:05:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How? CodeRetreat! Pairing with strangers and pain: both are instructive any maybe even the same.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327309549.8861";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327305922.2781";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1327309549]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383586]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michalgruca@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>195.22.151.242</wp:comment_author_IP>
			<wp:comment_date>2012-01-23 11:19:51</wp:comment_date>
			<wp:comment_date_gmt>2012-01-23 09:19:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Bob,
after I get back to Gdansk, I'm willing to organize code retreat and Hackergarten. Both are, in my opinion, great occasion to learn from other devs. 
Very often there is some user group near place where you live. Join it, it's free. Other then meetings and presentation, you will be aware about workshops/conferences that happens near by.

Conferences are the next great place to exchange ideas. After/between/instead of scheduled session just chat with people. 

Join some open source project. If you are using some at work then you got a good candidate. That's something I wanted to do last year, but I ended up just exploring Tapestry and Gradle code base. This year I hope I will have more time and courage :)

In all of those places you can meet people with which you can pp. Friend that I mentioned stays in Poland, so it's impossible to PP at one machine, still we manage with simple tools.

Last thing, bit cheating but still may help. Do katas. Pick some popular one (like tic tac toe) and do it couple times in different way. You often may find other people solutions (github, blog posts, etc) Compare what you've done with them.
Or in the end just do what I did with James code. Try to work on first project found in github. Check design and think why they where so stupid to do it.
James code helped a lot with dozens of test, explaining his decision so it was easy.

Cheers,
Michal]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>53</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1327310391]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327310391.8963";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383586]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383587]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>TJUG reaktywacja</title>
		<link>http://rits.pl/2012/02/05/tjug-reaktywacja/</link>
		<pubDate>Sun, 05 Feb 2012 18:53:36 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[Disclaimer as this post is strictly related to Tricity Java User Group, and is relevant only to Polish readers, hence it will be in Polish :) Although I'm not giving up on blogging in English, yet ;)

Ostatnimi czasy na <a title="trójmiejski JUG " href="http://groups.google.com/group/jug-trojmiasto" target="_blank">liście trójmiejskiego JUGa</a> pojawiła się informacja o reaktywacji! :) Na całe szczęście.

Jeśli jesteś developerem z trójmiasta, niekoniecznie związanym z samą Javą, interesuje Cię dalszy rozwój, chcesz się czymś podzielić bądź posłuchać o przygodach innych to odezwij się, to nic nie kosztuje a sporo możesz zyskać.

Dla mnie idea JUGa jest wspaniała. Dzięki nim miałem okazję poznać ludzi i usłyszeć o technologiach, które normalnie były by poza kręgiem moich zainteresowań. Teraz zawsze projektując coś, mogę pomyśleć o dodatkowych technikach/technologiach i przypomnieć sobie kogo mogę poprosić o pomoc.

JUG to również świetne miejsce do prowadzenia dyskusji. Po każdej prezentacji (a niejednokrotnie w trakcie), zaczyna się panel. Tematy najróżniejsze, od technik programistycznych po różnice pomiędzy technologiami.

Podsumowując: jeśli
<ul>
	<li>Wytwarzanie oprogramowania to Twoja pasja (niekoniecznie w Javie)</li>
	<li>Pochodzisz z trójmiasta, bądź okolic (niektórzy JUGowicze dojeżdżali nawet z Elbląga).</li>
	<li>Chcesz spotkać innych pasjonatów</li>
	<li>Interesują Cię nowe trendy / technologie wytwarzania softu</li>
</ul>
to zapraszamy. Może po jakimś czasie się ośmielisz i będziesz chciał opowiedzieć o tym co robisz? Super przeżycie, super doświadczenie.

A i zaproście znajomych. Dajcie znać w swojej firmie. Ma być nas wielu. Chcemy szerzyć wiedzę o technologii i krzewić dobre praktyki. Im nas więcej tym owocniejsze spotkania.

Ps jak wrócę to kombinuję nad darmowymi warsztatami / eventami a'la code retreat, które pewnie dało by się zorganizować w ramach JUGa. Za trochę swojego wolnego czasu możesz się przy okazji dużo nauczyć, może to być więc powód by dołączyć do grupy.

Link do grupy: <a href="http://groups.google.com/group/jug-trojmiasto" target="_blank">http://groups.google.com/group/jug-trojmiasto</a> Warto też sprawdzać http://it.wtrojmiescie.org/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2012-02-05 19:53:36</wp:post_date>
		<wp:post_date_gmt>2012-02-05 18:53:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tjug-reaktywacja</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jug"><![CDATA[jug]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[news]]></category>
		<category domain="category" nicename="polish"><![CDATA[Polish]]></category>
		<category domain="post_tag" nicename="tricity"><![CDATA[tricity]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1328468551]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15995486";s:7:"blog_id";s:8:"16307690";s:9:"mod_stamp";s:19:"2012-02-05 19:02:29";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1328468557]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344219039";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835107182]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek Kaczanowski]]></wp:comment_author>
			<wp:comment_author_email>tkaczano@poczta.onet.pl</wp:comment_author_email>
			<wp:comment_author_url>http://kaczanowscy.pl/tomek/</wp:comment_author_url>
			<wp:comment_author_IP>91.150.223.86</wp:comment_author_IP>
			<wp:comment_date>2012-02-06 21:52:56</wp:comment_date>
			<wp:comment_date_gmt>2012-02-06 20:52:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Powodzenia! Na spotkania się raczej nie wybiorę (z Krakowa to jednak kawał drogi), ale zawsze miło słyszeć że coraz więcej się w naszym Javowym światku dzieje. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328561576.3385";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1328562376]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328562376.3278";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383591]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>33degree day1</title>
		<link>http://rits.pl/2012/05/22/33degree-day1/</link>
		<pubDate>Tue, 22 May 2012 22:46:21 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=327</guid>
		<description></description>
		<content:encoded><![CDATA[It took me a while to write down those relations, but right after conference I was coming back to Poland and that meant packing and other boring stuff, then climate change and small cold, catching on old projects and ... ok, I was just lazy :)

Let's start from the very beginning. Like last year I've arrived two days earlier. One of side reasons why 33degree &gt; any other conference is that it takes place in Kraków. You attend to great conference and got whole weekend in one of  most beautiful Polish cities. Also same like last year, Grzegorz thought even about booking nice weather for the weekend, it was warm and sunny for whole time :D Thanks for that! ;)

<strong>Session 1:</strong>

On Monday (day 1) weather was more friendly for attendees. First talk was by <a title="Rafii Krikorian twitter profile" href="http://twitter.com/#!/raffi">Raffi Krikorian</a> from Twitter. He told us about migrating  Twitter from Rails towards JVM (read Scala). What I really liked is that he presented a lot of impressive numbers about Twitter. I've listened up to a moment when he showed the code. That was just too early in the morning for it and I was still before my first coffee.

My takeaway from that talk is that rails are production ready and can support very large site. If you grow as large as Twitter did, then you can afford to migrate to some other platform. Or to ease future migration you can start working on JRuby from day 1 ;)

I went for a coffee and while passing by, O'Reilly stand just sucked me in with 40% discount. I did as I always do when I see books: I've checked them all: touched, sniffed, took a peek inside everyone of them, to do what any reasonable and well educated man would do, a week before moving back from foreign country and while trying to reduce his baggage size: I bought one. Maybe it will learn me how to think and learn pragmatically.

After that I had enough of time to I stop by Luxsoft stand. Well it was quite obvious choice as else <a title="33degree Luxsoft album" href="https://plus.google.com/photos/109881160058685562700/albums/5721878200921929809">their ninjas</a> would just tear me into pieces! For tad of my time (and filling a short form) I was rewarded with a <a title="33degree, Monia in ninja T-shirt" href="https://picasaweb.google.com/106923391016827188571/33degree#5727647260337013266">ninja t-shirt</a> :) But had to evacuate right after that as they asked me to solve a problem (I still was before that first coffee. And what the hell!  Me and thinking!? Maybe that book gave them a wrong idea?)

<strong>Session 2:</strong>

By the time that I've dealt with first coffee and said <em>hi</em> to many familiar faces it was time for second session, by <a title="Ken Sipe twitter profile" href="http://twitter.com/#!/kensipe">Ken Sipe.</a> It was about complexity and how we, developers, tend to mix up two ideas: complexity and complicated. We also like to make simple things more complex than it's needed. Hard not to agree. Session was nice and it kick started my brain better than the coffee.

<strong>Session 3:</strong>

Next session was by <a title="Venkat Subramaniam profile on Twitter" href="http://twitter.com/#!/venkat_s">Venkat Subramaniam</a>. His talks are always fun to watch, and this time it was no different. Thanks to it I could relax before git workshop. Venkat showed <em>5 whys</em> technique and explained where it come from. The talk had anything that is needed to pump up any g33k. There was Dilbert, rockets and horse butts. Awesome!!!

Thing to remember: "Hand out with smart people" (probably he should say -&gt; go to 2013.33degree.org ;))

<strong>Session 4:</strong>

Lunch was great, as usual on 33degree. Kudos to Grzegorz for making sure that there will be real food. And after lunch it was time for git workshop with <a title="Matthew McCullough twitter profile" href="http://twitter.com/#!/search/matthewmccull">Matthew McCullough</a>, the only reason why  I brought laptop with me to Poland. Session was fun, I always enjoy Matthew talks. I never seen him unprepared. He knows the subject and his presentation perfectly. Whats more he has no problem with answering questions. Seriously, if you want to see well prepared presenter go to any of his talks (or Neal Ford, who is also always well prepared speaker).

As I knew and worked with git before, the session was more of a chance, to structure my  knowledge better  and get some tips from expert. It was good decision, although I would like to see Kotlin live. Well, maybe next year :)

And that's how the day went by. Well almost, there still was beer party from JRebel guys and integration with people, which is the best part of any conference :) Discussion about differences between living in USA, Australia and Europe :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>327</wp:post_id>
		<wp:post_date>2012-05-22 23:46:21</wp:post_date>
		<wp:post_date_gmt>2012-05-22 22:46:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33degree-day1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="33degree"><![CDATA[33degree]]></category>
		<category domain="post_tag" nicename="conference"><![CDATA[conference]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1337726787]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1337726788]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344282911";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1032672756]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>33degree day2</title>
		<link>http://rits.pl/2012/05/22/33degree-day2/</link>
		<pubDate>Tue, 22 May 2012 22:47:30 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=341</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Session 1:</strong>

I started day 2 with some good <del>old</del> new desktop Java. <a title="Michael Heinrichs twitter account" href="http://twitter.com/#!/net0pyr">Michael Heinrichs</a> has been talking about Java FX usage in business. Topic reflected the presentation with small misstatement about business. It was very technical talk and for me it was bit boring (maybe because it was first talk of the day). I regret in the end that I haven't picked up one of other two talks that I wanted to attend. But at least I got some takeaways from it.

As unofficial information Michael mentioned something about JavaFX applications working natively on iOS and Android. I don't know how that's possible, but it would be great :) Second thing is that I've learned that I don't want to go back to Swing ever again. JavaFX does not have the same threading issues as Swing.

<strong>Session 2:</strong>

After not so good start, it was time for Matthew McCullough brand new talk titled "Economic games in software projects".  He talked about various topics: from investing money into tools that we need in everyday work to showing simple tricks that make our products more attractive for our clients. Great talk, attend if possible.

I graduated on University with specialization with economy and econometrics, so I often calculate cost bit different than most of my friends, as most people  doesn't count alternative cost. I do, and I'm glad that I'm not the only one in this industry ;)

And again I've missed one interesting talk. But it was worth it :)

<strong>Session 3:</strong>

From all talks during this session, most interesting seemed to be Venkat with talk about concurrency in pure Java. I don't remember when I was solving threading issues for last time, however I remember that painful experience ;)

Venkat showed us first different approaches to concurrency using alternative JVM languages, and followed that with traditional Java (using synchronization and locks). Then he presented a <em>new</em> way, using Clojure libraries. It looked dead simple and it's a useful  to know  about such tool. If needed then check Clojure ref and locks.

And yet again I've missed two talks. But luckily this time it were Polish speakers and I hope that there will be occasion to catch up on theirs ideas (in fact Sławek Sobótka will be in Gdańsk this week :))

<strong>Session 4:</strong>

Time for some Spocking action with <a title="Luke Daley Twitter" href="http://twitter.com/#!/ldaley">Luke Daley</a>. I heard about Spock couple of times, and checked some examples, but I've never gave it a try. It  was a good overview of interesting tool and well invested time. What can I say more, just google for Spock and give it a go.

<strong>Session 5:</strong>

After 3 good sessions and not so bad day I went to <a title="Anton Arhipov Twitter" href="http://twitter.com/#!/antonarhipov">Anton Arhipov</a> talk about "Mastering Java bytecode with ASM". What I've learned is that there are better things to waste life than working with ASM :E As for talk itself, it had one very serious problem: it was too technical and focused on low level details.

Do I really had to learn about all the code numbers and flags used by Java? It would be better, IMHO, if Anton abstracted more and talked bit more about other tools that use ASM. That talk is probably great for experts, but the rest of us was zombiefied in the end, so there were no questions and it was probably shortest talk of them all (as it went for about 30 minutes)

<strong>Session 6:</strong>

was a hard nut to crack. I really wanted to see <a title="Nathanuek Schutta Twitter" href="http://twitter.com/#!/ntschutta">Nathaniel Schutta</a> but as Scala is a cool kid (and I had pleasure to attend to Łukasz Kuczera talks about it), I decided to check out language again (and from point of view of different speaker). That how I end up, on Venkat talk about Scala. As this post is getting long and I want to sum up this talk with another from Venkat, please check Day 3 for my thoughts on Scala.

<strong>Session 7 (BOF session):</strong>

That one was easy -&gt; I knew that I want to hear about what went wrong in Touk and what they learned from it.

They described couple of situations, how they approached the problem, what went wrong (in their opinion), and what is the proper solution (again: in their opinion).
What was most interesting for me is how differently we've looked on the same problem, it's source and way to solve it. I won't give detailed description, as I don't remember examples good enough, but that reminded me, that I too often forget about such simple fact that people see different problems and have other ways of solving them.

Day end up in discussions and socializing :)

I also met Guys from JRebel and got one of <a title="JRebel sticker" href="http://yfrog.com/kikz5unej">their stickers</a>. It went with me to UK, and through 3-4 major Polish cities + countless small ones. Should I invoice them for promoting JRebel? ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2012-05-22 23:47:30</wp:post_date>
		<wp:post_date_gmt>2012-05-22 22:47:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33degree-day2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="33degree"><![CDATA[33degree]]></category>
		<category domain="post_tag" nicename="conference"><![CDATA[conference]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1337726854]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1337726856]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344233499";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835105712]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>33degree day3</title>
		<link>http://rits.pl/2012/05/22/33degree-day3/</link>
		<pubDate>Tue, 22 May 2012 22:48:14 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://mgruca.wordpress.com/?p=347</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Session 1:</strong>

Day 3 began with the same problem that I had during last talk on previous day. Venkat vs Nathaniel. I picked Venkat, as I expected that JVM languages integrate without any effort from developer, and abstract of his talk suggested something different.

Venkat showed some edge cases when something may go wrong. And after all I'd do better if I went to Nat talk. However now I'm certain that I don't want to use in production any of the alternative JVM languages. Ok, maybe groovy for testing and tooling support.  But as the problems that I solve, are not complicated enough to raise  complexity bar of a project significantly, I choose to stay in pure Java world.

I know, I wouldn't have to write semicolons or brackets anymore, but is it really worth it?

Also we are currently <a title="rekrutacja w DC" href="http://www.dc.com.pl/kariera-w-dc/">recruting Java devs</a>, and it gives us enough of problems to find them, so I don't even want to imagine how hard it could be to get experienced Scala devs.

There are tools that allow for some <em>coolness</em> level. And as for ceremony in Java -&gt; we got Intellij, and it solves a lot of problems related to that :) Also I like my brackets! Hands off of them. For some they raise readability.

On the same page I feel that the time when Scala / Groovy / clojure or Kotlin (?) will be a must have skill, is near, so I have to reserve some time for learning them, soon.

<strong> Session 2:</strong>

Second talk for me, was by Ken Sipe. Pre that talk I didn't know much about noSQL DBs. I did some spiking, but I never even benchmarked it.

Luckily, Ken thought about noobs like me, and started with high overview what noSQL is.Then he showed up project where he used MongoDB and some cases which gave his team a problem during implementation.

As I don't know much about Mongo, I hope that this talk has been recorded and I'll be able to see it again later, when I'll learn more in the topic.

<strong>Session 3:</strong>

That was probably the hardest of choices. I had to choose from 3 great speakers and 3 different areas of my interest. To make it simple: I knew that I don't want to go about JAva 7 cloud talk, and Uncle Bob preaching about TDD. What I did not know, was do I want to learn more about Lucene, HTML 5 or Gradle.

I picked Gradle.

<a title="Szczepan Faber Twitter" href="http://twitter.com/#!/szczepiq">Szczepan</a> had really hard time to decide whether he wants to show the basics (as most of the people never seen gradle before) or to go with the topic from title: building plugins in gradle. He tried two do both, and failed in my opinion.

He'd do better by abandoning the plugin part and just doing introduction into the build system. More people would benefit and those of us that know that tool already maybe would see something new. Even if not, I guess that we would understood.

As for me the most important part was after the talk itself as I had occasion to eat lunch with GradleWare team and ask couple of questions and make some requests regarding Intellij integration :)

By the way. In June there will be my talk on Tricity JUG about Gradle.

<strong>Ending Keynotes:</strong>

After lunch there were 3 good talks. First one was by Nathaniel about Craft. As I heard it many o times by different speakers I skipped most part of it.
Second one was by Jurgen Appelo, and I've also skipped it, but only because I've heard it recently as it's available on <a href="http://www.infoq.com/">InfoQ</a>. If you haven't seen it, go and <a title="Jurgen Appelo - How to change the world" href="http://www.infoq.com/presentations/How-to-Change-the-World">watch it</a> now! And I didn't skip it entirely, what you could see on my twitter stream.

Last keynote was by Uncle Bob. One problem that I had with it was that it was a compilation of his other talks, and as I seen most (all?) of them, it was quite boring to hear all the punch lines again. Although it was good to see him live :)

<strong>Some thoughts on conference itself:</strong>
<ul>
	<li>It was great, like last year. I'll be there next year also :)</li>
	<li>Number of must see talks  was too high. It was giving me headaches to pick where I want to be. Next year please invite some rubbish speakers ;) (e.g. me :&gt;)</li>
	<li>It was bit overcrowded (as many people noticed)</li>
	<li>Grzegorz applied learning and fixed all the issues that I remember from last year.</li>
</ul>
CU next year :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date>2012-05-22 23:48:14</wp:post_date>
		<wp:post_date_gmt>2012-05-22 22:48:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>33degree-day3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="33degree"><![CDATA[33degree]]></category>
		<category domain="post_tag" nicename="conference"><![CDATA[conference]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1337726897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1344251644";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>email_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1337726899]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[835105563]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Grzegorz]]></wp:comment_author>
			<wp:comment_author_email>grzegorz.duda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://33degree.org</wp:comment_author_url>
			<wp:comment_author_IP>89.174.214.74</wp:comment_author_IP>
			<wp:comment_date>2012-05-23 08:09:05</wp:comment_date>
			<wp:comment_date_gmt>2012-05-23 07:09:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for extended view on 33rd Degree talk by talk. It is one of the key feedback I can get and implement next year.
What I have already implemented from your list of final thoughts:
- 33rd Degree 2013 will have muuuuch more space than we had ion 2012. In 2012 there was simply no better place in Krakow to organize such a big conference. 
- Unfortunately, next year you will get bigger headache as number of concurrent talks will probably raise as I expect even more people willing to come (especially after such a great reviews) - we had to close 2012 registration a month in advance with 700 attendees.
- Looking at my "Speakers to invite" list, it looks like magic 1000+ participants should be easily crossed. And I can assure you it will not be overcrowded ;)
CU next year :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1337756946.042";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1337758585]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337758586.0344";s:7:"message";s:45:"mgruca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"mgruca";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[644383590]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Blog resurrection </title>
		<link>http://rits.pl/2012/12/23/blog-resurrection/</link>
		<pubDate>Sun, 23 Dec 2012 16:12:36 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=390</guid>
		<description></description>
		<content:encoded><![CDATA[Ok, so the world did not end. Everyone gets another chance to start a new, better, life. That deep spiritual experience has changed me, and showed me new path. So here we are, on my own, new site.
I've done my part in the kitchen for Christmas Eve, and head to PC to clean up this place a bit.

You can find now only two categories, all other meta informations will be in Tags. I'll also will try (again ;)) to try more frequently.
Second change is that I'll be trying to write only in English here. Polish category is for older posts + I'll be linking to DC blog, were I intend to start blogging also.

So let's see how it goes. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2012-12-23 18:12:36</wp:post_date>
		<wp:post_date_gmt>2012-12-23 16:12:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog-resurrection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[news]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[989010086]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[blog-ressurection]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>End of the world post mortem</title>
		<link>http://rits.pl/2012/12/28/end-of-the-world-post-mortem/</link>
		<pubDate>Fri, 28 Dec 2012 10:36:27 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[As we all know, on last Friday world was supposed to end.
<div>

Luckily your friendly neighbor Java programmer found in the internet a piece of code responsible for running that, left by Evil Mayans, which looked like this:
<div></div>
<div>
<pre class="brush: java; gutter: true; first-line: 1">public class World {

	private WorldDestroyer worldDestroyer;

	public void end(){
		Date endOfTheWorldDate = worldDestroyer.getApocalypseDate();
		if(endOfTheWorldDate.equals(new Date())){
			worldDestroyer.run();
		}//no need for ending bracket as the world ends :D But Java compiler does not know that :( Feathered Snake damn you holy Sun!
	}
}</pre>
</div>
</div>
<div></div>
So what our hero could do?

First of all he could delete the <em>if</em> check or even remove whole World class, however that would most likely fail some tests and would result in alarm raised by Evil Mayan CI server. They would know that something is wrong,  fix the code, hence the world would end!

So he had to be smarter. Our hero sat and thought for some time, but not for so long, remember The End Of The World is coming! Using all his Java knowledge and team work experience he did the change!
<div>
<pre class="brush: java; gutter: true; first-line: 1; highlight: [3]">public void end(){
		Date endOfTheWorldDate = worldDestroyer.getApocalypseDate();
		endOfTheWorldDate.setYear(20);
		if(endOfTheWorldDate.equals(new Date())){
			worldDestroyer.run();
		}
	}</pre>
</div>
<div></div>
So what he did? He used one of biggest flaws of <em>java.util.Date </em><strong>Mutability</strong><em>. </em>Yes, you may change internal state of Date using one of it's method. No need for some sophisticated techniques.

I'm doing all of Java interviews in <a title="dc homepage" href="http://dc.com.pl">DC</a>, and it astonishes me how many people don't know that this class is <strong>Mutable</strong>. Yes, after instantiating it, you may change it internal value freely, which may lead to a lot of problems.
<div></div>
It surprises me how many people does not know about it. During last interview, right before Christmas, Senior Java Dev (with &gt;5yrs of experience) tried to convince me that the class is immutable and that may be one of it flaws.

And what's the big deal?

<strong>You should never trust in Date object, you've shared or received from external World </strong>(in OO terms -&gt; outside your class).

It is possible to build anything on top of java.util.Date. In most cases, no one will try to harm you, but I would not build large application / framework on top of that assumption. So while working with Date, you're going to learn everything about defense programming. Quick enough you'll understand that it's not enough to just copy input parameters, but you also have to return defense copies while returning values.

But okay, let's stop bashing Date class for a moment. If you want to learn more about techniques that may be useful to work with it, please check the book that <strong>EVERY</strong> Java programmer should read:<a title="Amazon link to Effective Java" href="http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683"> Effective Java</a> by Joshua Bloch. It may not have anything about Date class, but it for sure shows how to achieve immutability and how to work with mutable code.

Other good solution is to use 3rd party library, like e.g. <a title="Joda Time home page" href="http://joda-time.sourceforge.net/">JodaTime</a> It will solve a lot of your problems. It's also quite popular, so most of the frameworks will provide support for it's classes.

Ok, let's investigate second flaw of this code. <strong>It's not testable</strong>.

You just can't test code that is dependent on time. It has to fail from time to time, raising false alarm. If you assert based on year, it may fail at midnight every 5-8 years. If you assert on month, it may fail before payday, etc. But don't worry, the battle is not lost yet. The solution is trivial: create an external class called <em>Clock / TimeService / TimeManager / DateFactory </em>or something along the line, consistent with you'r project naming convention, and just move instantiation of Date there. What we achieve this way? You can switch implementation of that class for test purpose and you won't get broken CI builds from time to time :)

So how it should look like in the end? (at least this variant of code)
<div></div>
<div>
<pre class="brush: java; gutter: true; first-line: 1">public class World {

	private WorldDestroyer worldDestroyer;
	private Clock clock;

	public void end(){
		Date endOfTheWorldDate = worldDestroyer.getApocalypseDate();
		if(endOfTheWorldDate.equals(clock.now())){
			worldDestroyer.run();
		}
	}
}</pre>
</div>
<div></div>
<div>Now much better. Good that evil Mayans did not know about it :)</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2012-12-28 12:36:27</wp:post_date>
		<wp:post_date_gmt>2012-12-28 10:36:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>end-of-the-world-post-mortem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="date"><![CDATA[Date]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="mutability"><![CDATA[Mutability]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Defending against java Date mutability]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Short post about one of biggest flaws of java.util.Date -> mutability, and simple way of defending against it.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[data,java,testing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[996561964]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[Cwiat]]></wp:comment_author>
			<wp:comment_author_email>mkwiatek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.124.168.93</wp:comment_author_IP>
			<wp:comment_date>2013-08-14 06:59:00</wp:comment_date>
			<wp:comment_date_gmt>2013-08-14 04:59:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Someone have already planned endOfTheWorld by inventing JAVA.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1000219355]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[prad]]></wp:comment_author>
			<wp:comment_author_email>pradzins@gazeta.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>77.222.232.60</wp:comment_author_IP>
			<wp:comment_date>2012-12-28 22:37:00</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 20:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If I really wanted to destroy the world and, at the same time, to use java.util.Date, I'd use after() method to be really, really sure to succeed ;-) The equals() method does not give the 100% of "positive" (depending on point of view...) result here.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[749863604]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[Adam]]></wp:comment_author>
			<wp:comment_author_email>adambro@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.70.117.56</wp:comment_author_IP>
			<wp:comment_date>2012-12-28 23:18:00</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 21:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Object can me mutable or immutable, not class.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[749896937]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michal.gruca+wp@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.71.174.191</wp:comment_author_IP>
			<wp:comment_date>2012-12-29 01:35:35</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 23:35:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[True enough, but it's more of wording issue. I refer to all instances of course. 
I also ignore reflection and other tricks that could change the state of the object :)

But thanks for pointing that out]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>59</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Gruca]]></wp:comment_author>
			<wp:comment_author_email>michal.gruca+wp@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rits.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.71.174.191</wp:comment_author_IP>
			<wp:comment_date>2012-12-29 01:37:43</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 23:37:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good that those vile people did not hire skilled devs or else we all would be done ;)
As for Date itself there are other issues, like Timezones and such, but working with Date could be a nice chapter in a fat book about Java :)

Regards,
M.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>58</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>A busy week for developers in Tricity</title>
		<link>http://rits.pl/2013/12/11/a-busy-week-for-developers-in-tricity/</link>
		<pubDate>Wed, 11 Dec 2013 21:14:14 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=444</guid>
		<description></description>
		<content:encoded><![CDATA[Hi all,

long time no see. I'm still struggling what I want to blog about, as this year changed a lot. Most likely I'll start from those changes, but I need some time for that :E As for now, let me run a short update about what's happening in Tricity.

First of all, tomorrow we've got 50th TricityJUG meeting :D Hell yeah! So if you want to learn something about GWT from someone who worked with it for about 2 years, then you should definitely be on the meeting tomorrow! Check out news on <a title="Tricity JUG meeting GWT" href="http://trojmiasto.jug.pl/2013/12/04/50th-meeting-rafal-rybacki/">JUG site</a>.

Second thing you should look forward to is a <a title="Global day of code retreat hosted by TJUG" href="http://trojmiasto.jug.pl/2013/12/08/global-day-of-code-retreat-14-12-2013/">Global Day of Code Retreat in Tricity</a>. This year finally we'll host it in Gdańsk :D I was waiting for that for years, and it finally happens ! I'm super excited about it. I'll miss the chance to pair up with people, as I'm on organizing side. Still I'm super fired that TJUG is going to enable a big group of devs an opportunity to take a part in that event :) More good news: we still got <a href="http://www.eventbrite.com/e/global-day-of-coderetreat-gdansk-tickets-9500988713">some tickets left</a>. Event is free. Food, passionate geeks and code deletion are taken for granted. If you're in Tricity this Saturday then join us now.

Finally last, but not least. This Saturday there is career expo: <a title="career expo tricity" href="http://careercon.pl/">careercon.pl</a> If you're a software professional looking for job opportunities then you should check it out. It's a great chance to catch up with what's happening in Tricity. Also there will be 2 conference tracks full of tech stuff, including my talk about what's new in JDK 8. As time slots are rather short, you can treat that as a prelude to what will  be happening on TJUG starting from Feb till end of the year ;)

And yeah, to give that talk, I'll have to skip on Code Retreat lunch, which is provided by the <a href="http://www.restauracjaset.pl/">Set Restaurant</a> :(

&nbsp;

Finger crossed for the blog. If all goes well, then this time I'm bringing it up for good (a.k.a. I won't be so lazy this time)

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2013-12-11 23:14:14</wp:post_date>
		<wp:post_date_gmt>2013-12-11 21:14:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-busy-week-for-developers-in-tricity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Embedded Mongo and Windows Firewall alerts</title>
		<link>http://rits.pl/2014/01/29/embedded-mongo-and-windows-firewall-alerts/</link>
		<pubDate>Tue, 28 Jan 2014 22:28:29 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=448</guid>
		<description></description>
		<content:encoded><![CDATA[Long time no see :) I'll start slowly, so that the pace of writing helps me get back to writing.

Finally I had some time to work on code in the project, and found out most annoying thing ever. We're using MongoDB in production so for couple of integration tests we use <a href="https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo">embedded Mongo</a>. It's a simple tool that we are using the same way as HSQL or H2 DB. DB instance is created by tests that need it and after they are done DB is cleaned up automatically. During that short period when instance is available it may be accessed same way as any <em>normal</em> Mongo instance. We have few tests using it, just to prove that our DB layer is working as expected.  The annoyance I've mentioned in the beginning, comes when somebody miss-configure it and try to use under Windows with Firewall turned on. Below example of how to start it <strong>without mentioned issue.</strong>
<pre class="brush: java; gutter: true; first-line: 1; highlight: [3]">CustomMongoDBProperties dbConfig = new CustomMongoDBProperties();         
MongodStarter runtime = MongodStarter.getDefaultInstance();
Net netSettings = new Net("127.0.0.1", Network.getFreeServerPort(), Network.localhostIsIPv6());
_mongodExe = runtime.prepare(
	new MongodConfigBuilder().version(Version.Main.PRODUCTION).net(netSettings).build());
_mongod = _mongodExe.start();</pre>
Looks simple? And it is, however if you're going to remove ip address, being first parameter of <em>net</em> constructor <em>"127.0.0.1"</em>, Windows Firewall will raise alarm every time you run those damned tests. Code compiles, tests are green, just FW pops up a lot!

I hope that it will help you to save some nerves. Of course the proper fix is to install Linux, however this one is good enough workaround for me ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>448</wp:post_id>
		<wp:post_date>2014-01-29 00:28:29</wp:post_date>
		<wp:post_date_gmt>2014-01-28 22:28:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>embedded-mongo-and-windows-firewall-alerts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[MongoDB]]></category>
		<category domain="post_tag" nicename="unit-tests"><![CDATA[unit tests]]></category>
		<category domain="post_tag" nicename="windows-firewall"><![CDATA[Windows firewall]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[MongoDB, Java, Unit tests, Windows Firewall]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Self note that may help others avoid issues while working with embedded Mongo in unit tests and struggling with Windows Firewall raising alerts]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Fixing issues with embedded MongoDB and Windows firewall]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Geb goodness</title>
		<link>http://rits.pl/2014/02/09/geb-goodness/</link>
		<pubDate>Sun, 09 Feb 2014 16:20:52 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=461</guid>
		<description></description>
		<content:encoded><![CDATA[Recently I've been playing around with Spock and a bit with Geb. I'm under big impression so today let's check out what <a title="Geb project home page" href="http://www.gebish.org/">Geb</a> is.

Version for managers -&gt; It's a technology that will make your developers test and allow you to cut costs. Now go send email to dev team that they should check it out, shoo.

Version for devs -&gt; It's a sexy framework with <strong>jQuery</strong> like DSL over <strong>Webdriver/Selenium</strong> allowing easy use of <strong>Page Objects</strong> and wiring it all up with <strong>Groovy</strong>. Those of you that had chance to work with Selenium and write traditional functional web tests in Java, most likely are now wondering what sexy can be in Webdriver.

Well, most importantly, Geb takes away all the boilerplate code and Java ceremony, leaving for you to fill only the important parts with simple syntax, that all of jQuery users know already (most of the examples are taken from Geb site).
<pre class="brush: groovy; gutter: true; first-line: 1">$("div.some-class p:first[title='something']")
$("h1", 2, class: "heading")
$("p", text: contains("Geb"))
$("div").find(".b")
$("div").filter(".c").parents()
//Manipulating forms
$("form").name = "Geb"
assert $("form").name == "Geb"</pre>
Well, for me it looks like a jQuery. When you get out of syntax and reach test context, it's even better. Regardless of what testing framework you're currently using, Geb will work out of the box with it. Personally I've been using it with Spock, but it has support for JUnit, TestNG, EasyB and Cucumber. So you don't have to be concerned about learning another tool.

Let's check out example below where it's used with Spock
<pre class="brush: groovy; gutter: true; first-line: 1">class LoginSpec extends GebSpec {
    def "login to admin section"() {
        given:
        to LoginPage

        when:
        loginForm.with {
            username = "admin"
            password = "password"
        }

        and:
        loginButton.click()

        then:
        at AdminPage
    }
}</pre>
As you can see, it's just a standard Specification. Only difference is that you use one of Geb spec classes.

Big win in Geb are Page Objects. I haven't used them in Selenium, however as I understand they are available there. What is a Page Object? As name suggests, it's an object representation of a page :) To be bit more specific: it's a class inheriting from geb.Page class which role is to encapsulate all the interaction with the HTML page.
<pre class="brush: actionscript3; gutter: true; first-line: 1">class SignupPage extends Page {
    static url = "http://izawody.pl/signup"
    static at = { title == "Logowanie | iZawody" }
    static content = {
        loginField { $("input#login") }
        passwordField { $("input#password") }
        loginButton(to: DashboardPage) { $("input#loginButton") }
    }

    void login(String login. String password) {
        loginField.value login
		passwordField.value password
        loginButton.click()
    }
}

class DashboardPage extends Page {
    static at = { waitFor { title.endsWith("| iZawody dashboard") } }
}

//Test script
Browser.drive {
    to SignupPage
    login("admin", "admin")
    at DashboardPage
}</pre>
It helps as you create a lot of reusable code that encapsulate a lot of moving parts, like text on pages, id's, HTML structure. So after updating page template you need to only update page object in order to fix dozens of failing unit tests! That's just a huge win! As a side bonus, all the elements specified in the content section, are reachable in test script, so each element may have an abstraction layer :)

As Geb is just an more readable abstraction layer over Webdriver, as a bonus you get a full support for all the browsers that selenium uses, so you may run your tests in FF, Chrome, Opera, IE and there is experimental support for mobile browsers. If you're running on a server there is a driver for headless browser, so all covered :)

Only place where Geb falls short is if you aim for job security. Even with code obfuscator you're going to fail. Code is just damn too simple :(  Other than that Happy coding!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2014-02-09 18:20:52</wp:post_date>
		<wp:post_date_gmt>2014-02-09 16:20:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>geb-goodness</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="geb"><![CDATA[geb]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[geb,testing,groovy,selenium]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Overview of Geb testing tool features with samples of code]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Geb Goodness]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[geb-goodnes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Book review: Michał Bartyzel, &quot;Tailored software&quot;</title>
		<link>http://rits.pl/2014/05/11/book-review-michal-bartyzel-tailored-software/</link>
		<pubDate>Sun, 11 May 2014 17:55:52 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=488</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignright size-medium wp-image-489" src="http://rits.pl/wp-content/uploads/2014/05/bartyzel_klient-300x300.jpg" alt="Tailored software" width="300" height="300" />

That will be quite unusual post for at least two reasons. That's my first book review and what may sound dumb, I'm reviewing Polish book, that has not been translated to English <strong>yet</strong> (original title: <a title="Oprogramowanie szyte na miare - Helion, sklep" href="http://helion.pl/ksiazki/oprogramowanie-szyte-na-miare-jak-rozmawiac-z-klientem-ktory-nie-wie-czego-chce-michal-bartyzel,opszmi.htm"><em>Oprogramowanie Szyte na miarę</em></a>). If you wonder why I write this review in English, the answer is simple: I've heard rumors about the translation and I want to add my 2 cents to motivate the author to speed it up a bit :)

Recently I was discussing with <a title="Tomasz Dziurko twitter stream" href="https://twitter.com/tomaszdziurko">Tomasz Dziurko</a> on Twitter why I think that book <a title="Clean Code - amazon" href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882">Clean Code</a> should be read 3 times by every developer on this planet. Tailored Software is quite similar in this matter. It should be obligatory on last year of University and after a year or two in the field, for every IT professional that has to work with the client.

Let's start with the author of the book. <a title="Michał Bartyzel twitter stream" href="https://twitter.com/MichalBartyzel">Michal Bartyzel</a> is coaching IT teams in soft skills and is a real expert in this field. You don't have to trust me on that, if you've got a chance, then attend to one of his conference talks. That should not be hard as he's  speaker on all major conferences in Poland  and as far as I know he's now speaking in many conferences in Central Europe.

"<em>Tailored Software</em>" is a book that explains techniques of gathering requirements from the client, explains how to speak with other people, and shows couple of tricks that may be useful in the meetings. Michał gives a lot of examples and explains them in easy way so that even most hardcore backend developer, that never takes his earphones out, will be able to understand how to behave in given type of situation. And that is in my opinion, the biggest strength of this book: it's 1 on 1 with soft skills, but written in non boring and simple to absorb way for developers.

For graduates it should give a solid fundamentals that will allow them to avoid a ton of simple mistakes that I made during my first contacts with the client. If you're already working with the client day by day, this book can offer you a lot too. For me it was a great way to do retrospective on what I already learned on the subject.

Subtitle says: <em>How to talk with the client that does not know what he wants</em>. On the very beginning of the book, Michał explains that <em>client always knows what he wants, however he may not know what he needs</em>. And that is so very true. This book is full of such thoughts that are simple but can be game changing when you are in the meeting and getting angry on everyone else in the room. Remembering one of those quotes in tight situation can be a difference between having a project and punching someone in the face.

Michał did one more great thing in this book. When I was finishing reading this book today, I wanted to do standard notes about everything that is out there in the book. However that was not necessary. Last chapter is such summary with all the useful graphics and diagrams. So you have condensed knowledge ready whenever you need it. I would write exactly same thing, but without all the graphics, and those pictures are very helpful.

<strong>Summary</strong>

It's a great book, one of <em>must haves</em> in your library. Please ping Michał to motivate him to translate it into English. Also if you happen to live in tricity, then please do note that Michał <strong>donated</strong> several copies of his books to our library. We've given out most of them already, except for one in JUG library. So you've got a chance to read that book and in return me expect just a simple review (which may be in Polish of course). Review may be on your blog, site like goodreads or on the shop site. Please let me know (or any other of JUG leaders) that you want it or <a title="Tricity JUG bookshelf" href="http://trojmiasto.jug.pl/bookshelf/">any other book that we have</a> in our bookshelf.

&nbsp;

One thing <strong>worth</strong> remembering: title translation to <em>Tailored Software</em> is done by me. I don't know what will be the English title, so please write down author name if you want to wait for the book. I'll try to remember to update the post when translation is going to be published.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>488</wp:post_id>
		<wp:post_date>2014-05-11 19:55:52</wp:post_date>
		<wp:post_date_gmt>2014-05-11 17:55:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-review-michal-bartyzel-tailored-software</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book-review"><![CDATA[book review]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="soft-skills"><![CDATA[soft skills]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[mbartyzel]]></wp:comment_author>
			<wp:comment_author_email>mbartyzel.bnsit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.231.53.56</wp:comment_author_IP>
			<wp:comment_date>2014-05-11 23:27:31</wp:comment_date>
			<wp:comment_date_gmt>2014-05-11 21:27:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Thanks for reading the book and the effort of reviewing this. 
If about the English translation I did some work last year to attain this goals. Unfortunately my proposal was refused by publishers. 

I decided the topic needs to be more known. You right, I will give a speech on conferences outside the Poland and on Agile 2014 by Agile Alliance as well which is special honour for me.

Currently I translate this material on my own and publish it on http://conversation-patterns.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>hc_post_as</wp:meta_key>
				<wp:meta_value><![CDATA[wordpress]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_avatar</wp:meta_key>
				<wp:meta_value><![CDATA[http://0.gravatar.com/avatar/fa984ef47bcea19cd2bbf44c1a051228?s=25&d=http%3A%2F%2Fs2.wp.com%2Fwp-content%2Fmu-plugins%2Fhighlander-comments%2Fimages%2Fwplogo.png&r=G]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_foreign_user_id</wp:meta_key>
				<wp:meta_value><![CDATA[47554387]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_wpcom_id_sig</wp:meta_key>
				<wp:meta_value><![CDATA[973a805de8cb99cadb487f622b1d9d3ce86d8e39]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Horror of impl classes </title>
		<link>http://rits.pl/2014/12/12/horror-of-impl-classes/</link>
		<pubDate>Fri, 12 Dec 2014 19:10:50 +0000</pubDate>
		<dc:creator><![CDATA[Eladamari]]></dc:creator>
		<guid isPermaLink="false">http://rits.pl/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[If you've checked me on Twitter, you may have noticed <a href="http://rits.pl/wp-content/uploads/2014/12/2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox.png"><img class="alignright size-medium wp-image-501" src="http://rits.pl/wp-content/uploads/2014/12/2014-12-12_18-22-55_TweetDeck-Mozilla-Firefox-300x151.png" alt="My Twitter profile" width="300" height="151" /></a>my profile (screenshoot on right) and tag (?) line "Problem solver and father of many impl classes (not to proud about it).

That <em>(not to proud about it)</em> part is the reason why I'm writing this blog post. I've received a very long question regarding that part: "Why?". In follow up discussion I've agreed to share why I hate xxxImpl classes so much, even thou I've had written so many of 'em in my life.
<h2>Impl ==&gt; no idea of what I'm doing</h2>
Let's start first from that Impl suffix implies that we have properly named interface (at least something ;)). Going to basics, what an interface is? By wiki definition
<blockquote><strong>Interface</strong>: In object-oriented programming, a <b>protocol</b> or <b>interface</b> is a common means for unrelated objects to communicate with each other.</blockquote>
In my own words, it's a contract between client and class that's realizing the interface, it's also a one foundation of OO which allows us to do a polymorphism and realize encapsulation. We can leave encapsulation and go straight to polymorphism, which is why we do Java, OO and everything else ;)

Interface is just a contract, way in which it's going to be realized is totally dependant on implementation and there may be more than one (and even should!). Having just one implementation is not necessary wrong, and may have sense, however the biggest fail of 'em all is if that one implementation is called sthImpl. Why? Because it does not tell us anything at all (!) about how contract is being realized. In order to check it, we need to dive into code and figure it out.

We could do so much better! Let's take for example my project, and something I've been doing a week ago (while waiting for plane on lovely Munich airport).

We're extracting part of system functionality into a set of new projects which will be deployed on many servers. We needed a configuration module, however we could not decide about how we should realize that in distributed environment.

For first implementation I've decided to go with property files, tied close to implementation (please don't judge, has nothing to do with this post). So step one was to create a contract
<pre class="brush: java; gutter: true; first-line: 1">public interface Configuration {
    public Optional&lt;String&gt; get(String key);
}</pre>
and follow it with first implementation
<pre class="brush: java; gutter: true; first-line: 1">public class LocalPropertyFileConfiguration implements Configuration {

     //Constructor

     public Optional&lt;String&gt; get(String key){/*reading in .properties file*/};

}</pre>
We already consider to use ZooKeeper or some other 3rd party service for config, and it will be as simple as adding additional class (<em>ZookeeperConfiguration</em> ?:)) implementing our configuration interface. We may leave first implementation so it can be used in tests or just discard it, does not matter. What matters is that it has proper name.

True, but what comes with <em>proper</em> name is fact that if I ever decide to add more functionality or modify existing one, the name of the class itself will tell me if the change I want to introduce really fits the class. And if I need to expand responsibilities, then it's super easy to rename the class. Additional bonus: if new name is too cumbersome to say, maybe it's a good time to split it into couple classes?

So in this example if I'd see anything related to networking inside LocalPropertyFileConfiguration class, then I would start looking what the heck is happening right away, even if I'd see the class for first time. Impl does not give you that benefit.

&nbsp;

There is also additional code smell coming from the fact we're missing proper name: no one knows what is exactly the responsibility of the implementation. From vague names often comes God Classes to life. If anyone seen any xxxDaoImpl or xxxManagerImpl then you know what I'm taking about. That is also somewhat related to bad name of interface and not clear enough contract, however Impl classes tend to make things worse.

Also please think about <em>Strategy pattern</em>. It's really simple to just avoid creating new classes and instead add conditional statements inside one and only Impl. Proper name encourages you to write more classes instead of expanding existing one.
<h2>Takeaway</h2>
Please always consider what your class is doing, and name it after something specific to the class, even if it's as stupid as <em>UserJpaDao</em> instead of <em>UserDaoImpl</em>. More importantly, please consider if you need interface at all, if there is going to be just that impl class. Extracting interfaces using IDE is really simple! It's around 6 keystrokes away at any point of time!

Also don't sweat too much over names. I've come up with names in this post while writing that (c's I don't remember what are actual names in code), and IMHO it's good enough. Remember, improving naming later on is usually super easy :)

So have a nice day and make life better for everyone from Monday with not putting impls in your code.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2014-12-12 21:10:50</wp:post_date>
		<wp:post_date_gmt>2014-12-12 19:10:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>horror-of-impl-classes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="craftsmanship"><![CDATA[craftsmanship]]></category>
		<category domain="category" nicename="english"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_responsive_layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_ssb_hide</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
